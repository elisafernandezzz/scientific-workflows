{
    "name": "mag",
    "description": "Trace generated from Nextflow (via https://github.com/wfcommons/nextflow_workflow_tracer)",
    "createdAt": "2023-03-22T06:50:25.919057+00:00",
    "schemaVersion": "1.5",
    "workflow": {
        "repo": "https://github.com/nf-core/mag",
        "runName": "wise_torvalds",
        "specification": {
            "tasks": [
                {
                    "name": "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_BUILD",
                    "id": "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_BUILD_1",
                    "children": [
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_9",
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_10"
                    ],
                    "inputFiles": [
                        "/assets/data/GCA_002596845.1_ASM259684v1_genomic.fna.gz"
                    ],
                    "outputFiles": [
                        "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.1.bt2",
                        "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.2.bt2",
                        "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.3.bt2",
                        "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.4.bt2",
                        "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.rev.1.bt2",
                        "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.rev.2.bt2",
                        "/65/cca0d6e03987d09dfb6178128e570f/versions.yml"
                    ],
                    "parents": []
                },
                {
                    "name": "NFCORE_MAG.MAG.KRAKEN2_DB_PREPARATION",
                    "id": "NFCORE_MAG.MAG.KRAKEN2_DB_PREPARATION_3",
                    "children": [
                        "NFCORE_MAG.MAG.KRAKEN2_14",
                        "NFCORE_MAG.MAG.KRAKEN2_18"
                    ],
                    "inputFiles": [
                        "/nf-core/test-datasets/mag/test_data/minigut_kraken.tgz"
                    ],
                    "outputFiles": [
                        "/644e6092e3c12d271e3aba5effa524/database/hash.k2d",
                        "/644e6092e3c12d271e3aba5effa524/database/opts.k2d",
                        "/644e6092e3c12d271e3aba5effa524/database/taxo.k2d",
                        "/a6/644e6092e3c12d271e3aba5effa524/versions.yml"
                    ],
                    "parents": []
                },
                {
                    "name": "NFCORE_MAG.MAG.CENTRIFUGE_DB_PREPARATION",
                    "id": "NFCORE_MAG.MAG.CENTRIFUGE_DB_PREPARATION_4",
                    "children": [
                        "NFCORE_MAG.MAG.CENTRIFUGE_12",
                        "NFCORE_MAG.MAG.CENTRIFUGE_17"
                    ],
                    "inputFiles": [
                        "/nf-core/test-datasets/mag/test_data/minigut_cf.tar.gz"
                    ],
                    "outputFiles": [
                        "/29/d9bbf244f81d328b039396cf2f6556/minigut_cf.1.cf",
                        "/29/d9bbf244f81d328b039396cf2f6556/minigut_cf.2.cf",
                        "/29/d9bbf244f81d328b039396cf2f6556/minigut_cf.3.cf",
                        "/29/d9bbf244f81d328b039396cf2f6556/minigut_cf.4.cf",
                        "/29/d9bbf244f81d328b039396cf2f6556/versions.yml"
                    ],
                    "parents": []
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_95",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_100",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_91",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_102",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_89",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_86",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_97",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_93",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_103",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_110",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_112",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_118",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_107",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_114",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_119",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_128",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_105",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_109",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_116"
                    ],
                    "inputFiles": [
                        "/v5/data/lineages/bacteria_odb10.2020-03-06.tar.gz"
                    ],
                    "outputFiles": [
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10",
                        "/67/3b8667566a46b50251687dc3dbcaeb/bacteria_odb10.2020-03-06.tar.gz",
                        "/67/3b8667566a46b50251687dc3dbcaeb/versions.yml"
                    ],
                    "parents": []
                },
                {
                    "name": "NFCORE_MAG.MAG.FASTP",
                    "id": "NFCORE_MAG.MAG.FASTP_7",
                    "children": [
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_9",
                        "NFCORE_MAG.MAG.MULTIQC_157"
                    ],
                    "inputFiles": [
                        "/nf-core/test-datasets/raw/mag/test_data/test_minigut_sample2_R1.fastq.gz",
                        "/nf-core/test-datasets/raw/mag/test_data/test_minigut_sample2_R2.fastq.gz"
                    ],
                    "outputFiles": [
                        "/e1/9a7accee5f5f4db3f7c9248cada164/test_minigut_sample2_1.trim.fastq.gz",
                        "/e1/9a7accee5f5f4db3f7c9248cada164/test_minigut_sample2_2.trim.fastq.gz",
                        "/e1/9a7accee5f5f4db3f7c9248cada164/test_minigut_sample2.fastp.json",
                        "/e1/9a7accee5f5f4db3f7c9248cada164/test_minigut_sample2.fastp.html",
                        "/e1/9a7accee5f5f4db3f7c9248cada164/test_minigut_sample2.fastp.log",
                        "/e1/9a7accee5f5f4db3f7c9248cada164/versions.yml"
                    ],
                    "parents": []
                },
                {
                    "name": "NFCORE_MAG.MAG.FASTQC_RAW",
                    "id": "NFCORE_MAG.MAG.FASTQC_RAW_8",
                    "children": [
                        "NFCORE_MAG.MAG.MULTIQC_157"
                    ],
                    "inputFiles": [
                        "/nf-core/test-datasets/raw/mag/test_data/test_minigut_sample2_R1.fastq.gz",
                        "/nf-core/test-datasets/raw/mag/test_data/test_minigut_sample2_R2.fastq.gz"
                    ],
                    "outputFiles": [
                        "/6f/2f1ecb5353f866c1f6539117e859bd/test_minigut_sample2_1_fastqc.html",
                        "/6f/2f1ecb5353f866c1f6539117e859bd/test_minigut_sample2_2_fastqc.html",
                        "/6f/2f1ecb5353f866c1f6539117e859bd/test_minigut_sample2_1_fastqc.zip",
                        "/6f/2f1ecb5353f866c1f6539117e859bd/test_minigut_sample2_2_fastqc.zip",
                        "/6f/2f1ecb5353f866c1f6539117e859bd/versions.yml"
                    ],
                    "parents": []
                },
                {
                    "name": "NFCORE_MAG.MAG.FASTQC_RAW",
                    "id": "NFCORE_MAG.MAG.FASTQC_RAW_5",
                    "children": [
                        "NFCORE_MAG.MAG.MULTIQC_157"
                    ],
                    "inputFiles": [
                        "/nf-core/test-datasets/raw/mag/test_data/test_minigut_R1.fastq.gz",
                        "/nf-core/test-datasets/raw/mag/test_data/test_minigut_R2.fastq.gz"
                    ],
                    "outputFiles": [
                        "/50/450582b8fedacb9adbb8d3bd395bc7/test_minigut_1_fastqc.html",
                        "/50/450582b8fedacb9adbb8d3bd395bc7/test_minigut_2_fastqc.html",
                        "/50/450582b8fedacb9adbb8d3bd395bc7/test_minigut_1_fastqc.zip",
                        "/50/450582b8fedacb9adbb8d3bd395bc7/test_minigut_2_fastqc.zip",
                        "/50/450582b8fedacb9adbb8d3bd395bc7/versions.yml"
                    ],
                    "parents": []
                },
                {
                    "name": "NFCORE_MAG.MAG.FASTP",
                    "id": "NFCORE_MAG.MAG.FASTP_6",
                    "children": [
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_10",
                        "NFCORE_MAG.MAG.MULTIQC_157"
                    ],
                    "inputFiles": [
                        "/nf-core/test-datasets/raw/mag/test_data/test_minigut_R1.fastq.gz",
                        "/nf-core/test-datasets/raw/mag/test_data/test_minigut_R2.fastq.gz"
                    ],
                    "outputFiles": [
                        "/ef/a6a4e285761f2a6fdc82cd62443b5b/test_minigut_1.trim.fastq.gz",
                        "/ef/a6a4e285761f2a6fdc82cd62443b5b/test_minigut_2.trim.fastq.gz",
                        "/ef/a6a4e285761f2a6fdc82cd62443b5b/test_minigut.fastp.json",
                        "/ef/a6a4e285761f2a6fdc82cd62443b5b/test_minigut.fastp.html",
                        "/ef/a6a4e285761f2a6fdc82cd62443b5b/test_minigut.fastp.log",
                        "/ef/a6a4e285761f2a6fdc82cd62443b5b/versions.yml"
                    ],
                    "parents": []
                },
                {
                    "name": "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                    "id": "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_9",
                    "children": [
                        "NFCORE_MAG.MAG.KRAKEN2_14",
                        "NFCORE_MAG.MAG.FASTQC_TRIMMED_13",
                        "NFCORE_MAG.MAG.CENTRIFUGE_12",
                        "NFCORE_MAG.MAG.SPADES_11",
                        "NFCORE_MAG.MAG.MEGAHIT_15",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_33",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_35",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_37",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_39"
                    ],
                    "inputFiles": [
                        "/e1/9a7accee5f5f4db3f7c9248cada164/test_minigut_sample2_1.trim.fastq.gz",
                        "/e1/9a7accee5f5f4db3f7c9248cada164/test_minigut_sample2_2.trim.fastq.gz",
                        "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.1.bt2",
                        "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.2.bt2",
                        "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.3.bt2",
                        "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.4.bt2",
                        "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.rev.1.bt2",
                        "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.rev.2.bt2"
                    ],
                    "outputFiles": [
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.bowtie2.log",
                        "/ea/1e72e1b1377c3d02c04de57959f90c/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.FASTP_7",
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_BUILD_1"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                    "id": "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_10",
                    "children": [
                        "NFCORE_MAG.MAG.CENTRIFUGE_17",
                        "NFCORE_MAG.MAG.SPADES_19",
                        "NFCORE_MAG.MAG.KRAKEN2_18",
                        "NFCORE_MAG.MAG.FASTQC_TRIMMED_16",
                        "NFCORE_MAG.MAG.MEGAHIT_20",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_34",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_36",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_38",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_40"
                    ],
                    "inputFiles": [
                        "/ef/a6a4e285761f2a6fdc82cd62443b5b/test_minigut_1.trim.fastq.gz",
                        "/ef/a6a4e285761f2a6fdc82cd62443b5b/test_minigut_2.trim.fastq.gz",
                        "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.1.bt2",
                        "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.2.bt2",
                        "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.3.bt2",
                        "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.4.bt2",
                        "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.rev.1.bt2",
                        "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.rev.2.bt2"
                    ],
                    "outputFiles": [
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.bowtie2.log",
                        "/38/3e15417f276043c818951567f10ef3/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.FASTP_6",
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_BUILD_1"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.KRAKEN2",
                    "id": "NFCORE_MAG.MAG.KRAKEN2_14",
                    "children": [],
                    "inputFiles": [
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "/644e6092e3c12d271e3aba5effa524/database/hash.k2d",
                        "/644e6092e3c12d271e3aba5effa524/database/opts.k2d",
                        "/644e6092e3c12d271e3aba5effa524/database/taxo.k2d"
                    ],
                    "outputFiles": [
                        "/64/ac465571215560fb4f940988bed32e/results.krona",
                        "/64/ac465571215560fb4f940988bed32e/kraken2_report.txt",
                        "/64/ac465571215560fb4f940988bed32e/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_9",
                        "NFCORE_MAG.MAG.KRAKEN2_DB_PREPARATION_3"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.FASTQC_TRIMMED",
                    "id": "NFCORE_MAG.MAG.FASTQC_TRIMMED_13",
                    "children": [
                        "NFCORE_MAG.MAG.MULTIQC_157"
                    ],
                    "inputFiles": [
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_2.fastq.gz"
                    ],
                    "outputFiles": [
                        "/76/d4869464a5074828810a263f222c16/test_minigut_sample2.trimmed_1_fastqc.html",
                        "/76/d4869464a5074828810a263f222c16/test_minigut_sample2.trimmed_2_fastqc.html",
                        "/76/d4869464a5074828810a263f222c16/test_minigut_sample2.trimmed_1_fastqc.zip",
                        "/76/d4869464a5074828810a263f222c16/test_minigut_sample2.trimmed_2_fastqc.zip",
                        "/76/d4869464a5074828810a263f222c16/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_9"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.CENTRIFUGE",
                    "id": "NFCORE_MAG.MAG.CENTRIFUGE_12",
                    "children": [],
                    "inputFiles": [
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "/29/d9bbf244f81d328b039396cf2f6556/minigut_cf.1.cf",
                        "/29/d9bbf244f81d328b039396cf2f6556/minigut_cf.2.cf",
                        "/29/d9bbf244f81d328b039396cf2f6556/minigut_cf.3.cf",
                        "/29/d9bbf244f81d328b039396cf2f6556/minigut_cf.4.cf"
                    ],
                    "outputFiles": [
                        "/33/6b3a353b633c73ead2741ef5975521/results.krona",
                        "/33/6b3a353b633c73ead2741ef5975521/report.txt",
                        "/33/6b3a353b633c73ead2741ef5975521/kreport.txt",
                        "/33/6b3a353b633c73ead2741ef5975521/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_9",
                        "NFCORE_MAG.MAG.CENTRIFUGE_DB_PREPARATION_4"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.SPADES",
                    "id": "NFCORE_MAG.MAG.SPADES_11",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_22",
                        "NFCORE_MAG.MAG.PRODIGAL_21",
                        "NFCORE_MAG.MAG.QUAST_23"
                    ],
                    "inputFiles": [
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_2.fastq.gz"
                    ],
                    "outputFiles": [
                        "/49/459b733ed35ca7c4770c41c0deb106/SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "/49/459b733ed35ca7c4770c41c0deb106/SPAdes-test_minigut_sample2.log",
                        "/49/459b733ed35ca7c4770c41c0deb106/SPAdes-test_minigut_sample2_contigs.fasta.gz",
                        "/49/459b733ed35ca7c4770c41c0deb106/SPAdes-test_minigut_sample2_scaffolds.fasta.gz",
                        "/49/459b733ed35ca7c4770c41c0deb106/SPAdes-test_minigut_sample2_graph.gfa.gz",
                        "/49/459b733ed35ca7c4770c41c0deb106/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_9"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.MEGAHIT",
                    "id": "NFCORE_MAG.MAG.MEGAHIT_15",
                    "children": [
                        "NFCORE_MAG.MAG.QUAST_26",
                        "NFCORE_MAG.MAG.PRODIGAL_25",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_24"
                    ],
                    "inputFiles": [
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_2.fastq.gz"
                    ],
                    "outputFiles": [
                        "/a492871941f9de2ee62bab563f685e/MEGAHIT/MEGAHIT-test_minigut_sample2.contigs.fa",
                        "/a492871941f9de2ee62bab563f685e/MEGAHIT/MEGAHIT-test_minigut_sample2.log",
                        "/a492871941f9de2ee62bab563f685e/MEGAHIT/MEGAHIT-test_minigut_sample2.contigs.fa.gz",
                        "/83/a492871941f9de2ee62bab563f685e/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_9"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.CENTRIFUGE",
                    "id": "NFCORE_MAG.MAG.CENTRIFUGE_17",
                    "children": [],
                    "inputFiles": [
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "/29/d9bbf244f81d328b039396cf2f6556/minigut_cf.1.cf",
                        "/29/d9bbf244f81d328b039396cf2f6556/minigut_cf.2.cf",
                        "/29/d9bbf244f81d328b039396cf2f6556/minigut_cf.3.cf",
                        "/29/d9bbf244f81d328b039396cf2f6556/minigut_cf.4.cf"
                    ],
                    "outputFiles": [
                        "/1c/1e5e8125d64e1dd5306b85c6967d69/results.krona",
                        "/1c/1e5e8125d64e1dd5306b85c6967d69/report.txt",
                        "/1c/1e5e8125d64e1dd5306b85c6967d69/kreport.txt",
                        "/1c/1e5e8125d64e1dd5306b85c6967d69/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_10",
                        "NFCORE_MAG.MAG.CENTRIFUGE_DB_PREPARATION_4"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.SPADES",
                    "id": "NFCORE_MAG.MAG.SPADES_19",
                    "children": [
                        "NFCORE_MAG.MAG.QUAST_27",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_29",
                        "NFCORE_MAG.MAG.PRODIGAL_28"
                    ],
                    "inputFiles": [
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_2.fastq.gz"
                    ],
                    "outputFiles": [
                        "/cc/88fddc4525a53abf78a8bcde4df507/SPAdes-test_minigut_scaffolds.fasta",
                        "/cc/88fddc4525a53abf78a8bcde4df507/SPAdes-test_minigut.log",
                        "/cc/88fddc4525a53abf78a8bcde4df507/SPAdes-test_minigut_contigs.fasta.gz",
                        "/cc/88fddc4525a53abf78a8bcde4df507/SPAdes-test_minigut_scaffolds.fasta.gz",
                        "/cc/88fddc4525a53abf78a8bcde4df507/SPAdes-test_minigut_graph.gfa.gz",
                        "/cc/88fddc4525a53abf78a8bcde4df507/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_10"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.KRAKEN2",
                    "id": "NFCORE_MAG.MAG.KRAKEN2_18",
                    "children": [],
                    "inputFiles": [
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "/644e6092e3c12d271e3aba5effa524/database/hash.k2d",
                        "/644e6092e3c12d271e3aba5effa524/database/opts.k2d",
                        "/644e6092e3c12d271e3aba5effa524/database/taxo.k2d"
                    ],
                    "outputFiles": [
                        "/9e/be323b74a69fcf33b7f7a228009a3a/results.krona",
                        "/9e/be323b74a69fcf33b7f7a228009a3a/kraken2_report.txt",
                        "/9e/be323b74a69fcf33b7f7a228009a3a/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_10",
                        "NFCORE_MAG.MAG.KRAKEN2_DB_PREPARATION_3"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.FASTQC_TRIMMED",
                    "id": "NFCORE_MAG.MAG.FASTQC_TRIMMED_16",
                    "children": [
                        "NFCORE_MAG.MAG.MULTIQC_157"
                    ],
                    "inputFiles": [
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_2.fastq.gz"
                    ],
                    "outputFiles": [
                        "/8b/951f59ff6eff428229c9d8deeb003f/test_minigut.trimmed_1_fastqc.html",
                        "/8b/951f59ff6eff428229c9d8deeb003f/test_minigut.trimmed_2_fastqc.html",
                        "/8b/951f59ff6eff428229c9d8deeb003f/test_minigut.trimmed_1_fastqc.zip",
                        "/8b/951f59ff6eff428229c9d8deeb003f/test_minigut.trimmed_2_fastqc.zip",
                        "/8b/951f59ff6eff428229c9d8deeb003f/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_10"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.MEGAHIT",
                    "id": "NFCORE_MAG.MAG.MEGAHIT_20",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_32",
                        "NFCORE_MAG.MAG.PRODIGAL_30",
                        "NFCORE_MAG.MAG.QUAST_31"
                    ],
                    "inputFiles": [
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_2.fastq.gz"
                    ],
                    "outputFiles": [
                        "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/MEGAHIT-test_minigut.contigs.fa",
                        "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/MEGAHIT-test_minigut.log",
                        "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/MEGAHIT-test_minigut.contigs.fa.gz",
                        "/c2/101a0fb9edf105a9bbbaa4215ca2b5/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_10"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_22",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_34",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_33"
                    ],
                    "inputFiles": [
                        "/49/459b733ed35ca7c4770c41c0deb106/SPAdes-test_minigut_sample2_scaffolds.fasta"
                    ],
                    "outputFiles": [
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.1.bt2",
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.2.bt2",
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.3.bt2",
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.4.bt2",
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.rev.1.bt2",
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.rev.2.bt2",
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.SPADES_11"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PRODIGAL",
                    "id": "NFCORE_MAG.MAG.PRODIGAL_21",
                    "children": [],
                    "inputFiles": [
                        "/49/459b733ed35ca7c4770c41c0deb106/SPAdes-test_minigut_sample2_scaffolds.fasta"
                    ],
                    "outputFiles": [
                        "/9e/34f9fa9af0d2520ba072bb7e5902dc/test_minigut_sample2.gff",
                        "/9e/34f9fa9af0d2520ba072bb7e5902dc/test_minigut_sample2.fna",
                        "/9e/34f9fa9af0d2520ba072bb7e5902dc/test_minigut_sample2.faa",
                        "/9e/34f9fa9af0d2520ba072bb7e5902dc/test_minigut_sample2_all.txt",
                        "/9e/34f9fa9af0d2520ba072bb7e5902dc/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.SPADES_11"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.QUAST",
                    "id": "NFCORE_MAG.MAG.QUAST_23",
                    "children": [
                        "NFCORE_MAG.MAG.MULTIQC_157"
                    ],
                    "inputFiles": [
                        "/49/459b733ed35ca7c4770c41c0deb106/SPAdes-test_minigut_sample2_scaffolds.fasta"
                    ],
                    "outputFiles": [
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/basic_stats",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/icarus.html",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/icarus_viewers",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/metaquast.log",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/predicted_genes",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/quast.log",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/report.html",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/report.pdf",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/report.tex",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/report.tsv",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/report.txt",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/transposed_report.tex",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/transposed_report.tsv",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/transposed_report.txt",
                        "/cc/0141a35dc4cfe921c2795e8375987c/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.SPADES_11"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.QUAST",
                    "id": "NFCORE_MAG.MAG.QUAST_26",
                    "children": [
                        "NFCORE_MAG.MAG.MULTIQC_157"
                    ],
                    "inputFiles": [
                        "/a492871941f9de2ee62bab563f685e/MEGAHIT/MEGAHIT-test_minigut_sample2.contigs.fa"
                    ],
                    "outputFiles": [
                        "/f3bde70ef3b153d702923d488c467a/QUAST/basic_stats",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/icarus.html",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/icarus_viewers",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/metaquast.log",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/predicted_genes",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/quast.log",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/report.html",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/report.pdf",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/report.tex",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/report.tsv",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/report.txt",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/transposed_report.tex",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/transposed_report.tsv",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/transposed_report.txt",
                        "/df/f3bde70ef3b153d702923d488c467a/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.MEGAHIT_15"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PRODIGAL",
                    "id": "NFCORE_MAG.MAG.PRODIGAL_25",
                    "children": [],
                    "inputFiles": [
                        "/a492871941f9de2ee62bab563f685e/MEGAHIT/MEGAHIT-test_minigut_sample2.contigs.fa"
                    ],
                    "outputFiles": [
                        "/fe/428751a5e94188b50f851df1687601/test_minigut_sample2.gff",
                        "/fe/428751a5e94188b50f851df1687601/test_minigut_sample2.fna",
                        "/fe/428751a5e94188b50f851df1687601/test_minigut_sample2.faa",
                        "/fe/428751a5e94188b50f851df1687601/test_minigut_sample2_all.txt",
                        "/fe/428751a5e94188b50f851df1687601/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.MEGAHIT_15"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_24",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_35",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_36"
                    ],
                    "inputFiles": [
                        "/a492871941f9de2ee62bab563f685e/MEGAHIT/MEGAHIT-test_minigut_sample2.contigs.fa"
                    ],
                    "outputFiles": [
                        "/07/87e9c4d88fd86673023dfb965e4c2c/MEGAHIT-test_minigut_sample2.contigs.fa",
                        "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.1.bt2",
                        "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.2.bt2",
                        "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.3.bt2",
                        "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.4.bt2",
                        "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.rev.1.bt2",
                        "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.rev.2.bt2",
                        "/07/87e9c4d88fd86673023dfb965e4c2c/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.MEGAHIT_15"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.QUAST",
                    "id": "NFCORE_MAG.MAG.QUAST_27",
                    "children": [
                        "NFCORE_MAG.MAG.MULTIQC_157"
                    ],
                    "inputFiles": [
                        "/cc/88fddc4525a53abf78a8bcde4df507/SPAdes-test_minigut_scaffolds.fasta"
                    ],
                    "outputFiles": [
                        "/12f50d9fab75af67b6d58104068945/QUAST/basic_stats",
                        "/12f50d9fab75af67b6d58104068945/QUAST/icarus.html",
                        "/12f50d9fab75af67b6d58104068945/QUAST/icarus_viewers",
                        "/12f50d9fab75af67b6d58104068945/QUAST/metaquast.log",
                        "/12f50d9fab75af67b6d58104068945/QUAST/predicted_genes",
                        "/12f50d9fab75af67b6d58104068945/QUAST/quast.log",
                        "/12f50d9fab75af67b6d58104068945/QUAST/report.html",
                        "/12f50d9fab75af67b6d58104068945/QUAST/report.pdf",
                        "/12f50d9fab75af67b6d58104068945/QUAST/report.tex",
                        "/12f50d9fab75af67b6d58104068945/QUAST/report.tsv",
                        "/12f50d9fab75af67b6d58104068945/QUAST/report.txt",
                        "/12f50d9fab75af67b6d58104068945/QUAST/transposed_report.tex",
                        "/12f50d9fab75af67b6d58104068945/QUAST/transposed_report.tsv",
                        "/12f50d9fab75af67b6d58104068945/QUAST/transposed_report.txt",
                        "/72/12f50d9fab75af67b6d58104068945/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.SPADES_19"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_29",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_37",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_38"
                    ],
                    "inputFiles": [
                        "/cc/88fddc4525a53abf78a8bcde4df507/SPAdes-test_minigut_scaffolds.fasta"
                    ],
                    "outputFiles": [
                        "/ad/7acd00155343da79afb654e1f955b6/SPAdes-test_minigut_scaffolds.fasta",
                        "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.1.bt2",
                        "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.2.bt2",
                        "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.3.bt2",
                        "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.4.bt2",
                        "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.rev.1.bt2",
                        "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.rev.2.bt2",
                        "/ad/7acd00155343da79afb654e1f955b6/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.SPADES_19"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PRODIGAL",
                    "id": "NFCORE_MAG.MAG.PRODIGAL_28",
                    "children": [],
                    "inputFiles": [
                        "/cc/88fddc4525a53abf78a8bcde4df507/SPAdes-test_minigut_scaffolds.fasta"
                    ],
                    "outputFiles": [
                        "/e5/ae2196ddf7e7a335e47496cee0bf8d/test_minigut.gff",
                        "/e5/ae2196ddf7e7a335e47496cee0bf8d/test_minigut.fna",
                        "/e5/ae2196ddf7e7a335e47496cee0bf8d/test_minigut.faa",
                        "/e5/ae2196ddf7e7a335e47496cee0bf8d/test_minigut_all.txt",
                        "/e5/ae2196ddf7e7a335e47496cee0bf8d/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.SPADES_19"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_32",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_39",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_40"
                    ],
                    "inputFiles": [
                        "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/MEGAHIT-test_minigut.contigs.fa"
                    ],
                    "outputFiles": [
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/MEGAHIT-test_minigut.contigs.fa",
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.1.bt2",
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.2.bt2",
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.3.bt2",
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.4.bt2",
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.rev.1.bt2",
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.rev.2.bt2",
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.MEGAHIT_20"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PRODIGAL",
                    "id": "NFCORE_MAG.MAG.PRODIGAL_30",
                    "children": [],
                    "inputFiles": [
                        "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/MEGAHIT-test_minigut.contigs.fa"
                    ],
                    "outputFiles": [
                        "/3f/b0c9416faa2c6d3b038c04a767bbce/test_minigut.gff",
                        "/3f/b0c9416faa2c6d3b038c04a767bbce/test_minigut.fna",
                        "/3f/b0c9416faa2c6d3b038c04a767bbce/test_minigut.faa",
                        "/3f/b0c9416faa2c6d3b038c04a767bbce/test_minigut_all.txt",
                        "/3f/b0c9416faa2c6d3b038c04a767bbce/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.MEGAHIT_20"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.QUAST",
                    "id": "NFCORE_MAG.MAG.QUAST_31",
                    "children": [
                        "NFCORE_MAG.MAG.MULTIQC_157"
                    ],
                    "inputFiles": [
                        "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/MEGAHIT-test_minigut.contigs.fa"
                    ],
                    "outputFiles": [
                        "/970e9d834edce57f29423a99aac816/QUAST/basic_stats",
                        "/970e9d834edce57f29423a99aac816/QUAST/icarus.html",
                        "/970e9d834edce57f29423a99aac816/QUAST/icarus_viewers",
                        "/970e9d834edce57f29423a99aac816/QUAST/metaquast.log",
                        "/970e9d834edce57f29423a99aac816/QUAST/predicted_genes",
                        "/970e9d834edce57f29423a99aac816/QUAST/quast.log",
                        "/970e9d834edce57f29423a99aac816/QUAST/report.html",
                        "/970e9d834edce57f29423a99aac816/QUAST/report.pdf",
                        "/970e9d834edce57f29423a99aac816/QUAST/report.tex",
                        "/970e9d834edce57f29423a99aac816/QUAST/report.tsv",
                        "/970e9d834edce57f29423a99aac816/QUAST/report.txt",
                        "/970e9d834edce57f29423a99aac816/QUAST/transposed_report.tex",
                        "/970e9d834edce57f29423a99aac816/QUAST/transposed_report.tsv",
                        "/970e9d834edce57f29423a99aac816/QUAST/transposed_report.txt",
                        "/b7/970e9d834edce57f29423a99aac816/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.MEGAHIT_20"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_34",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_41"
                    ],
                    "inputFiles": [
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.1.bt2",
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.2.bt2",
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.3.bt2",
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.4.bt2",
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.rev.1.bt2",
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.rev.2.bt2",
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_2.fastq.gz"
                    ],
                    "outputFiles": [
                        "/e5/0b51f7ab520a9b0717d009ec567a92/SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "/e5/0b51f7ab520a9b0717d009ec567a92/SPAdes-test_minigut_sample2-test_minigut.bam",
                        "/e5/0b51f7ab520a9b0717d009ec567a92/SPAdes-test_minigut_sample2-test_minigut.bam.bai",
                        "/e5/0b51f7ab520a9b0717d009ec567a92/SPAdes-test_minigut_sample2-test_minigut.bowtie2.log",
                        "/e5/0b51f7ab520a9b0717d009ec567a92/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_22",
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_10"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_33",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_41",
                        "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_52",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_51",
                        "NFCORE_MAG.MAG.MULTIQC_157"
                    ],
                    "inputFiles": [
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.1.bt2",
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.2.bt2",
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.3.bt2",
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.4.bt2",
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.rev.1.bt2",
                        "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.rev.2.bt2",
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_2.fastq.gz"
                    ],
                    "outputFiles": [
                        "/0e/af902dd643f65055d1d1a4cdc03eec/SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "/0e/af902dd643f65055d1d1a4cdc03eec/SPAdes-test_minigut_sample2-test_minigut_sample2.bam",
                        "/0e/af902dd643f65055d1d1a4cdc03eec/SPAdes-test_minigut_sample2-test_minigut_sample2.bam.bai",
                        "/0e/af902dd643f65055d1d1a4cdc03eec/SPAdes-test_minigut_sample2.bowtie2.log",
                        "/0e/af902dd643f65055d1d1a4cdc03eec/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_22",
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_9"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_35",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_42",
                        "NFCORE_MAG.MAG.MULTIQC_157"
                    ],
                    "inputFiles": [
                        "/07/87e9c4d88fd86673023dfb965e4c2c/MEGAHIT-test_minigut_sample2.contigs.fa",
                        "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.1.bt2",
                        "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.2.bt2",
                        "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.3.bt2",
                        "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.4.bt2",
                        "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.rev.1.bt2",
                        "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.rev.2.bt2",
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_2.fastq.gz"
                    ],
                    "outputFiles": [
                        "/d3/c332ef8efac5a782924ca4114ed8cd/MEGAHIT-test_minigut_sample2.contigs.fa",
                        "/d3/c332ef8efac5a782924ca4114ed8cd/MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam",
                        "/d3/c332ef8efac5a782924ca4114ed8cd/MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam.bai",
                        "/d3/c332ef8efac5a782924ca4114ed8cd/MEGAHIT-test_minigut_sample2.bowtie2.log",
                        "/d3/c332ef8efac5a782924ca4114ed8cd/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_24",
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_9"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_36",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_42",
                        "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_47",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_48"
                    ],
                    "inputFiles": [
                        "/07/87e9c4d88fd86673023dfb965e4c2c/MEGAHIT-test_minigut_sample2.contigs.fa",
                        "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.1.bt2",
                        "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.2.bt2",
                        "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.3.bt2",
                        "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.4.bt2",
                        "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.rev.1.bt2",
                        "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.rev.2.bt2",
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_2.fastq.gz"
                    ],
                    "outputFiles": [
                        "/ad/e50bbcab2d4de0a030682118b95da7/MEGAHIT-test_minigut_sample2.contigs.fa",
                        "/ad/e50bbcab2d4de0a030682118b95da7/MEGAHIT-test_minigut_sample2-test_minigut.bam",
                        "/ad/e50bbcab2d4de0a030682118b95da7/MEGAHIT-test_minigut_sample2-test_minigut.bam.bai",
                        "/ad/e50bbcab2d4de0a030682118b95da7/MEGAHIT-test_minigut_sample2-test_minigut.bowtie2.log",
                        "/ad/e50bbcab2d4de0a030682118b95da7/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_24",
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_10"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_37",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_43"
                    ],
                    "inputFiles": [
                        "/ad/7acd00155343da79afb654e1f955b6/SPAdes-test_minigut_scaffolds.fasta",
                        "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.1.bt2",
                        "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.2.bt2",
                        "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.3.bt2",
                        "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.4.bt2",
                        "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.rev.1.bt2",
                        "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.rev.2.bt2",
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_2.fastq.gz"
                    ],
                    "outputFiles": [
                        "/b3/84346a33369d5dc4712e03db3b5e82/SPAdes-test_minigut_scaffolds.fasta",
                        "/b3/84346a33369d5dc4712e03db3b5e82/SPAdes-test_minigut-test_minigut_sample2.bam",
                        "/b3/84346a33369d5dc4712e03db3b5e82/SPAdes-test_minigut-test_minigut_sample2.bam.bai",
                        "/b3/84346a33369d5dc4712e03db3b5e82/SPAdes-test_minigut-test_minigut_sample2.bowtie2.log",
                        "/b3/84346a33369d5dc4712e03db3b5e82/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_29",
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_9"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_38",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_43",
                        "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_50",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_49",
                        "NFCORE_MAG.MAG.MULTIQC_157"
                    ],
                    "inputFiles": [
                        "/ad/7acd00155343da79afb654e1f955b6/SPAdes-test_minigut_scaffolds.fasta",
                        "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.1.bt2",
                        "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.2.bt2",
                        "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.3.bt2",
                        "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.4.bt2",
                        "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.rev.1.bt2",
                        "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.rev.2.bt2",
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_2.fastq.gz"
                    ],
                    "outputFiles": [
                        "/19/a9432a2954b25b99d4bcbc6ae5dbb7/SPAdes-test_minigut_scaffolds.fasta",
                        "/19/a9432a2954b25b99d4bcbc6ae5dbb7/SPAdes-test_minigut-test_minigut.bam",
                        "/19/a9432a2954b25b99d4bcbc6ae5dbb7/SPAdes-test_minigut-test_minigut.bam.bai",
                        "/19/a9432a2954b25b99d4bcbc6ae5dbb7/SPAdes-test_minigut.bowtie2.log",
                        "/19/a9432a2954b25b99d4bcbc6ae5dbb7/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_29",
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_10"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_39",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_44",
                        "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_46",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_45"
                    ],
                    "inputFiles": [
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/MEGAHIT-test_minigut.contigs.fa",
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.1.bt2",
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.2.bt2",
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.3.bt2",
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.4.bt2",
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.rev.1.bt2",
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.rev.2.bt2",
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_2.fastq.gz"
                    ],
                    "outputFiles": [
                        "/01/6d18a168dd7f411df28f1132ebbd09/MEGAHIT-test_minigut.contigs.fa",
                        "/01/6d18a168dd7f411df28f1132ebbd09/MEGAHIT-test_minigut-test_minigut_sample2.bam",
                        "/01/6d18a168dd7f411df28f1132ebbd09/MEGAHIT-test_minigut-test_minigut_sample2.bam.bai",
                        "/01/6d18a168dd7f411df28f1132ebbd09/MEGAHIT-test_minigut-test_minigut_sample2.bowtie2.log",
                        "/01/6d18a168dd7f411df28f1132ebbd09/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_32",
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_9"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_40",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_44",
                        "NFCORE_MAG.MAG.MULTIQC_157"
                    ],
                    "inputFiles": [
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/MEGAHIT-test_minigut.contigs.fa",
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.1.bt2",
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.2.bt2",
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.3.bt2",
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.4.bt2",
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.rev.1.bt2",
                        "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.rev.2.bt2",
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_2.fastq.gz"
                    ],
                    "outputFiles": [
                        "/34/adfd77975be3d0c5eaa06394c1187e/MEGAHIT-test_minigut.contigs.fa",
                        "/34/adfd77975be3d0c5eaa06394c1187e/MEGAHIT-test_minigut-test_minigut.bam",
                        "/34/adfd77975be3d0c5eaa06394c1187e/MEGAHIT-test_minigut-test_minigut.bam.bai",
                        "/34/adfd77975be3d0c5eaa06394c1187e/MEGAHIT-test_minigut.bowtie2.log",
                        "/34/adfd77975be3d0c5eaa06394c1187e/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_32",
                        "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_10"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "id": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_44",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_46",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_45",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_121",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_120"
                    ],
                    "inputFiles": [
                        "/01/6d18a168dd7f411df28f1132ebbd09/MEGAHIT-test_minigut-test_minigut_sample2.bam",
                        "/34/adfd77975be3d0c5eaa06394c1187e/MEGAHIT-test_minigut-test_minigut.bam",
                        "/01/6d18a168dd7f411df28f1132ebbd09/MEGAHIT-test_minigut-test_minigut_sample2.bam.bai",
                        "/34/adfd77975be3d0c5eaa06394c1187e/MEGAHIT-test_minigut-test_minigut.bam.bai"
                    ],
                    "outputFiles": [
                        "/f6/6a47e0524654d82be0e49d00c99f57/MEGAHIT-test_minigut-depth.txt.gz",
                        "/f6/6a47e0524654d82be0e49d00c99f57/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_39",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_40"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "id": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_42",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_47",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_48",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_131"
                    ],
                    "inputFiles": [
                        "/d3/c332ef8efac5a782924ca4114ed8cd/MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam",
                        "/ad/e50bbcab2d4de0a030682118b95da7/MEGAHIT-test_minigut_sample2-test_minigut.bam",
                        "/d3/c332ef8efac5a782924ca4114ed8cd/MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam.bai",
                        "/ad/e50bbcab2d4de0a030682118b95da7/MEGAHIT-test_minigut_sample2-test_minigut.bam.bai"
                    ],
                    "outputFiles": [
                        "/2e/a229c3916a098bd7377027fedb4d42/MEGAHIT-test_minigut_sample2-depth.txt.gz",
                        "/2e/a229c3916a098bd7377027fedb4d42/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_35",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_36"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "id": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_43",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_50",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_49",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_126",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_122"
                    ],
                    "inputFiles": [
                        "/b3/84346a33369d5dc4712e03db3b5e82/SPAdes-test_minigut-test_minigut_sample2.bam",
                        "/19/a9432a2954b25b99d4bcbc6ae5dbb7/SPAdes-test_minigut-test_minigut.bam",
                        "/b3/84346a33369d5dc4712e03db3b5e82/SPAdes-test_minigut-test_minigut_sample2.bam.bai",
                        "/19/a9432a2954b25b99d4bcbc6ae5dbb7/SPAdes-test_minigut-test_minigut.bam.bai"
                    ],
                    "outputFiles": [
                        "/4d/44326243720ca4a7cc916be905b3c4/SPAdes-test_minigut-depth.txt.gz",
                        "/4d/44326243720ca4a7cc916be905b3c4/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_37",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_38"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "id": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_41",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_52",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_51",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_133",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_134"
                    ],
                    "inputFiles": [
                        "/e5/0b51f7ab520a9b0717d009ec567a92/SPAdes-test_minigut_sample2-test_minigut.bam",
                        "/0e/af902dd643f65055d1d1a4cdc03eec/SPAdes-test_minigut_sample2-test_minigut_sample2.bam",
                        "/e5/0b51f7ab520a9b0717d009ec567a92/SPAdes-test_minigut_sample2-test_minigut.bam.bai",
                        "/0e/af902dd643f65055d1d1a4cdc03eec/SPAdes-test_minigut_sample2-test_minigut_sample2.bam.bai"
                    ],
                    "outputFiles": [
                        "/79/03b1ed263b1ee1ec46fe396818f239/SPAdes-test_minigut_sample2-depth.txt.gz",
                        "/79/03b1ed263b1ee1ec46fe396818f239/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_34",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_33"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "id": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_46",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.MAXBIN2_53"
                    ],
                    "inputFiles": [
                        "/01/6d18a168dd7f411df28f1132ebbd09/MEGAHIT-test_minigut.contigs.fa",
                        "/f6/6a47e0524654d82be0e49d00c99f57/MEGAHIT-test_minigut-depth.txt.gz"
                    ],
                    "outputFiles": [
                        "/5d/993375e765ff00387f46f25c0cf79a/MEGAHIT-test_minigut.contigs.fa",
                        "/5d/993375e765ff00387f46f25c0cf79a/test_minigut_mb2_depth.txt",
                        "/5d/993375e765ff00387f46f25c0cf79a/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_39",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_44"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "id": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_45",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_56",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_55",
                        "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_54"
                    ],
                    "inputFiles": [
                        "/01/6d18a168dd7f411df28f1132ebbd09/MEGAHIT-test_minigut.contigs.fa",
                        "/f6/6a47e0524654d82be0e49d00c99f57/MEGAHIT-test_minigut-depth.txt.gz"
                    ],
                    "outputFiles": [
                        "/f7/386b0dd3ad61e1c24197838c86dc85/MEGAHIT-MetaBAT2-test_minigut.tooShort.fa.gz",
                        "/f7/386b0dd3ad61e1c24197838c86dc85/MEGAHIT-MetaBAT2-test_minigut.lowDepth.fa.gz",
                        "/f7/386b0dd3ad61e1c24197838c86dc85/MEGAHIT-MetaBAT2-test_minigut.unbinned.fa.gz",
                        "/f7/386b0dd3ad61e1c24197838c86dc85/MEGAHIT-MetaBAT2-test_minigut.tsv.gz",
                        "/386b0dd3ad61e1c24197838c86dc85/bins/MEGAHIT-MetaBAT2-test_minigut.1.fa.gz",
                        "/386b0dd3ad61e1c24197838c86dc85/bins/MEGAHIT-MetaBAT2-test_minigut.2.fa.gz",
                        "/f7/386b0dd3ad61e1c24197838c86dc85/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_39",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_44"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "id": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_47",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.MAXBIN2_57"
                    ],
                    "inputFiles": [
                        "/ad/e50bbcab2d4de0a030682118b95da7/MEGAHIT-test_minigut_sample2.contigs.fa",
                        "/2e/a229c3916a098bd7377027fedb4d42/MEGAHIT-test_minigut_sample2-depth.txt.gz"
                    ],
                    "outputFiles": [
                        "/d5/f40841a76271322e688e636a9f56be/MEGAHIT-test_minigut_sample2.contigs.fa",
                        "/d5/f40841a76271322e688e636a9f56be/test_minigut_sample2_mb2_depth.txt",
                        "/d5/f40841a76271322e688e636a9f56be/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_36",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_42"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "id": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_48",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_58"
                    ],
                    "inputFiles": [
                        "/ad/e50bbcab2d4de0a030682118b95da7/MEGAHIT-test_minigut_sample2.contigs.fa",
                        "/2e/a229c3916a098bd7377027fedb4d42/MEGAHIT-test_minigut_sample2-depth.txt.gz"
                    ],
                    "outputFiles": [
                        "/68/07f3ae0f9899f845f569a1c6edf87d/MEGAHIT-MetaBAT2-test_minigut_sample2.tooShort.fa.gz",
                        "/68/07f3ae0f9899f845f569a1c6edf87d/MEGAHIT-MetaBAT2-test_minigut_sample2.lowDepth.fa.gz",
                        "/68/07f3ae0f9899f845f569a1c6edf87d/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.fa.gz",
                        "/68/07f3ae0f9899f845f569a1c6edf87d/MEGAHIT-MetaBAT2-test_minigut_sample2.tsv.gz",
                        "/68/07f3ae0f9899f845f569a1c6edf87d/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_36",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_42"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "id": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_50",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.MAXBIN2_59"
                    ],
                    "inputFiles": [
                        "/19/a9432a2954b25b99d4bcbc6ae5dbb7/SPAdes-test_minigut_scaffolds.fasta",
                        "/4d/44326243720ca4a7cc916be905b3c4/SPAdes-test_minigut-depth.txt.gz"
                    ],
                    "outputFiles": [
                        "/ae/89e6186b281453f220f2dac613fb60/SPAdes-test_minigut_scaffolds.fasta",
                        "/ae/89e6186b281453f220f2dac613fb60/test_minigut_mb2_depth.txt",
                        "/ae/89e6186b281453f220f2dac613fb60/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_38",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_43"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "id": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_49",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_60",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_61",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_62"
                    ],
                    "inputFiles": [
                        "/19/a9432a2954b25b99d4bcbc6ae5dbb7/SPAdes-test_minigut_scaffolds.fasta",
                        "/4d/44326243720ca4a7cc916be905b3c4/SPAdes-test_minigut-depth.txt.gz"
                    ],
                    "outputFiles": [
                        "/2a/77fb54be4836e684dc38834c52daa3/SPAdes-MetaBAT2-test_minigut.tooShort.fa.gz",
                        "/2a/77fb54be4836e684dc38834c52daa3/SPAdes-MetaBAT2-test_minigut.lowDepth.fa.gz",
                        "/2a/77fb54be4836e684dc38834c52daa3/SPAdes-MetaBAT2-test_minigut.unbinned.fa.gz",
                        "/2a/77fb54be4836e684dc38834c52daa3/SPAdes-MetaBAT2-test_minigut.tsv.gz",
                        "/77fb54be4836e684dc38834c52daa3/bins/SPAdes-MetaBAT2-test_minigut.1.fa.gz",
                        "/77fb54be4836e684dc38834c52daa3/bins/SPAdes-MetaBAT2-test_minigut.2.fa.gz",
                        "/2a/77fb54be4836e684dc38834c52daa3/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_38",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_43"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "id": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_52",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.MAXBIN2_63"
                    ],
                    "inputFiles": [
                        "/0e/af902dd643f65055d1d1a4cdc03eec/SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "/79/03b1ed263b1ee1ec46fe396818f239/SPAdes-test_minigut_sample2-depth.txt.gz"
                    ],
                    "outputFiles": [
                        "/3e/a086d77b79c2823ca55898ab257d54/SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "/3e/a086d77b79c2823ca55898ab257d54/test_minigut_sample2_mb2_depth.txt",
                        "/3e/a086d77b79c2823ca55898ab257d54/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_33",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_41"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "id": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_51",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_64"
                    ],
                    "inputFiles": [
                        "/0e/af902dd643f65055d1d1a4cdc03eec/SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "/79/03b1ed263b1ee1ec46fe396818f239/SPAdes-test_minigut_sample2-depth.txt.gz"
                    ],
                    "outputFiles": [
                        "/b9/bf3c2ffa52aa3f58e4f64637bde899/SPAdes-MetaBAT2-test_minigut_sample2.tooShort.fa.gz",
                        "/b9/bf3c2ffa52aa3f58e4f64637bde899/SPAdes-MetaBAT2-test_minigut_sample2.lowDepth.fa.gz",
                        "/b9/bf3c2ffa52aa3f58e4f64637bde899/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.fa.gz",
                        "/b9/bf3c2ffa52aa3f58e4f64637bde899/SPAdes-MetaBAT2-test_minigut_sample2.tsv.gz",
                        "/b9/bf3c2ffa52aa3f58e4f64637bde899/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_33",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_41"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "id": "NFCORE_MAG.MAG.BINNING.MAXBIN2_53",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT_65",
                        "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_66"
                    ],
                    "inputFiles": [
                        "/5d/993375e765ff00387f46f25c0cf79a/MEGAHIT-test_minigut.contigs.fa",
                        "/5d/993375e765ff00387f46f25c0cf79a/test_minigut_mb2_depth.txt"
                    ],
                    "outputFiles": [
                        "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/MEGAHIT-MaxBin2-test_minigut.001.fasta.gz",
                        "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/MEGAHIT-MaxBin2-test_minigut.002.fasta.gz",
                        "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/MEGAHIT-MaxBin2-test_minigut.summary",
                        "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/MEGAHIT-MaxBin2-test_minigut.log.gz",
                        "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/MEGAHIT-MaxBin2-test_minigut.marker.gz",
                        "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/MEGAHIT-MaxBin2-test_minigut.noclass.gz",
                        "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/MEGAHIT-MaxBin2-test_minigut.tooshort.gz",
                        "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/MEGAHIT-MaxBin2-test_minigut.marker_of_each_bin.tar.gz",
                        "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_46"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_56",
                    "children": [
                        "NFCORE_MAG.MAG.PROKKA_87",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_86",
                        "NFCORE_MAG.MAG.QUAST_BINS_117",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_120"
                    ],
                    "inputFiles": [
                        "/386b0dd3ad61e1c24197838c86dc85/bins/MEGAHIT-MetaBAT2-test_minigut.2.fa.gz"
                    ],
                    "outputFiles": [
                        "/d1/af5b3f93228497d9441a56a2846bdd/MEGAHIT-MetaBAT2-test_minigut.2.fa",
                        "/d1/af5b3f93228497d9441a56a2846bdd/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_45"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_55",
                    "children": [
                        "NFCORE_MAG.MAG.PROKKA_88",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_89",
                        "NFCORE_MAG.MAG.QUAST_BINS_117",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_120"
                    ],
                    "inputFiles": [
                        "/386b0dd3ad61e1c24197838c86dc85/bins/MEGAHIT-MetaBAT2-test_minigut.1.fa.gz"
                    ],
                    "outputFiles": [
                        "/61/cf25917be22c0d7cc036bbb291ff61/MEGAHIT-MetaBAT2-test_minigut.1.fa",
                        "/61/cf25917be22c0d7cc036bbb291ff61/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_45"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "id": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_54",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_67",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_68"
                    ],
                    "inputFiles": [
                        "/f7/386b0dd3ad61e1c24197838c86dc85/MEGAHIT-MetaBAT2-test_minigut.unbinned.fa.gz"
                    ],
                    "outputFiles": [
                        "/9f/2be4bfc6b728578afcd33f072dd30f/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.gz",
                        "/9f/2be4bfc6b728578afcd33f072dd30f/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.gz",
                        "/9f/2be4bfc6b728578afcd33f072dd30f/MEGAHIT-MetaBAT2-test_minigut.unbinned.pooled.fa.gz",
                        "/9f/2be4bfc6b728578afcd33f072dd30f/MEGAHIT-MetaBAT2-test_minigut.unbinned.remaining.fa.gz",
                        "/9f/2be4bfc6b728578afcd33f072dd30f/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_45"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "id": "NFCORE_MAG.MAG.BINNING.MAXBIN2_57",
                    "children": [],
                    "inputFiles": [
                        "/d5/f40841a76271322e688e636a9f56be/MEGAHIT-test_minigut_sample2.contigs.fa",
                        "/d5/f40841a76271322e688e636a9f56be/test_minigut_sample2_mb2_depth.txt"
                    ],
                    "outputFiles": [],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_47"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "id": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_58",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_69",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_70"
                    ],
                    "inputFiles": [
                        "/68/07f3ae0f9899f845f569a1c6edf87d/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.fa.gz"
                    ],
                    "outputFiles": [
                        "/ab/a491d97cfd32cab33ae565081f410e/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz",
                        "/ab/a491d97cfd32cab33ae565081f410e/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz",
                        "/ab/a491d97cfd32cab33ae565081f410e/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.pooled.fa.gz",
                        "/ab/a491d97cfd32cab33ae565081f410e/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.remaining.fa.gz",
                        "/ab/a491d97cfd32cab33ae565081f410e/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_48"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "id": "NFCORE_MAG.MAG.BINNING.MAXBIN2_59",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT_71",
                        "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_72"
                    ],
                    "inputFiles": [
                        "/ae/89e6186b281453f220f2dac613fb60/SPAdes-test_minigut_scaffolds.fasta",
                        "/ae/89e6186b281453f220f2dac613fb60/test_minigut_mb2_depth.txt"
                    ],
                    "outputFiles": [
                        "/eb/f824a718600d27c276a4b0299ae33d/SPAdes-MaxBin2-test_minigut.001.fasta.gz",
                        "/eb/f824a718600d27c276a4b0299ae33d/SPAdes-MaxBin2-test_minigut.002.fasta.gz",
                        "/eb/f824a718600d27c276a4b0299ae33d/SPAdes-MaxBin2-test_minigut.summary",
                        "/eb/f824a718600d27c276a4b0299ae33d/SPAdes-MaxBin2-test_minigut.log.gz",
                        "/eb/f824a718600d27c276a4b0299ae33d/SPAdes-MaxBin2-test_minigut.marker.gz",
                        "/eb/f824a718600d27c276a4b0299ae33d/SPAdes-MaxBin2-test_minigut.noclass.gz",
                        "/eb/f824a718600d27c276a4b0299ae33d/SPAdes-MaxBin2-test_minigut.tooshort.gz",
                        "/eb/f824a718600d27c276a4b0299ae33d/SPAdes-MaxBin2-test_minigut.marker_of_each_bin.tar.gz",
                        "/eb/f824a718600d27c276a4b0299ae33d/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_50"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "id": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_60",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_74",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_73"
                    ],
                    "inputFiles": [
                        "/2a/77fb54be4836e684dc38834c52daa3/SPAdes-MetaBAT2-test_minigut.unbinned.fa.gz"
                    ],
                    "outputFiles": [
                        "/5f/2851abe02c0e2835f9e3b09a0b1d62/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.gz",
                        "/5f/2851abe02c0e2835f9e3b09a0b1d62/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.gz",
                        "/5f/2851abe02c0e2835f9e3b09a0b1d62/SPAdes-MetaBAT2-test_minigut.unbinned.pooled.fa.gz",
                        "/5f/2851abe02c0e2835f9e3b09a0b1d62/SPAdes-MetaBAT2-test_minigut.unbinned.remaining.fa.gz",
                        "/5f/2851abe02c0e2835f9e3b09a0b1d62/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_49"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_61",
                    "children": [
                        "NFCORE_MAG.MAG.PROKKA_90",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_91",
                        "NFCORE_MAG.MAG.QUAST_BINS_123",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_122"
                    ],
                    "inputFiles": [
                        "/77fb54be4836e684dc38834c52daa3/bins/SPAdes-MetaBAT2-test_minigut.1.fa.gz"
                    ],
                    "outputFiles": [
                        "/99/9391bef265fc20cdc627372089b79b/SPAdes-MetaBAT2-test_minigut.1.fa",
                        "/99/9391bef265fc20cdc627372089b79b/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_49"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_62",
                    "children": [
                        "NFCORE_MAG.MAG.PROKKA_92",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_93",
                        "NFCORE_MAG.MAG.QUAST_BINS_123",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_122"
                    ],
                    "inputFiles": [
                        "/77fb54be4836e684dc38834c52daa3/bins/SPAdes-MetaBAT2-test_minigut.2.fa.gz"
                    ],
                    "outputFiles": [
                        "/2c/dc9657212417f3f1714124a02c7b37/SPAdes-MetaBAT2-test_minigut.2.fa",
                        "/2c/dc9657212417f3f1714124a02c7b37/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_49"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "id": "NFCORE_MAG.MAG.BINNING.MAXBIN2_63",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT_75",
                        "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_76"
                    ],
                    "inputFiles": [
                        "/3e/a086d77b79c2823ca55898ab257d54/SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "/3e/a086d77b79c2823ca55898ab257d54/test_minigut_sample2_mb2_depth.txt"
                    ],
                    "outputFiles": [
                        "/0d/8e50cc38e226855a80b119d709ff8c/SPAdes-MaxBin2-test_minigut_sample2.001.fasta.gz",
                        "/0d/8e50cc38e226855a80b119d709ff8c/SPAdes-MaxBin2-test_minigut_sample2.summary",
                        "/0d/8e50cc38e226855a80b119d709ff8c/SPAdes-MaxBin2-test_minigut_sample2.log.gz",
                        "/0d/8e50cc38e226855a80b119d709ff8c/SPAdes-MaxBin2-test_minigut_sample2.marker.gz",
                        "/0d/8e50cc38e226855a80b119d709ff8c/SPAdes-MaxBin2-test_minigut_sample2.noclass.gz",
                        "/0d/8e50cc38e226855a80b119d709ff8c/SPAdes-MaxBin2-test_minigut_sample2.tooshort.gz",
                        "/0d/8e50cc38e226855a80b119d709ff8c/SPAdes-MaxBin2-test_minigut_sample2.marker_of_each_bin.tar.gz",
                        "/0d/8e50cc38e226855a80b119d709ff8c/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_52"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "id": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_64",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_78",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_77"
                    ],
                    "inputFiles": [
                        "/b9/bf3c2ffa52aa3f58e4f64637bde899/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.fa.gz"
                    ],
                    "outputFiles": [
                        "/be/a6b6583600ddf490d44a92dfcee45c/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz",
                        "/be/a6b6583600ddf490d44a92dfcee45c/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz",
                        "/be/a6b6583600ddf490d44a92dfcee45c/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.pooled.fa.gz",
                        "/be/a6b6583600ddf490d44a92dfcee45c/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.remaining.fa.gz",
                        "/be/a6b6583600ddf490d44a92dfcee45c/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_51"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT",
                    "id": "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT_65",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_80",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_79"
                    ],
                    "inputFiles": [
                        "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/MEGAHIT-MaxBin2-test_minigut.001.fasta.gz",
                        "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/MEGAHIT-MaxBin2-test_minigut.002.fasta.gz"
                    ],
                    "outputFiles": [
                        "/f5/1fd9cc6adda86286aa0f375123cfc8/MEGAHIT-MaxBin2-test_minigut.001.fa.gz",
                        "/f5/1fd9cc6adda86286aa0f375123cfc8/MEGAHIT-MaxBin2-test_minigut.002.fa.gz"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.MAXBIN2_53"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "id": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_66",
                    "children": [],
                    "inputFiles": [
                        "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/MEGAHIT-MaxBin2-test_minigut.noclass.gz"
                    ],
                    "outputFiles": [
                        "/cf/6ae0e3afea0a1ec59857e2bc7f3f91/MEGAHIT-MaxBin2-test_minigut.noclass.pooled.fa.gz",
                        "/cf/6ae0e3afea0a1ec59857e2bc7f3f91/MEGAHIT-MaxBin2-test_minigut.noclass.remaining.fa.gz",
                        "/cf/6ae0e3afea0a1ec59857e2bc7f3f91/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.MAXBIN2_53"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_67",
                    "children": [
                        "NFCORE_MAG.MAG.PROKKA_104",
                        "NFCORE_MAG.MAG.QUAST_BINS_117",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_105",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_120"
                    ],
                    "inputFiles": [
                        "/9f/2be4bfc6b728578afcd33f072dd30f/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.gz"
                    ],
                    "outputFiles": [
                        "/0f/da507fa0645b75fe52bef79d0cff50/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa",
                        "/0f/da507fa0645b75fe52bef79d0cff50/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_54"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_68",
                    "children": [
                        "NFCORE_MAG.MAG.PROKKA_106",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_107",
                        "NFCORE_MAG.MAG.QUAST_BINS_117",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_120"
                    ],
                    "inputFiles": [
                        "/9f/2be4bfc6b728578afcd33f072dd30f/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.gz"
                    ],
                    "outputFiles": [
                        "/0c/e5297ab42995f985f9f5e10d0aa650/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa",
                        "/0c/e5297ab42995f985f9f5e10d0aa650/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_54"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_69",
                    "children": [
                        "NFCORE_MAG.MAG.PROKKA_108",
                        "NFCORE_MAG.MAG.QUAST_BINS_136",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_109",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_131"
                    ],
                    "inputFiles": [
                        "/ab/a491d97cfd32cab33ae565081f410e/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz"
                    ],
                    "outputFiles": [
                        "/cd/882f370ae493dd9c8daef9d110ff5c/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "/cd/882f370ae493dd9c8daef9d110ff5c/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_58"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_70",
                    "children": [
                        "NFCORE_MAG.MAG.PROKKA_111",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_110",
                        "NFCORE_MAG.MAG.QUAST_BINS_136",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_131"
                    ],
                    "inputFiles": [
                        "/ab/a491d97cfd32cab33ae565081f410e/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz"
                    ],
                    "outputFiles": [
                        "/25/fad435a8679b7b2d6e7a0c0376b8f8/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "/25/fad435a8679b7b2d6e7a0c0376b8f8/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_58"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT",
                    "id": "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT_71",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_82",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_81"
                    ],
                    "inputFiles": [
                        "/eb/f824a718600d27c276a4b0299ae33d/SPAdes-MaxBin2-test_minigut.001.fasta.gz",
                        "/eb/f824a718600d27c276a4b0299ae33d/SPAdes-MaxBin2-test_minigut.002.fasta.gz"
                    ],
                    "outputFiles": [
                        "/22/a064f806a885f085a1dcd7975b6a67/SPAdes-MaxBin2-test_minigut.001.fa.gz",
                        "/22/a064f806a885f085a1dcd7975b6a67/SPAdes-MaxBin2-test_minigut.002.fa.gz"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.MAXBIN2_59"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "id": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_72",
                    "children": [],
                    "inputFiles": [
                        "/eb/f824a718600d27c276a4b0299ae33d/SPAdes-MaxBin2-test_minigut.noclass.gz"
                    ],
                    "outputFiles": [
                        "/a9/5a9418ee5a7690f314418f66882d81/SPAdes-MaxBin2-test_minigut.noclass.pooled.fa.gz",
                        "/a9/5a9418ee5a7690f314418f66882d81/SPAdes-MaxBin2-test_minigut.noclass.remaining.fa.gz",
                        "/a9/5a9418ee5a7690f314418f66882d81/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.MAXBIN2_59"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_74",
                    "children": [
                        "NFCORE_MAG.MAG.PROKKA_113",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_112",
                        "NFCORE_MAG.MAG.QUAST_BINS_123",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_122"
                    ],
                    "inputFiles": [
                        "/5f/2851abe02c0e2835f9e3b09a0b1d62/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.gz"
                    ],
                    "outputFiles": [
                        "/db/0958d1883331c1086429c2cb33e79c/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa",
                        "/db/0958d1883331c1086429c2cb33e79c/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_60"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_73",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_114",
                        "NFCORE_MAG.MAG.QUAST_BINS_123",
                        "NFCORE_MAG.MAG.PROKKA_115",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_122"
                    ],
                    "inputFiles": [
                        "/5f/2851abe02c0e2835f9e3b09a0b1d62/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.gz"
                    ],
                    "outputFiles": [
                        "/1f/e0a17ccc19b5d348df7702e0ffceea/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa",
                        "/1f/e0a17ccc19b5d348df7702e0ffceea/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_60"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT",
                    "id": "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT_75",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_83"
                    ],
                    "inputFiles": [
                        "/0d/8e50cc38e226855a80b119d709ff8c/SPAdes-MaxBin2-test_minigut_sample2.001.fasta.gz"
                    ],
                    "outputFiles": [
                        "/63/d3de4efa2361a3e58ff7c94485c9b2/SPAdes-MaxBin2-test_minigut_sample2.001.fa.gz"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.MAXBIN2_63"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "id": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_76",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_85",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_84"
                    ],
                    "inputFiles": [
                        "/0d/8e50cc38e226855a80b119d709ff8c/SPAdes-MaxBin2-test_minigut_sample2.noclass.gz"
                    ],
                    "outputFiles": [
                        "/07/d79186f73346bf557b0b330d22aec1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.gz",
                        "/07/d79186f73346bf557b0b330d22aec1/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.gz",
                        "/07/d79186f73346bf557b0b330d22aec1/SPAdes-MaxBin2-test_minigut_sample2.noclass.pooled.fa.gz",
                        "/07/d79186f73346bf557b0b330d22aec1/SPAdes-MaxBin2-test_minigut_sample2.noclass.remaining.fa.gz",
                        "/07/d79186f73346bf557b0b330d22aec1/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.MAXBIN2_63"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_78",
                    "children": [
                        "NFCORE_MAG.MAG.QUAST_BINS_137",
                        "NFCORE_MAG.MAG.PROKKA_125",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_133",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_116"
                    ],
                    "inputFiles": [
                        "/be/a6b6583600ddf490d44a92dfcee45c/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz"
                    ],
                    "outputFiles": [
                        "/b0/c4c13fb5a30180e93f30b443ab1807/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "/b0/c4c13fb5a30180e93f30b443ab1807/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_64"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_77",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_118",
                        "NFCORE_MAG.MAG.QUAST_BINS_137",
                        "NFCORE_MAG.MAG.PROKKA_129",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_133"
                    ],
                    "inputFiles": [
                        "/be/a6b6583600ddf490d44a92dfcee45c/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz"
                    ],
                    "outputFiles": [
                        "/df/ee8e1e889cebae9a0e25195f80675f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "/df/ee8e1e889cebae9a0e25195f80675f/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_64"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_80",
                    "children": [
                        "NFCORE_MAG.MAG.PROKKA_94",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_95",
                        "NFCORE_MAG.MAG.QUAST_BINS_124",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_121"
                    ],
                    "inputFiles": [
                        "/f5/1fd9cc6adda86286aa0f375123cfc8/MEGAHIT-MaxBin2-test_minigut.002.fa.gz"
                    ],
                    "outputFiles": [
                        "/8d/60203145275a433cc075347c0757f7/MEGAHIT-MaxBin2-test_minigut.002.fa",
                        "/8d/60203145275a433cc075347c0757f7/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT_65"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_79",
                    "children": [
                        "NFCORE_MAG.MAG.PROKKA_96",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_97",
                        "NFCORE_MAG.MAG.QUAST_BINS_124",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_121"
                    ],
                    "inputFiles": [
                        "/f5/1fd9cc6adda86286aa0f375123cfc8/MEGAHIT-MaxBin2-test_minigut.001.fa.gz"
                    ],
                    "outputFiles": [
                        "/33/d4976d8a94c2e0b2376a0ae32d2791/MEGAHIT-MaxBin2-test_minigut.001.fa",
                        "/33/d4976d8a94c2e0b2376a0ae32d2791/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT_65"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_82",
                    "children": [
                        "NFCORE_MAG.MAG.PROKKA_98",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_100",
                        "NFCORE_MAG.MAG.QUAST_BINS_127",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_126"
                    ],
                    "inputFiles": [
                        "/22/a064f806a885f085a1dcd7975b6a67/SPAdes-MaxBin2-test_minigut.002.fa.gz"
                    ],
                    "outputFiles": [
                        "/28/2a3d3dcb177d556ecf9d9f6ccff251/SPAdes-MaxBin2-test_minigut.002.fa",
                        "/28/2a3d3dcb177d556ecf9d9f6ccff251/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT_71"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_81",
                    "children": [
                        "NFCORE_MAG.MAG.PROKKA_99",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_102",
                        "NFCORE_MAG.MAG.QUAST_BINS_127",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_126"
                    ],
                    "inputFiles": [
                        "/22/a064f806a885f085a1dcd7975b6a67/SPAdes-MaxBin2-test_minigut.001.fa.gz"
                    ],
                    "outputFiles": [
                        "/e3/858abab7295808ce6e653d7e95d1c9/SPAdes-MaxBin2-test_minigut.001.fa",
                        "/e3/858abab7295808ce6e653d7e95d1c9/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT_71"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_83",
                    "children": [
                        "NFCORE_MAG.MAG.PROKKA_101",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_103",
                        "NFCORE_MAG.MAG.QUAST_BINS_135",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_134"
                    ],
                    "inputFiles": [
                        "/63/d3de4efa2361a3e58ff7c94485c9b2/SPAdes-MaxBin2-test_minigut_sample2.001.fa.gz"
                    ],
                    "outputFiles": [
                        "/2c/3e4c6ddb49c5797adf2ca908ee03f0/SPAdes-MaxBin2-test_minigut_sample2.001.fa",
                        "/2c/3e4c6ddb49c5797adf2ca908ee03f0/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT_75"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_85",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_119",
                        "NFCORE_MAG.MAG.PROKKA_130",
                        "NFCORE_MAG.MAG.QUAST_BINS_135",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_134"
                    ],
                    "inputFiles": [
                        "/07/d79186f73346bf557b0b330d22aec1/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.gz"
                    ],
                    "outputFiles": [
                        "/05/688f483a380c53145735b0ec10e7e1/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa",
                        "/05/688f483a380c53145735b0ec10e7e1/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_76"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_84",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_128",
                        "NFCORE_MAG.MAG.QUAST_BINS_135",
                        "NFCORE_MAG.MAG.PROKKA_132",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_134"
                    ],
                    "inputFiles": [
                        "/07/d79186f73346bf557b0b330d22aec1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.gz"
                    ],
                    "outputFiles": [
                        "/25/b26b7734ef45adbb9ce3eccfd31840/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa",
                        "/25/b26b7734ef45adbb9ce3eccfd31840/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_76"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PROKKA",
                    "id": "NFCORE_MAG.MAG.PROKKA_94",
                    "children": [],
                    "inputFiles": [
                        "/8d/60203145275a433cc075347c0757f7/MEGAHIT-MaxBin2-test_minigut.002.fa"
                    ],
                    "outputFiles": [
                        "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.gff",
                        "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.gbk",
                        "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.fna",
                        "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.faa",
                        "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.ffn",
                        "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.sqn",
                        "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.fsa",
                        "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.tbl",
                        "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.err",
                        "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.log",
                        "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.txt",
                        "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.tsv",
                        "/39/acaf974185413de7f7e75d08eed62d/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_80"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PROKKA",
                    "id": "NFCORE_MAG.MAG.PROKKA_88",
                    "children": [],
                    "inputFiles": [
                        "/61/cf25917be22c0d7cc036bbb291ff61/MEGAHIT-MetaBAT2-test_minigut.1.fa"
                    ],
                    "outputFiles": [
                        "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.gff",
                        "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.gbk",
                        "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.fna",
                        "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.faa",
                        "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.ffn",
                        "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.sqn",
                        "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.fsa",
                        "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.tbl",
                        "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.err",
                        "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.log",
                        "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.txt",
                        "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.tsv",
                        "/7b/9602d60bfda3d0afbe2182f5e9e212/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_55"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PROKKA",
                    "id": "NFCORE_MAG.MAG.PROKKA_90",
                    "children": [],
                    "inputFiles": [
                        "/99/9391bef265fc20cdc627372089b79b/SPAdes-MetaBAT2-test_minigut.1.fa"
                    ],
                    "outputFiles": [
                        "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.gff",
                        "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.gbk",
                        "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.fna",
                        "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.faa",
                        "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.ffn",
                        "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.sqn",
                        "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.fsa",
                        "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.tbl",
                        "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.err",
                        "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.log",
                        "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.txt",
                        "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.tsv",
                        "/e5/cb263e07e01a650cebaafa50f33960/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_61"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PROKKA",
                    "id": "NFCORE_MAG.MAG.PROKKA_98",
                    "children": [],
                    "inputFiles": [
                        "/28/2a3d3dcb177d556ecf9d9f6ccff251/SPAdes-MaxBin2-test_minigut.002.fa"
                    ],
                    "outputFiles": [
                        "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.gff",
                        "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.gbk",
                        "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.fna",
                        "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.faa",
                        "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.ffn",
                        "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.sqn",
                        "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.fsa",
                        "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.tbl",
                        "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.err",
                        "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.log",
                        "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.txt",
                        "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.tsv",
                        "/b4/8e9e371269fdf3f497b71fdd02028d/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_82"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PROKKA",
                    "id": "NFCORE_MAG.MAG.PROKKA_96",
                    "children": [],
                    "inputFiles": [
                        "/33/d4976d8a94c2e0b2376a0ae32d2791/MEGAHIT-MaxBin2-test_minigut.001.fa"
                    ],
                    "outputFiles": [
                        "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.gff",
                        "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.gbk",
                        "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.fna",
                        "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.faa",
                        "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.ffn",
                        "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.sqn",
                        "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.fsa",
                        "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.tbl",
                        "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.err",
                        "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.log",
                        "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.txt",
                        "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.tsv",
                        "/0a/302bc3450d1a96f8dd87e6ed64fa04/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_79"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PROKKA",
                    "id": "NFCORE_MAG.MAG.PROKKA_101",
                    "children": [],
                    "inputFiles": [
                        "/2c/3e4c6ddb49c5797adf2ca908ee03f0/SPAdes-MaxBin2-test_minigut_sample2.001.fa"
                    ],
                    "outputFiles": [
                        "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.gff",
                        "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.gbk",
                        "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.fna",
                        "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.faa",
                        "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.ffn",
                        "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.sqn",
                        "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.fsa",
                        "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.tbl",
                        "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.err",
                        "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.log",
                        "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.txt",
                        "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.tsv",
                        "/06/744dd3843deedbcf17b47531d248e4/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_83"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PROKKA",
                    "id": "NFCORE_MAG.MAG.PROKKA_99",
                    "children": [],
                    "inputFiles": [
                        "/e3/858abab7295808ce6e653d7e95d1c9/SPAdes-MaxBin2-test_minigut.001.fa"
                    ],
                    "outputFiles": [
                        "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.gff",
                        "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.gbk",
                        "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.fna",
                        "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.faa",
                        "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.ffn",
                        "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.sqn",
                        "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.fsa",
                        "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.tbl",
                        "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.err",
                        "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.log",
                        "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.txt",
                        "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.tsv",
                        "/cf/8617310dd03b78d8d373719be2b28a/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_81"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PROKKA",
                    "id": "NFCORE_MAG.MAG.PROKKA_87",
                    "children": [],
                    "inputFiles": [
                        "/d1/af5b3f93228497d9441a56a2846bdd/MEGAHIT-MetaBAT2-test_minigut.2.fa"
                    ],
                    "outputFiles": [
                        "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.gff",
                        "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.gbk",
                        "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.fna",
                        "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.faa",
                        "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.ffn",
                        "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.sqn",
                        "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.fsa",
                        "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.tbl",
                        "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.err",
                        "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.log",
                        "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.txt",
                        "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.tsv",
                        "/5f/58d0d9089e64102958fd0a7ed07323/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_56"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PROKKA",
                    "id": "NFCORE_MAG.MAG.PROKKA_92",
                    "children": [],
                    "inputFiles": [
                        "/2c/dc9657212417f3f1714124a02c7b37/SPAdes-MetaBAT2-test_minigut.2.fa"
                    ],
                    "outputFiles": [
                        "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.gff",
                        "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.gbk",
                        "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.fna",
                        "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.faa",
                        "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.ffn",
                        "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.sqn",
                        "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.fsa",
                        "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.tbl",
                        "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.err",
                        "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.log",
                        "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.txt",
                        "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.tsv",
                        "/16/e9c11a77add3e2c1869b0d2c554413/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_62"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_95",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_147",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148"
                    ],
                    "inputFiles": [
                        "/8d/60203145275a433cc075347c0757f7/MEGAHIT-MaxBin2-test_minigut.002.fa",
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10"
                    ],
                    "outputFiles": [
                        "/b6/b7ace9100172f939fce1a324bafeec/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.002.fa.txt",
                        "/b6/b7ace9100172f939fce1a324bafeec/busco_downloads",
                        "/b6/b7ace9100172f939fce1a324bafeec/MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log",
                        "/b6/b7ace9100172f939fce1a324bafeec/MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err",
                        "/b6/b7ace9100172f939fce1a324bafeec/MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.bacteria_odb10.faa.gz",
                        "/b6/b7ace9100172f939fce1a324bafeec/MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.bacteria_odb10.fna.gz",
                        "/b6/b7ace9100172f939fce1a324bafeec/MEGAHIT-MaxBin2-test_minigut.002.fa_prodigal.gff",
                        "/b6/b7ace9100172f939fce1a324bafeec/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_80",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_100",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_149",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148"
                    ],
                    "inputFiles": [
                        "/28/2a3d3dcb177d556ecf9d9f6ccff251/SPAdes-MaxBin2-test_minigut.002.fa",
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10"
                    ],
                    "outputFiles": [
                        "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.002.fa.txt",
                        "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/busco_downloads",
                        "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/SPAdes-MaxBin2-test_minigut.002.fa_busco.log",
                        "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/SPAdes-MaxBin2-test_minigut.002.fa_busco.err",
                        "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/SPAdes-MaxBin2-test_minigut.002.fa_buscos.bacteria_odb10.faa.gz",
                        "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/SPAdes-MaxBin2-test_minigut.002.fa_buscos.bacteria_odb10.fna.gz",
                        "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/SPAdes-MaxBin2-test_minigut.002.fa_prodigal.gff",
                        "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_82",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_91",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_150",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148"
                    ],
                    "inputFiles": [
                        "/99/9391bef265fc20cdc627372089b79b/SPAdes-MetaBAT2-test_minigut.1.fa",
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10"
                    ],
                    "outputFiles": [
                        "/7d/87145d575e7a7abf53c38bc1f42c46/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.1.fa.txt",
                        "/7d/87145d575e7a7abf53c38bc1f42c46/busco_downloads",
                        "/7d/87145d575e7a7abf53c38bc1f42c46/SPAdes-MetaBAT2-test_minigut.1.fa_busco.log",
                        "/7d/87145d575e7a7abf53c38bc1f42c46/SPAdes-MetaBAT2-test_minigut.1.fa_busco.err",
                        "/7d/87145d575e7a7abf53c38bc1f42c46/SPAdes-MetaBAT2-test_minigut.1.fa_buscos.bacteria_odb10.faa.gz",
                        "/7d/87145d575e7a7abf53c38bc1f42c46/SPAdes-MetaBAT2-test_minigut.1.fa_buscos.bacteria_odb10.fna.gz",
                        "/7d/87145d575e7a7abf53c38bc1f42c46/SPAdes-MetaBAT2-test_minigut.1.fa_prodigal.gff",
                        "/7d/87145d575e7a7abf53c38bc1f42c46/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_61",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_102",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_149",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148"
                    ],
                    "inputFiles": [
                        "/e3/858abab7295808ce6e653d7e95d1c9/SPAdes-MaxBin2-test_minigut.001.fa",
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10"
                    ],
                    "outputFiles": [
                        "/18/ba9403eaf56fae25a02be1c30984fe/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.001.fa.txt",
                        "/18/ba9403eaf56fae25a02be1c30984fe/busco_downloads",
                        "/18/ba9403eaf56fae25a02be1c30984fe/SPAdes-MaxBin2-test_minigut.001.fa_busco.log",
                        "/18/ba9403eaf56fae25a02be1c30984fe/SPAdes-MaxBin2-test_minigut.001.fa_busco.err",
                        "/18/ba9403eaf56fae25a02be1c30984fe/SPAdes-MaxBin2-test_minigut.001.fa_buscos.bacteria_odb10.faa.gz",
                        "/18/ba9403eaf56fae25a02be1c30984fe/SPAdes-MaxBin2-test_minigut.001.fa_buscos.bacteria_odb10.fna.gz",
                        "/18/ba9403eaf56fae25a02be1c30984fe/SPAdes-MaxBin2-test_minigut.001.fa_prodigal.gff",
                        "/18/ba9403eaf56fae25a02be1c30984fe/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_81",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_89",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_151",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148"
                    ],
                    "inputFiles": [
                        "/61/cf25917be22c0d7cc036bbb291ff61/MEGAHIT-MetaBAT2-test_minigut.1.fa",
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10"
                    ],
                    "outputFiles": [
                        "/38/556350b2b2b8efe6d2264985733b0c/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt",
                        "/38/556350b2b2b8efe6d2264985733b0c/busco_downloads",
                        "/38/556350b2b2b8efe6d2264985733b0c/MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log",
                        "/38/556350b2b2b8efe6d2264985733b0c/MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err",
                        "/38/556350b2b2b8efe6d2264985733b0c/MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.bacteria_odb10.faa.gz",
                        "/38/556350b2b2b8efe6d2264985733b0c/MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.bacteria_odb10.fna.gz",
                        "/38/556350b2b2b8efe6d2264985733b0c/MEGAHIT-MetaBAT2-test_minigut.1.fa_prodigal.gff",
                        "/38/556350b2b2b8efe6d2264985733b0c/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_55",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_86",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_151",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148"
                    ],
                    "inputFiles": [
                        "/d1/af5b3f93228497d9441a56a2846bdd/MEGAHIT-MetaBAT2-test_minigut.2.fa",
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10"
                    ],
                    "outputFiles": [
                        "/4c/002d51c5239b46efae0101b8737275/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt",
                        "/4c/002d51c5239b46efae0101b8737275/busco_downloads",
                        "/4c/002d51c5239b46efae0101b8737275/MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log",
                        "/4c/002d51c5239b46efae0101b8737275/MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err",
                        "/4c/002d51c5239b46efae0101b8737275/MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.bacteria_odb10.faa.gz",
                        "/4c/002d51c5239b46efae0101b8737275/MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.bacteria_odb10.fna.gz",
                        "/4c/002d51c5239b46efae0101b8737275/MEGAHIT-MetaBAT2-test_minigut.2.fa_prodigal.gff",
                        "/4c/002d51c5239b46efae0101b8737275/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_56",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_97",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_147",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148"
                    ],
                    "inputFiles": [
                        "/33/d4976d8a94c2e0b2376a0ae32d2791/MEGAHIT-MaxBin2-test_minigut.001.fa",
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10"
                    ],
                    "outputFiles": [
                        "/cc/8e484c5973a041ea6a7de5ffb9a4d6/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.001.fa.txt",
                        "/cc/8e484c5973a041ea6a7de5ffb9a4d6/busco_downloads",
                        "/cc/8e484c5973a041ea6a7de5ffb9a4d6/MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log",
                        "/cc/8e484c5973a041ea6a7de5ffb9a4d6/MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err",
                        "/cc/8e484c5973a041ea6a7de5ffb9a4d6/MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.bacteria_odb10.faa.gz",
                        "/cc/8e484c5973a041ea6a7de5ffb9a4d6/MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.bacteria_odb10.fna.gz",
                        "/cc/8e484c5973a041ea6a7de5ffb9a4d6/MEGAHIT-MaxBin2-test_minigut.001.fa_prodigal.gff",
                        "/cc/8e484c5973a041ea6a7de5ffb9a4d6/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_79",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_93",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_150",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148"
                    ],
                    "inputFiles": [
                        "/2c/dc9657212417f3f1714124a02c7b37/SPAdes-MetaBAT2-test_minigut.2.fa",
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10"
                    ],
                    "outputFiles": [
                        "/c9/4ae56826c49a7fe1063c5a40993c8f/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.2.fa.txt",
                        "/c9/4ae56826c49a7fe1063c5a40993c8f/busco_downloads",
                        "/c9/4ae56826c49a7fe1063c5a40993c8f/SPAdes-MetaBAT2-test_minigut.2.fa_busco.log",
                        "/c9/4ae56826c49a7fe1063c5a40993c8f/SPAdes-MetaBAT2-test_minigut.2.fa_busco.err",
                        "/c9/4ae56826c49a7fe1063c5a40993c8f/SPAdes-MetaBAT2-test_minigut.2.fa_buscos.bacteria_odb10.faa.gz",
                        "/c9/4ae56826c49a7fe1063c5a40993c8f/SPAdes-MetaBAT2-test_minigut.2.fa_buscos.bacteria_odb10.fna.gz",
                        "/c9/4ae56826c49a7fe1063c5a40993c8f/SPAdes-MetaBAT2-test_minigut.2.fa_prodigal.gff",
                        "/c9/4ae56826c49a7fe1063c5a40993c8f/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_62",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_103",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_152",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148"
                    ],
                    "inputFiles": [
                        "/2c/3e4c6ddb49c5797adf2ca908ee03f0/SPAdes-MaxBin2-test_minigut_sample2.001.fa",
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10"
                    ],
                    "outputFiles": [
                        "/77/ccbf52f5eeff4956e8bb7fa0b056bf/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt",
                        "/77/ccbf52f5eeff4956e8bb7fa0b056bf/busco_downloads",
                        "/77/ccbf52f5eeff4956e8bb7fa0b056bf/SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log",
                        "/77/ccbf52f5eeff4956e8bb7fa0b056bf/SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err",
                        "/77/ccbf52f5eeff4956e8bb7fa0b056bf/SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.bacteria_odb10.faa.gz",
                        "/77/ccbf52f5eeff4956e8bb7fa0b056bf/SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.bacteria_odb10.fna.gz",
                        "/77/ccbf52f5eeff4956e8bb7fa0b056bf/SPAdes-MaxBin2-test_minigut_sample2.001.fa_prodigal.gff",
                        "/77/ccbf52f5eeff4956e8bb7fa0b056bf/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_83",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PROKKA",
                    "id": "NFCORE_MAG.MAG.PROKKA_104",
                    "children": [],
                    "inputFiles": [
                        "/0f/da507fa0645b75fe52bef79d0cff50/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa"
                    ],
                    "outputFiles": [
                        "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.gff",
                        "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.gbk",
                        "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fna",
                        "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.faa",
                        "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.ffn",
                        "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.sqn",
                        "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fsa",
                        "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.tbl",
                        "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.err",
                        "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.log",
                        "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.txt",
                        "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.tsv",
                        "/3b/9bd46fae396e69ddc8bc14a6c3702b/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_67"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PROKKA",
                    "id": "NFCORE_MAG.MAG.PROKKA_106",
                    "children": [],
                    "inputFiles": [
                        "/0c/e5297ab42995f985f9f5e10d0aa650/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa"
                    ],
                    "outputFiles": [
                        "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.gff",
                        "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.gbk",
                        "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fna",
                        "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.faa",
                        "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.ffn",
                        "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.sqn",
                        "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fsa",
                        "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.tbl",
                        "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.err",
                        "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.log",
                        "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.txt",
                        "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.tsv",
                        "/9c/6f3c890f8199bf500b3c3f349ddee1/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_68"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PROKKA",
                    "id": "NFCORE_MAG.MAG.PROKKA_111",
                    "children": [],
                    "inputFiles": [
                        "/25/fad435a8679b7b2d6e7a0c0376b8f8/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa"
                    ],
                    "outputFiles": [
                        "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.gff",
                        "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.gbk",
                        "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fna",
                        "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.faa",
                        "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.ffn",
                        "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.sqn",
                        "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fsa",
                        "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.tbl",
                        "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.err",
                        "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.log",
                        "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.txt",
                        "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.tsv",
                        "/06/06fd46de33d8c0bf3b8ff45b2203a4/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_70"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PROKKA",
                    "id": "NFCORE_MAG.MAG.PROKKA_113",
                    "children": [],
                    "inputFiles": [
                        "/db/0958d1883331c1086429c2cb33e79c/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa"
                    ],
                    "outputFiles": [
                        "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.gff",
                        "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.gbk",
                        "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.fna",
                        "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.faa",
                        "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.ffn",
                        "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.sqn",
                        "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.fsa",
                        "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.tbl",
                        "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.err",
                        "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.log",
                        "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.txt",
                        "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.tsv",
                        "/51/60f81c29d813b8ff5be0c4450ebe11/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_74"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_110",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_153",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148"
                    ],
                    "inputFiles": [
                        "/25/fad435a8679b7b2d6e7a0c0376b8f8/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10"
                    ],
                    "outputFiles": [
                        "/f4/2b25e66e4794ad80e085d57991a17f/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt",
                        "/f4/2b25e66e4794ad80e085d57991a17f/busco_downloads",
                        "/f4/2b25e66e4794ad80e085d57991a17f/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log",
                        "/f4/2b25e66e4794ad80e085d57991a17f/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err",
                        "/f4/2b25e66e4794ad80e085d57991a17f/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_prodigal.gff",
                        "/f4/2b25e66e4794ad80e085d57991a17f/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt",
                        "/f4/2b25e66e4794ad80e085d57991a17f/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_70",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_112",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_150",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148"
                    ],
                    "inputFiles": [
                        "/db/0958d1883331c1086429c2cb33e79c/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa",
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10"
                    ],
                    "outputFiles": [
                        "/2b/b9c67b024483e9dcc03590bd534af3/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                        "/2b/b9c67b024483e9dcc03590bd534af3/busco_downloads",
                        "/2b/b9c67b024483e9dcc03590bd534af3/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log",
                        "/2b/b9c67b024483e9dcc03590bd534af3/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err",
                        "/2b/b9c67b024483e9dcc03590bd534af3/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_prodigal.gff",
                        "/2b/b9c67b024483e9dcc03590bd534af3/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt",
                        "/2b/b9c67b024483e9dcc03590bd534af3/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_74",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_118",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_154",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148"
                    ],
                    "inputFiles": [
                        "/df/ee8e1e889cebae9a0e25195f80675f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10"
                    ],
                    "outputFiles": [
                        "/1a/84f07aa032c5c6074182ab239ba71a/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt",
                        "/1a/84f07aa032c5c6074182ab239ba71a/busco_downloads",
                        "/1a/84f07aa032c5c6074182ab239ba71a/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log",
                        "/1a/84f07aa032c5c6074182ab239ba71a/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err",
                        "/1a/84f07aa032c5c6074182ab239ba71a/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_prodigal.gff",
                        "/1a/84f07aa032c5c6074182ab239ba71a/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt",
                        "/1a/84f07aa032c5c6074182ab239ba71a/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_77",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_107",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_151",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148"
                    ],
                    "inputFiles": [
                        "/0c/e5297ab42995f985f9f5e10d0aa650/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa",
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10"
                    ],
                    "outputFiles": [
                        "/00/056cc9e0b256cf0fb6f145d85aa73a/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                        "/00/056cc9e0b256cf0fb6f145d85aa73a/busco_downloads",
                        "/00/056cc9e0b256cf0fb6f145d85aa73a/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log",
                        "/00/056cc9e0b256cf0fb6f145d85aa73a/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err",
                        "/00/056cc9e0b256cf0fb6f145d85aa73a/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.bacteria_odb10.faa.gz",
                        "/00/056cc9e0b256cf0fb6f145d85aa73a/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.bacteria_odb10.fna.gz",
                        "/00/056cc9e0b256cf0fb6f145d85aa73a/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_prodigal.gff",
                        "/00/056cc9e0b256cf0fb6f145d85aa73a/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_68",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.QUAST_BINS",
                    "id": "NFCORE_MAG.MAG.QUAST_BINS_117",
                    "children": [
                        "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY_138"
                    ],
                    "inputFiles": [
                        "/d1/af5b3f93228497d9441a56a2846bdd/MEGAHIT-MetaBAT2-test_minigut.2.fa",
                        "/61/cf25917be22c0d7cc036bbb291ff61/MEGAHIT-MetaBAT2-test_minigut.1.fa",
                        "/0f/da507fa0645b75fe52bef79d0cff50/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa",
                        "/0c/e5297ab42995f985f9f5e10d0aa650/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa"
                    ],
                    "outputFiles": [
                        "/0e427f2ecabcff8cfcf237e697e946/QUAST/MEGAHIT-MetaBAT2-test_minigut.1.fa",
                        "/0e427f2ecabcff8cfcf237e697e946/QUAST/MEGAHIT-MetaBAT2-test_minigut.2.fa",
                        "/0e427f2ecabcff8cfcf237e697e946/QUAST/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa",
                        "/0e427f2ecabcff8cfcf237e697e946/QUAST/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa",
                        "/0e427f2ecabcff8cfcf237e697e946/QUAST/MEGAHIT-MetaBAT2-test_minigut-quast_summary.tsv",
                        "/93/0e427f2ecabcff8cfcf237e697e946/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_56",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_55",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_67",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_68"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.QUAST_BINS",
                    "id": "NFCORE_MAG.MAG.QUAST_BINS_137",
                    "children": [
                        "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY_138"
                    ],
                    "inputFiles": [
                        "/b0/c4c13fb5a30180e93f30b443ab1807/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "/df/ee8e1e889cebae9a0e25195f80675f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa"
                    ],
                    "outputFiles": [
                        "/75ba09ccb00d7510f1b6163fef05a8/QUAST/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "/75ba09ccb00d7510f1b6163fef05a8/QUAST/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "/75ba09ccb00d7510f1b6163fef05a8/QUAST/SPAdes-MetaBAT2-test_minigut_sample2-quast_summary.tsv",
                        "/a3/75ba09ccb00d7510f1b6163fef05a8/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_78",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_77"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.QUAST_BINS",
                    "id": "NFCORE_MAG.MAG.QUAST_BINS_124",
                    "children": [
                        "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY_138"
                    ],
                    "inputFiles": [
                        "/8d/60203145275a433cc075347c0757f7/MEGAHIT-MaxBin2-test_minigut.002.fa",
                        "/33/d4976d8a94c2e0b2376a0ae32d2791/MEGAHIT-MaxBin2-test_minigut.001.fa"
                    ],
                    "outputFiles": [
                        "/fa5c60846b08611e13ec4d185fc691/QUAST/MEGAHIT-MaxBin2-test_minigut.001.fa",
                        "/fa5c60846b08611e13ec4d185fc691/QUAST/MEGAHIT-MaxBin2-test_minigut.002.fa",
                        "/fa5c60846b08611e13ec4d185fc691/QUAST/MEGAHIT-MaxBin2-test_minigut-quast_summary.tsv",
                        "/29/fa5c60846b08611e13ec4d185fc691/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_80",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_79"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_114",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_150",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148"
                    ],
                    "inputFiles": [
                        "/1f/e0a17ccc19b5d348df7702e0ffceea/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa",
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10"
                    ],
                    "outputFiles": [
                        "/3b/07878d030aa541a9e52c22ba4ced01/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt",
                        "/3b/07878d030aa541a9e52c22ba4ced01/busco_downloads",
                        "/3b/07878d030aa541a9e52c22ba4ced01/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log",
                        "/3b/07878d030aa541a9e52c22ba4ced01/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err",
                        "/3b/07878d030aa541a9e52c22ba4ced01/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.bacteria_odb10.faa.gz",
                        "/3b/07878d030aa541a9e52c22ba4ced01/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.bacteria_odb10.fna.gz",
                        "/3b/07878d030aa541a9e52c22ba4ced01/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_prodigal.gff",
                        "/3b/07878d030aa541a9e52c22ba4ced01/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_73",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.QUAST_BINS",
                    "id": "NFCORE_MAG.MAG.QUAST_BINS_123",
                    "children": [
                        "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY_138"
                    ],
                    "inputFiles": [
                        "/99/9391bef265fc20cdc627372089b79b/SPAdes-MetaBAT2-test_minigut.1.fa",
                        "/2c/dc9657212417f3f1714124a02c7b37/SPAdes-MetaBAT2-test_minigut.2.fa",
                        "/db/0958d1883331c1086429c2cb33e79c/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa",
                        "/1f/e0a17ccc19b5d348df7702e0ffceea/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa"
                    ],
                    "outputFiles": [
                        "/80bbbb344191f41d74b3c89e2d8982/QUAST/SPAdes-MetaBAT2-test_minigut.1.fa",
                        "/80bbbb344191f41d74b3c89e2d8982/QUAST/SPAdes-MetaBAT2-test_minigut.2.fa",
                        "/80bbbb344191f41d74b3c89e2d8982/QUAST/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa",
                        "/80bbbb344191f41d74b3c89e2d8982/QUAST/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa",
                        "/80bbbb344191f41d74b3c89e2d8982/QUAST/SPAdes-MetaBAT2-test_minigut-quast_summary.tsv",
                        "/e3/80bbbb344191f41d74b3c89e2d8982/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_61",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_62",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_74",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_73"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PROKKA",
                    "id": "NFCORE_MAG.MAG.PROKKA_129",
                    "children": [],
                    "inputFiles": [
                        "/df/ee8e1e889cebae9a0e25195f80675f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa"
                    ],
                    "outputFiles": [
                        "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.gff",
                        "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.gbk",
                        "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fna",
                        "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.faa",
                        "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.ffn",
                        "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.sqn",
                        "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fsa",
                        "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.tbl",
                        "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.err",
                        "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.log",
                        "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.txt",
                        "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.tsv",
                        "/02/9238e39b30320332b712a766432fdd/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_77"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_119",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_152",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148"
                    ],
                    "inputFiles": [
                        "/05/688f483a380c53145735b0ec10e7e1/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa",
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10"
                    ],
                    "outputFiles": [
                        "/0d/922fde31aa037b2ab959dacef5fbc9/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt",
                        "/0d/922fde31aa037b2ab959dacef5fbc9/busco_downloads",
                        "/0d/922fde31aa037b2ab959dacef5fbc9/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log",
                        "/0d/922fde31aa037b2ab959dacef5fbc9/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err",
                        "/0d/922fde31aa037b2ab959dacef5fbc9/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_prodigal.gff",
                        "/0d/922fde31aa037b2ab959dacef5fbc9/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.failed_bin.txt",
                        "/0d/922fde31aa037b2ab959dacef5fbc9/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_85",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PROKKA",
                    "id": "NFCORE_MAG.MAG.PROKKA_108",
                    "children": [],
                    "inputFiles": [
                        "/cd/882f370ae493dd9c8daef9d110ff5c/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa"
                    ],
                    "outputFiles": [
                        "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.gff",
                        "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.gbk",
                        "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fna",
                        "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.faa",
                        "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.ffn",
                        "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.sqn",
                        "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fsa",
                        "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.tbl",
                        "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.err",
                        "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.log",
                        "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.txt",
                        "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.tsv",
                        "/ee/aee47d7a4e094c1a0b74b350968648/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_69"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PROKKA",
                    "id": "NFCORE_MAG.MAG.PROKKA_115",
                    "children": [],
                    "inputFiles": [
                        "/1f/e0a17ccc19b5d348df7702e0ffceea/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa"
                    ],
                    "outputFiles": [
                        "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.gff",
                        "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.gbk",
                        "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.fna",
                        "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.faa",
                        "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.ffn",
                        "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.sqn",
                        "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.fsa",
                        "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.tbl",
                        "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.err",
                        "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.log",
                        "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.txt",
                        "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.tsv",
                        "/31/50cac81585ab74695be039f9b06ea5/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_73"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PROKKA",
                    "id": "NFCORE_MAG.MAG.PROKKA_125",
                    "children": [],
                    "inputFiles": [
                        "/b0/c4c13fb5a30180e93f30b443ab1807/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa"
                    ],
                    "outputFiles": [
                        "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.gff",
                        "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.gbk",
                        "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fna",
                        "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.faa",
                        "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.ffn",
                        "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.sqn",
                        "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fsa",
                        "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.tbl",
                        "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.err",
                        "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.log",
                        "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.txt",
                        "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.tsv",
                        "/9c/5d065a5869540abef8c156a0756d9f/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_78"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PROKKA",
                    "id": "NFCORE_MAG.MAG.PROKKA_130",
                    "children": [],
                    "inputFiles": [
                        "/05/688f483a380c53145735b0ec10e7e1/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa"
                    ],
                    "outputFiles": [
                        "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.gff",
                        "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.gbk",
                        "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fna",
                        "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.faa",
                        "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.ffn",
                        "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.sqn",
                        "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fsa",
                        "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.tbl",
                        "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.err",
                        "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.log",
                        "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.txt",
                        "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.tsv",
                        "/eb/b98febf1fc3c7eb2ff4d942a4e8622/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_85"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.QUAST_BINS",
                    "id": "NFCORE_MAG.MAG.QUAST_BINS_127",
                    "children": [
                        "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY_138"
                    ],
                    "inputFiles": [
                        "/28/2a3d3dcb177d556ecf9d9f6ccff251/SPAdes-MaxBin2-test_minigut.002.fa",
                        "/e3/858abab7295808ce6e653d7e95d1c9/SPAdes-MaxBin2-test_minigut.001.fa"
                    ],
                    "outputFiles": [
                        "/68a0d6876a8cb570299735403c1868/QUAST/SPAdes-MaxBin2-test_minigut.001.fa",
                        "/68a0d6876a8cb570299735403c1868/QUAST/SPAdes-MaxBin2-test_minigut.002.fa",
                        "/68a0d6876a8cb570299735403c1868/QUAST/SPAdes-MaxBin2-test_minigut-quast_summary.tsv",
                        "/b0/68a0d6876a8cb570299735403c1868/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_82",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_81"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_128",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_152",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148"
                    ],
                    "inputFiles": [
                        "/25/b26b7734ef45adbb9ce3eccfd31840/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa",
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10"
                    ],
                    "outputFiles": [
                        "/21/a612f469bfb3131b66630b7b59bbf6/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt",
                        "/21/a612f469bfb3131b66630b7b59bbf6/busco_downloads",
                        "/21/a612f469bfb3131b66630b7b59bbf6/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log",
                        "/21/a612f469bfb3131b66630b7b59bbf6/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err",
                        "/21/a612f469bfb3131b66630b7b59bbf6/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_prodigal.gff",
                        "/21/a612f469bfb3131b66630b7b59bbf6/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.failed_bin.txt",
                        "/21/a612f469bfb3131b66630b7b59bbf6/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_84",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_105",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_151",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148"
                    ],
                    "inputFiles": [
                        "/0f/da507fa0645b75fe52bef79d0cff50/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa",
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10"
                    ],
                    "outputFiles": [
                        "/dd/67d472dc329d9ecf4445b693374ddb/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt",
                        "/dd/67d472dc329d9ecf4445b693374ddb/busco_downloads",
                        "/dd/67d472dc329d9ecf4445b693374ddb/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log",
                        "/dd/67d472dc329d9ecf4445b693374ddb/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err",
                        "/dd/67d472dc329d9ecf4445b693374ddb/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_prodigal.gff",
                        "/dd/67d472dc329d9ecf4445b693374ddb/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt",
                        "/dd/67d472dc329d9ecf4445b693374ddb/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_67",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.QUAST_BINS",
                    "id": "NFCORE_MAG.MAG.QUAST_BINS_136",
                    "children": [
                        "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY_138"
                    ],
                    "inputFiles": [
                        "/cd/882f370ae493dd9c8daef9d110ff5c/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "/25/fad435a8679b7b2d6e7a0c0376b8f8/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa"
                    ],
                    "outputFiles": [
                        "/732a25090d4beb96662fe81e12ba19/QUAST/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "/732a25090d4beb96662fe81e12ba19/QUAST/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "/732a25090d4beb96662fe81e12ba19/QUAST/MEGAHIT-MetaBAT2-test_minigut_sample2-quast_summary.tsv",
                        "/ab/732a25090d4beb96662fe81e12ba19/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_69",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_70"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.QUAST_BINS",
                    "id": "NFCORE_MAG.MAG.QUAST_BINS_135",
                    "children": [
                        "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY_138"
                    ],
                    "inputFiles": [
                        "/2c/3e4c6ddb49c5797adf2ca908ee03f0/SPAdes-MaxBin2-test_minigut_sample2.001.fa",
                        "/05/688f483a380c53145735b0ec10e7e1/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa",
                        "/25/b26b7734ef45adbb9ce3eccfd31840/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa"
                    ],
                    "outputFiles": [
                        "/e5dc8a91b79dee2a7146e0ffa69a0c/QUAST/SPAdes-MaxBin2-test_minigut_sample2.001.fa",
                        "/e5dc8a91b79dee2a7146e0ffa69a0c/QUAST/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa",
                        "/e5dc8a91b79dee2a7146e0ffa69a0c/QUAST/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa",
                        "/e5dc8a91b79dee2a7146e0ffa69a0c/QUAST/SPAdes-MaxBin2-test_minigut_sample2-quast_summary.tsv",
                        "/53/e5dc8a91b79dee2a7146e0ffa69a0c/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_83",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_85",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_84"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.PROKKA",
                    "id": "NFCORE_MAG.MAG.PROKKA_132",
                    "children": [],
                    "inputFiles": [
                        "/25/b26b7734ef45adbb9ce3eccfd31840/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa"
                    ],
                    "outputFiles": [
                        "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.gff",
                        "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.gbk",
                        "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fna",
                        "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.faa",
                        "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.ffn",
                        "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.sqn",
                        "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fsa",
                        "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.tbl",
                        "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.err",
                        "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.log",
                        "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.txt",
                        "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.tsv",
                        "/7d/bf181196559eb203a5a821022e783e/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_84"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_109",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_153",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148"
                    ],
                    "inputFiles": [
                        "/cd/882f370ae493dd9c8daef9d110ff5c/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10"
                    ],
                    "outputFiles": [
                        "/de/9424c88160a29cbe98e6db3e5eddd6/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt",
                        "/de/9424c88160a29cbe98e6db3e5eddd6/busco_downloads",
                        "/de/9424c88160a29cbe98e6db3e5eddd6/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log",
                        "/de/9424c88160a29cbe98e6db3e5eddd6/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err",
                        "/de/9424c88160a29cbe98e6db3e5eddd6/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_prodigal.gff",
                        "/de/9424c88160a29cbe98e6db3e5eddd6/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt",
                        "/de/9424c88160a29cbe98e6db3e5eddd6/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_69",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_121",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_139",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY_146"
                    ],
                    "inputFiles": [
                        "/8d/60203145275a433cc075347c0757f7/MEGAHIT-MaxBin2-test_minigut.002.fa",
                        "/33/d4976d8a94c2e0b2376a0ae32d2791/MEGAHIT-MaxBin2-test_minigut.001.fa",
                        "/f6/6a47e0524654d82be0e49d00c99f57/MEGAHIT-test_minigut-depth.txt.gz"
                    ],
                    "outputFiles": [
                        "/0e/51dc37ddf45a8a1d257f31210ed41e/MEGAHIT-MaxBin2-test_minigut-binDepths.tsv",
                        "/0e/51dc37ddf45a8a1d257f31210ed41e/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_80",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_79",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_44"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_131",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_140",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY_146"
                    ],
                    "inputFiles": [
                        "/cd/882f370ae493dd9c8daef9d110ff5c/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "/25/fad435a8679b7b2d6e7a0c0376b8f8/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "/2e/a229c3916a098bd7377027fedb4d42/MEGAHIT-test_minigut_sample2-depth.txt.gz"
                    ],
                    "outputFiles": [
                        "/3f/89d58d5f5a6ea4c27460a9e94b4343/MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                        "/3f/89d58d5f5a6ea4c27460a9e94b4343/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_69",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_70",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_42"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_133",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_141",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY_146"
                    ],
                    "inputFiles": [
                        "/b0/c4c13fb5a30180e93f30b443ab1807/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "/df/ee8e1e889cebae9a0e25195f80675f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "/79/03b1ed263b1ee1ec46fe396818f239/SPAdes-test_minigut_sample2-depth.txt.gz"
                    ],
                    "outputFiles": [
                        "/83/74fe64a2bed18c6ba5af48eca390d0/SPAdes-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                        "/83/74fe64a2bed18c6ba5af48eca390d0/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_78",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_77",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_41"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_134",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_142",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY_146"
                    ],
                    "inputFiles": [
                        "/2c/3e4c6ddb49c5797adf2ca908ee03f0/SPAdes-MaxBin2-test_minigut_sample2.001.fa",
                        "/05/688f483a380c53145735b0ec10e7e1/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa",
                        "/25/b26b7734ef45adbb9ce3eccfd31840/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa",
                        "/79/03b1ed263b1ee1ec46fe396818f239/SPAdes-test_minigut_sample2-depth.txt.gz"
                    ],
                    "outputFiles": [
                        "/6b/c98cdd973d773b166cdea86c59b9fe/SPAdes-MaxBin2-test_minigut_sample2-binDepths.tsv",
                        "/6b/c98cdd973d773b166cdea86c59b9fe/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_83",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_85",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_84",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_41"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_126",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_143",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY_146"
                    ],
                    "inputFiles": [
                        "/28/2a3d3dcb177d556ecf9d9f6ccff251/SPAdes-MaxBin2-test_minigut.002.fa",
                        "/e3/858abab7295808ce6e653d7e95d1c9/SPAdes-MaxBin2-test_minigut.001.fa",
                        "/4d/44326243720ca4a7cc916be905b3c4/SPAdes-test_minigut-depth.txt.gz"
                    ],
                    "outputFiles": [
                        "/a9/dfd61de3ae0e9f42b9bf29dd99ff94/SPAdes-MaxBin2-test_minigut-binDepths.tsv",
                        "/a9/dfd61de3ae0e9f42b9bf29dd99ff94/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_82",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_81",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_43"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_120",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_144",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY_146"
                    ],
                    "inputFiles": [
                        "/d1/af5b3f93228497d9441a56a2846bdd/MEGAHIT-MetaBAT2-test_minigut.2.fa",
                        "/61/cf25917be22c0d7cc036bbb291ff61/MEGAHIT-MetaBAT2-test_minigut.1.fa",
                        "/0f/da507fa0645b75fe52bef79d0cff50/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa",
                        "/0c/e5297ab42995f985f9f5e10d0aa650/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa",
                        "/f6/6a47e0524654d82be0e49d00c99f57/MEGAHIT-test_minigut-depth.txt.gz"
                    ],
                    "outputFiles": [
                        "/6a/95ee9d72f227cf503178f287f9c9ef/MEGAHIT-MetaBAT2-test_minigut-binDepths.tsv",
                        "/6a/95ee9d72f227cf503178f287f9c9ef/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_56",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_55",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_67",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_68",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_44"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_122",
                    "children": [
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_145",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY_146"
                    ],
                    "inputFiles": [
                        "/99/9391bef265fc20cdc627372089b79b/SPAdes-MetaBAT2-test_minigut.1.fa",
                        "/2c/dc9657212417f3f1714124a02c7b37/SPAdes-MetaBAT2-test_minigut.2.fa",
                        "/db/0958d1883331c1086429c2cb33e79c/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa",
                        "/1f/e0a17ccc19b5d348df7702e0ffceea/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa",
                        "/4d/44326243720ca4a7cc916be905b3c4/SPAdes-test_minigut-depth.txt.gz"
                    ],
                    "outputFiles": [
                        "/f9/e92d13b4ffdc65bdd3692de2b876c7/SPAdes-MetaBAT2-test_minigut-binDepths.tsv",
                        "/f9/e92d13b4ffdc65bdd3692de2b876c7/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_61",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_62",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_74",
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_73",
                        "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_43"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_116",
                    "children": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_154",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148"
                    ],
                    "inputFiles": [
                        "/b0/c4c13fb5a30180e93f30b443ab1807/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10"
                    ],
                    "outputFiles": [
                        "/a5/11a719f47864c4209cfd42c943c6a0/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt",
                        "/a5/11a719f47864c4209cfd42c943c6a0/busco_downloads",
                        "/a5/11a719f47864c4209cfd42c943c6a0/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log",
                        "/a5/11a719f47864c4209cfd42c943c6a0/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err",
                        "/a5/11a719f47864c4209cfd42c943c6a0/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_prodigal.gff",
                        "/a5/11a719f47864c4209cfd42c943c6a0/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt",
                        "/a5/11a719f47864c4209cfd42c943c6a0/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_78",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY",
                    "id": "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY_138",
                    "children": [
                        "NFCORE_MAG.MAG.BIN_SUMMARY_156"
                    ],
                    "inputFiles": [
                        "/0e427f2ecabcff8cfcf237e697e946/QUAST/MEGAHIT-MetaBAT2-test_minigut-quast_summary.tsv",
                        "/75ba09ccb00d7510f1b6163fef05a8/QUAST/SPAdes-MetaBAT2-test_minigut_sample2-quast_summary.tsv",
                        "/fa5c60846b08611e13ec4d185fc691/QUAST/MEGAHIT-MaxBin2-test_minigut-quast_summary.tsv",
                        "/80bbbb344191f41d74b3c89e2d8982/QUAST/SPAdes-MetaBAT2-test_minigut-quast_summary.tsv",
                        "/68a0d6876a8cb570299735403c1868/QUAST/SPAdes-MaxBin2-test_minigut-quast_summary.tsv",
                        "/732a25090d4beb96662fe81e12ba19/QUAST/MEGAHIT-MetaBAT2-test_minigut_sample2-quast_summary.tsv",
                        "/e5dc8a91b79dee2a7146e0ffa69a0c/QUAST/SPAdes-MaxBin2-test_minigut_sample2-quast_summary.tsv"
                    ],
                    "outputFiles": [
                        "/3e/1dd392ebd00f7498212164127990ba/quast_summary.tsv",
                        "/3e/1dd392ebd00f7498212164127990ba/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.QUAST_BINS_117",
                        "NFCORE_MAG.MAG.QUAST_BINS_137",
                        "NFCORE_MAG.MAG.QUAST_BINS_124",
                        "NFCORE_MAG.MAG.QUAST_BINS_123",
                        "NFCORE_MAG.MAG.QUAST_BINS_127",
                        "NFCORE_MAG.MAG.QUAST_BINS_136",
                        "NFCORE_MAG.MAG.QUAST_BINS_135"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_139",
                    "children": [],
                    "inputFiles": [
                        "/0e/51dc37ddf45a8a1d257f31210ed41e/MEGAHIT-MaxBin2-test_minigut-binDepths.tsv",
                        "/11/13d0058bde55bb4f6f22246229827e/sample_groups.tsv"
                    ],
                    "outputFiles": [
                        "/d2/547c82e39ef05977978241fc65d4a8/MEGAHIT-MaxBin2-test_minigut-binDepths.heatmap.png",
                        "/d2/547c82e39ef05977978241fc65d4a8/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_121"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_140",
                    "children": [],
                    "inputFiles": [
                        "/3f/89d58d5f5a6ea4c27460a9e94b4343/MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                        "/11/13d0058bde55bb4f6f22246229827e/sample_groups.tsv"
                    ],
                    "outputFiles": [
                        "/56/c0dfe28532e158c500482f1a27e37d/MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.heatmap.png",
                        "/56/c0dfe28532e158c500482f1a27e37d/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_131"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_141",
                    "children": [],
                    "inputFiles": [
                        "/83/74fe64a2bed18c6ba5af48eca390d0/SPAdes-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                        "/11/13d0058bde55bb4f6f22246229827e/sample_groups.tsv"
                    ],
                    "outputFiles": [
                        "/bf/afb1637bffc0858e9f84cb10a77788/SPAdes-MetaBAT2-test_minigut_sample2-binDepths.heatmap.png",
                        "/bf/afb1637bffc0858e9f84cb10a77788/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_133"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_142",
                    "children": [],
                    "inputFiles": [
                        "/6b/c98cdd973d773b166cdea86c59b9fe/SPAdes-MaxBin2-test_minigut_sample2-binDepths.tsv",
                        "/11/13d0058bde55bb4f6f22246229827e/sample_groups.tsv"
                    ],
                    "outputFiles": [
                        "/4e/f151f6b1416b71c24977395ee58991/SPAdes-MaxBin2-test_minigut_sample2-binDepths.heatmap.png",
                        "/4e/f151f6b1416b71c24977395ee58991/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_134"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_143",
                    "children": [],
                    "inputFiles": [
                        "/a9/dfd61de3ae0e9f42b9bf29dd99ff94/SPAdes-MaxBin2-test_minigut-binDepths.tsv",
                        "/11/13d0058bde55bb4f6f22246229827e/sample_groups.tsv"
                    ],
                    "outputFiles": [
                        "/f7/8b9d5a47642ee2c2929dfa6026708f/SPAdes-MaxBin2-test_minigut-binDepths.heatmap.png",
                        "/f7/8b9d5a47642ee2c2929dfa6026708f/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_126"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_144",
                    "children": [],
                    "inputFiles": [
                        "/6a/95ee9d72f227cf503178f287f9c9ef/MEGAHIT-MetaBAT2-test_minigut-binDepths.tsv",
                        "/11/13d0058bde55bb4f6f22246229827e/sample_groups.tsv"
                    ],
                    "outputFiles": [
                        "/45/c4f2b6c9d8115b5f90a06f367b951b/MEGAHIT-MetaBAT2-test_minigut-binDepths.heatmap.png",
                        "/45/c4f2b6c9d8115b5f90a06f367b951b/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_120"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_145",
                    "children": [],
                    "inputFiles": [
                        "/f9/e92d13b4ffdc65bdd3692de2b876c7/SPAdes-MetaBAT2-test_minigut-binDepths.tsv",
                        "/11/13d0058bde55bb4f6f22246229827e/sample_groups.tsv"
                    ],
                    "outputFiles": [
                        "/9c/79fb3c7c6fbee7e29e04ac97e694a6/SPAdes-MetaBAT2-test_minigut-binDepths.heatmap.png",
                        "/9c/79fb3c7c6fbee7e29e04ac97e694a6/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_122"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY_146",
                    "children": [
                        "NFCORE_MAG.MAG.BIN_SUMMARY_156"
                    ],
                    "inputFiles": [
                        "/0e/51dc37ddf45a8a1d257f31210ed41e/MEGAHIT-MaxBin2-test_minigut-binDepths.tsv",
                        "/3f/89d58d5f5a6ea4c27460a9e94b4343/MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                        "/83/74fe64a2bed18c6ba5af48eca390d0/SPAdes-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                        "/6b/c98cdd973d773b166cdea86c59b9fe/SPAdes-MaxBin2-test_minigut_sample2-binDepths.tsv",
                        "/a9/dfd61de3ae0e9f42b9bf29dd99ff94/SPAdes-MaxBin2-test_minigut-binDepths.tsv",
                        "/6a/95ee9d72f227cf503178f287f9c9ef/MEGAHIT-MetaBAT2-test_minigut-binDepths.tsv",
                        "/f9/e92d13b4ffdc65bdd3692de2b876c7/SPAdes-MetaBAT2-test_minigut-binDepths.tsv"
                    ],
                    "outputFiles": [
                        "/12/f23515f1d57ae46421f6f0e13c854c/bin_depths_summary.tsv",
                        "/12/f23515f1d57ae46421f6f0e13c854c/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_121",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_131",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_133",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_134",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_126",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_120",
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_122"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_147",
                    "children": [],
                    "inputFiles": [
                        "/b6/b7ace9100172f939fce1a324bafeec/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.002.fa.txt",
                        "/cc/8e484c5973a041ea6a7de5ffb9a4d6/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.001.fa.txt"
                    ],
                    "outputFiles": [
                        "/0a/0d559a4b8d0071a64d4d4e63b17b87/MEGAHIT-MaxBin2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.png",
                        "/0a/0d559a4b8d0071a64d4d4e63b17b87/MEGAHIT-MaxBin2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.R",
                        "/0a/0d559a4b8d0071a64d4d4e63b17b87/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_95",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_97"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_153",
                    "children": [],
                    "inputFiles": [
                        "/f4/2b25e66e4794ad80e085d57991a17f/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt",
                        "/de/9424c88160a29cbe98e6db3e5eddd6/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt"
                    ],
                    "outputFiles": [
                        "/e7/f3feb3afc5ddd255b1f2d28edb333f/MEGAHIT-MetaBAT2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.png",
                        "/e7/f3feb3afc5ddd255b1f2d28edb333f/MEGAHIT-MetaBAT2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.R",
                        "/e7/f3feb3afc5ddd255b1f2d28edb333f/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_110",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_109"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_149",
                    "children": [],
                    "inputFiles": [
                        "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.002.fa.txt",
                        "/18/ba9403eaf56fae25a02be1c30984fe/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.001.fa.txt"
                    ],
                    "outputFiles": [
                        "/a4/7c5c785b7f11dc6c98b083bca5d613/SPAdes-MaxBin2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.png",
                        "/a4/7c5c785b7f11dc6c98b083bca5d613/SPAdes-MaxBin2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.R",
                        "/a4/7c5c785b7f11dc6c98b083bca5d613/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_100",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_102"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_151",
                    "children": [],
                    "inputFiles": [
                        "/38/556350b2b2b8efe6d2264985733b0c/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt",
                        "/4c/002d51c5239b46efae0101b8737275/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt",
                        "/00/056cc9e0b256cf0fb6f145d85aa73a/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                        "/dd/67d472dc329d9ecf4445b693374ddb/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt"
                    ],
                    "outputFiles": [
                        "/c5/4827cc93cde0b20721292a00c0971e/MEGAHIT-MetaBAT2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.png",
                        "/c5/4827cc93cde0b20721292a00c0971e/MEGAHIT-MetaBAT2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.R",
                        "/c5/4827cc93cde0b20721292a00c0971e/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_89",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_86",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_107",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_105"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_152",
                    "children": [],
                    "inputFiles": [
                        "/77/ccbf52f5eeff4956e8bb7fa0b056bf/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt",
                        "/0d/922fde31aa037b2ab959dacef5fbc9/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt",
                        "/21/a612f469bfb3131b66630b7b59bbf6/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt"
                    ],
                    "outputFiles": [
                        "/69/5f870daa570f9ee4579d708f3a3b68/SPAdes-MaxBin2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.png",
                        "/69/5f870daa570f9ee4579d708f3a3b68/SPAdes-MaxBin2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.R",
                        "/69/5f870daa570f9ee4579d708f3a3b68/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_103",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_119",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_128"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_150",
                    "children": [],
                    "inputFiles": [
                        "/7d/87145d575e7a7abf53c38bc1f42c46/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.1.fa.txt",
                        "/c9/4ae56826c49a7fe1063c5a40993c8f/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.2.fa.txt",
                        "/2b/b9c67b024483e9dcc03590bd534af3/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                        "/3b/07878d030aa541a9e52c22ba4ced01/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt"
                    ],
                    "outputFiles": [
                        "/ad/5892e7bcfa04be19c8e4a313a307c5/SPAdes-MetaBAT2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.png",
                        "/ad/5892e7bcfa04be19c8e4a313a307c5/SPAdes-MetaBAT2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.R",
                        "/ad/5892e7bcfa04be19c8e4a313a307c5/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_91",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_93",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_112",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_114"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_154",
                    "children": [],
                    "inputFiles": [
                        "/1a/84f07aa032c5c6074182ab239ba71a/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt",
                        "/a5/11a719f47864c4209cfd42c943c6a0/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt"
                    ],
                    "outputFiles": [
                        "/db/573ffa1e5e78f1a2a2941ce6340173/SPAdes-MetaBAT2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.png",
                        "/db/573ffa1e5e78f1a2a2941ce6340173/SPAdes-MetaBAT2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.R",
                        "/db/573ffa1e5e78f1a2a2941ce6340173/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_118",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_116"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148",
                    "children": [
                        "NFCORE_MAG.MAG.BIN_SUMMARY_156"
                    ],
                    "inputFiles": [
                        "/b6/b7ace9100172f939fce1a324bafeec/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.002.fa.txt",
                        "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.002.fa.txt",
                        "/7d/87145d575e7a7abf53c38bc1f42c46/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.1.fa.txt",
                        "/18/ba9403eaf56fae25a02be1c30984fe/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.001.fa.txt",
                        "/38/556350b2b2b8efe6d2264985733b0c/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt",
                        "/4c/002d51c5239b46efae0101b8737275/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt",
                        "/cc/8e484c5973a041ea6a7de5ffb9a4d6/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.001.fa.txt",
                        "/c9/4ae56826c49a7fe1063c5a40993c8f/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.2.fa.txt",
                        "/77/ccbf52f5eeff4956e8bb7fa0b056bf/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt",
                        "/f4/2b25e66e4794ad80e085d57991a17f/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt",
                        "/2b/b9c67b024483e9dcc03590bd534af3/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                        "/1a/84f07aa032c5c6074182ab239ba71a/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt",
                        "/00/056cc9e0b256cf0fb6f145d85aa73a/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                        "/3b/07878d030aa541a9e52c22ba4ced01/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt",
                        "/0d/922fde31aa037b2ab959dacef5fbc9/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt",
                        "/21/a612f469bfb3131b66630b7b59bbf6/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt",
                        "/dd/67d472dc329d9ecf4445b693374ddb/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt",
                        "/de/9424c88160a29cbe98e6db3e5eddd6/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt",
                        "/a5/11a719f47864c4209cfd42c943c6a0/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt",
                        "/f4/2b25e66e4794ad80e085d57991a17f/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt",
                        "/2b/b9c67b024483e9dcc03590bd534af3/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt",
                        "/1a/84f07aa032c5c6074182ab239ba71a/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt",
                        "/0d/922fde31aa037b2ab959dacef5fbc9/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.failed_bin.txt",
                        "/21/a612f469bfb3131b66630b7b59bbf6/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.failed_bin.txt",
                        "/dd/67d472dc329d9ecf4445b693374ddb/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt",
                        "/de/9424c88160a29cbe98e6db3e5eddd6/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt",
                        "/a5/11a719f47864c4209cfd42c943c6a0/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt"
                    ],
                    "outputFiles": [
                        "/b5/a1ee3f2ac4873500275e4261b8c40a/busco_summary.tsv",
                        "/b5/a1ee3f2ac4873500275e4261b8c40a/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_95",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_100",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_91",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_102",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_89",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_86",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_97",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_93",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_103",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_110",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_112",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_118",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_107",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_114",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_119",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_128",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_105",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_109",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_116"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "id": "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS_155",
                    "children": [
                        "NFCORE_MAG.MAG.MULTIQC_157"
                    ],
                    "inputFiles": [
                        "/c1/f9762963534aab9eea70cf358c6bcd/collated_versions.yml"
                    ],
                    "outputFiles": [
                        "/88/e05321a3ea4e89fc6bd5050c765259/software_versions.yml",
                        "/88/e05321a3ea4e89fc6bd5050c765259/software_versions_mqc.yml",
                        "/88/e05321a3ea4e89fc6bd5050c765259/versions.yml"
                    ],
                    "parents": []
                },
                {
                    "name": "NFCORE_MAG.MAG.BIN_SUMMARY",
                    "id": "NFCORE_MAG.MAG.BIN_SUMMARY_156",
                    "children": [],
                    "inputFiles": [
                        "/12/f23515f1d57ae46421f6f0e13c854c/bin_depths_summary.tsv",
                        "/b5/a1ee3f2ac4873500275e4261b8c40a/busco_summary.tsv",
                        "/3e/1dd392ebd00f7498212164127990ba/quast_summary.tsv"
                    ],
                    "outputFiles": [
                        "/38/267c4da019d070e70a33074290c93a/bin_summary.tsv",
                        "/38/267c4da019d070e70a33074290c93a/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY_146",
                        "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148",
                        "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY_138"
                    ]
                },
                {
                    "name": "NFCORE_MAG.MAG.MULTIQC",
                    "id": "NFCORE_MAG.MAG.MULTIQC_157",
                    "children": [],
                    "inputFiles": [
                        "/mag/assets/multiqc_config.yml",
                        "/6f/532c18d0a1139011180d991b5d2adc/workflow_summary_mqc.yaml",
                        "/88/e05321a3ea4e89fc6bd5050c765259/software_versions_mqc.yml",
                        "/6f/2f1ecb5353f866c1f6539117e859bd/test_minigut_sample2_1_fastqc.zip",
                        "/6f/2f1ecb5353f866c1f6539117e859bd/test_minigut_sample2_2_fastqc.zip",
                        "/50/450582b8fedacb9adbb8d3bd395bc7/test_minigut_1_fastqc.zip",
                        "/50/450582b8fedacb9adbb8d3bd395bc7/test_minigut_2_fastqc.zip",
                        "/76/d4869464a5074828810a263f222c16/test_minigut_sample2.trimmed_1_fastqc.zip",
                        "/76/d4869464a5074828810a263f222c16/test_minigut_sample2.trimmed_2_fastqc.zip",
                        "/8b/951f59ff6eff428229c9d8deeb003f/test_minigut.trimmed_1_fastqc.zip",
                        "/8b/951f59ff6eff428229c9d8deeb003f/test_minigut.trimmed_2_fastqc.zip",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/basic_stats",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/icarus.html",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/icarus_viewers",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/metaquast.log",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/predicted_genes",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/quast.log",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/report.html",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/report.pdf",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/report.tex",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/report.tsv",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/report.txt",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/transposed_report.tex",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/transposed_report.tsv",
                        "/0141a35dc4cfe921c2795e8375987c/QUAST/transposed_report.txt",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/basic_stats",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/icarus.html",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/icarus_viewers",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/metaquast.log",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/predicted_genes",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/quast.log",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/report.html",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/report.pdf",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/report.tex",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/report.tsv",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/report.txt",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/transposed_report.tex",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/transposed_report.tsv",
                        "/f3bde70ef3b153d702923d488c467a/QUAST/transposed_report.txt",
                        "/12f50d9fab75af67b6d58104068945/QUAST/basic_stats",
                        "/12f50d9fab75af67b6d58104068945/QUAST/icarus.html",
                        "/12f50d9fab75af67b6d58104068945/QUAST/icarus_viewers",
                        "/12f50d9fab75af67b6d58104068945/QUAST/metaquast.log",
                        "/12f50d9fab75af67b6d58104068945/QUAST/predicted_genes",
                        "/12f50d9fab75af67b6d58104068945/QUAST/quast.log",
                        "/12f50d9fab75af67b6d58104068945/QUAST/report.html",
                        "/12f50d9fab75af67b6d58104068945/QUAST/report.pdf",
                        "/12f50d9fab75af67b6d58104068945/QUAST/report.tex",
                        "/12f50d9fab75af67b6d58104068945/QUAST/report.tsv",
                        "/12f50d9fab75af67b6d58104068945/QUAST/report.txt",
                        "/12f50d9fab75af67b6d58104068945/QUAST/transposed_report.tex",
                        "/12f50d9fab75af67b6d58104068945/QUAST/transposed_report.tsv",
                        "/12f50d9fab75af67b6d58104068945/QUAST/transposed_report.txt",
                        "/970e9d834edce57f29423a99aac816/QUAST/basic_stats",
                        "/970e9d834edce57f29423a99aac816/QUAST/icarus.html",
                        "/970e9d834edce57f29423a99aac816/QUAST/icarus_viewers",
                        "/970e9d834edce57f29423a99aac816/QUAST/metaquast.log",
                        "/970e9d834edce57f29423a99aac816/QUAST/predicted_genes",
                        "/970e9d834edce57f29423a99aac816/QUAST/quast.log",
                        "/970e9d834edce57f29423a99aac816/QUAST/report.html",
                        "/970e9d834edce57f29423a99aac816/QUAST/report.pdf",
                        "/970e9d834edce57f29423a99aac816/QUAST/report.tex",
                        "/970e9d834edce57f29423a99aac816/QUAST/report.tsv",
                        "/970e9d834edce57f29423a99aac816/QUAST/report.txt",
                        "/970e9d834edce57f29423a99aac816/QUAST/transposed_report.tex",
                        "/970e9d834edce57f29423a99aac816/QUAST/transposed_report.tsv",
                        "/970e9d834edce57f29423a99aac816/QUAST/transposed_report.txt",
                        "/0e/af902dd643f65055d1d1a4cdc03eec/SPAdes-test_minigut_sample2.bowtie2.log",
                        "/d3/c332ef8efac5a782924ca4114ed8cd/MEGAHIT-test_minigut_sample2.bowtie2.log",
                        "/19/a9432a2954b25b99d4bcbc6ae5dbb7/SPAdes-test_minigut.bowtie2.log",
                        "/34/adfd77975be3d0c5eaa06394c1187e/MEGAHIT-test_minigut.bowtie2.log",
                        "/e1/9a7accee5f5f4db3f7c9248cada164/test_minigut_sample2.fastp.json",
                        "/ef/a6a4e285761f2a6fdc82cd62443b5b/test_minigut.fastp.json"
                    ],
                    "outputFiles": [
                        "/0d/e596dfa2a9ea40d2a56cad1f4d12a0/multiqc_report.html",
                        "/0d/e596dfa2a9ea40d2a56cad1f4d12a0/multiqc_data",
                        "/0d/e596dfa2a9ea40d2a56cad1f4d12a0/multiqc_plots",
                        "/0d/e596dfa2a9ea40d2a56cad1f4d12a0/versions.yml"
                    ],
                    "parents": [
                        "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS_155",
                        "NFCORE_MAG.MAG.FASTQC_RAW_8",
                        "NFCORE_MAG.MAG.FASTQC_RAW_5",
                        "NFCORE_MAG.MAG.FASTQC_TRIMMED_13",
                        "NFCORE_MAG.MAG.FASTQC_TRIMMED_16",
                        "NFCORE_MAG.MAG.QUAST_23",
                        "NFCORE_MAG.MAG.QUAST_26",
                        "NFCORE_MAG.MAG.QUAST_27",
                        "NFCORE_MAG.MAG.QUAST_31",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_33",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_35",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_38",
                        "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_40",
                        "NFCORE_MAG.MAG.FASTP_7",
                        "NFCORE_MAG.MAG.FASTP_6"
                    ]
                }
            ],
            "files": [
                {
                    "id": "/assets/data/GCA_002596845.1_ASM259684v1_genomic.fna.gz",
                    "sizeInBytes": 1888
                },
                {
                    "id": "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.1.bt2",
                    "sizeInBytes": 4196364
                },
                {
                    "id": "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.2.bt2",
                    "sizeInBytes": 1352
                },
                {
                    "id": "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.3.bt2",
                    "sizeInBytes": 17
                },
                {
                    "id": "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.4.bt2",
                    "sizeInBytes": 1347
                },
                {
                    "id": "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.rev.1.bt2",
                    "sizeInBytes": 4196364
                },
                {
                    "id": "/65/cca0d6e03987d09dfb6178128e570f/bt2_index_base.rev.2.bt2",
                    "sizeInBytes": 1352
                },
                {
                    "id": "/65/cca0d6e03987d09dfb6178128e570f/versions.yml",
                    "sizeInBytes": 64
                },
                {
                    "id": "/nf-core/test-datasets/mag/test_data/minigut_kraken.tgz",
                    "sizeInBytes": 3547
                },
                {
                    "id": "/644e6092e3c12d271e3aba5effa524/database/hash.k2d",
                    "sizeInBytes": 3151024
                },
                {
                    "id": "/644e6092e3c12d271e3aba5effa524/database/opts.k2d",
                    "sizeInBytes": 56
                },
                {
                    "id": "/644e6092e3c12d271e3aba5effa524/database/taxo.k2d",
                    "sizeInBytes": 469
                },
                {
                    "id": "/a6/644e6092e3c12d271e3aba5effa524/versions.yml",
                    "sizeInBytes": 55
                },
                {
                    "id": "/nf-core/test-datasets/mag/test_data/minigut_cf.tar.gz",
                    "sizeInBytes": 1771931
                },
                {
                    "id": "/29/d9bbf244f81d328b039396cf2f6556/minigut_cf.1.cf",
                    "sizeInBytes": 8972492
                },
                {
                    "id": "/29/d9bbf244f81d328b039396cf2f6556/minigut_cf.2.cf",
                    "sizeInBytes": 218756
                },
                {
                    "id": "/29/d9bbf244f81d328b039396cf2f6556/minigut_cf.3.cf",
                    "sizeInBytes": 76
                },
                {
                    "id": "/29/d9bbf244f81d328b039396cf2f6556/minigut_cf.4.cf",
                    "sizeInBytes": 36
                },
                {
                    "id": "/29/d9bbf244f81d328b039396cf2f6556/versions.yml",
                    "sizeInBytes": 58
                },
                {
                    "id": "/v5/data/lineages/bacteria_odb10.2020-03-06.tar.gz",
                    "sizeInBytes": 6084321
                },
                {
                    "id": "/3b8667566a46b50251687dc3dbcaeb/buscodb/bacteria_odb10",
                    "sizeInBytes": 26901713
                },
                {
                    "id": "/67/3b8667566a46b50251687dc3dbcaeb/bacteria_odb10.2020-03-06.tar.gz",
                    "sizeInBytes": 6084321
                },
                {
                    "id": "/67/3b8667566a46b50251687dc3dbcaeb/versions.yml",
                    "sizeInBytes": 62
                },
                {
                    "id": "/nf-core/test-datasets/raw/mag/test_data/test_minigut_sample2_R1.fastq.gz",
                    "sizeInBytes": 1599430
                },
                {
                    "id": "/nf-core/test-datasets/raw/mag/test_data/test_minigut_sample2_R2.fastq.gz",
                    "sizeInBytes": 1806457
                },
                {
                    "id": "/e1/9a7accee5f5f4db3f7c9248cada164/test_minigut_sample2_1.trim.fastq.gz",
                    "sizeInBytes": 1659506
                },
                {
                    "id": "/e1/9a7accee5f5f4db3f7c9248cada164/test_minigut_sample2_2.trim.fastq.gz",
                    "sizeInBytes": 1857297
                },
                {
                    "id": "/e1/9a7accee5f5f4db3f7c9248cada164/test_minigut_sample2.fastp.json",
                    "sizeInBytes": 124522
                },
                {
                    "id": "/e1/9a7accee5f5f4db3f7c9248cada164/test_minigut_sample2.fastp.html",
                    "sizeInBytes": 475979
                },
                {
                    "id": "/e1/9a7accee5f5f4db3f7c9248cada164/test_minigut_sample2.fastp.log",
                    "sizeInBytes": 1405
                },
                {
                    "id": "/e1/9a7accee5f5f4db3f7c9248cada164/versions.yml",
                    "sizeInBytes": 42
                },
                {
                    "id": "/6f/2f1ecb5353f866c1f6539117e859bd/test_minigut_sample2_1_fastqc.html",
                    "sizeInBytes": 518269
                },
                {
                    "id": "/6f/2f1ecb5353f866c1f6539117e859bd/test_minigut_sample2_2_fastqc.html",
                    "sizeInBytes": 522232
                },
                {
                    "id": "/6f/2f1ecb5353f866c1f6539117e859bd/test_minigut_sample2_1_fastqc.zip",
                    "sizeInBytes": 290235
                },
                {
                    "id": "/6f/2f1ecb5353f866c1f6539117e859bd/test_minigut_sample2_2_fastqc.zip",
                    "sizeInBytes": 288657
                },
                {
                    "id": "/6f/2f1ecb5353f866c1f6539117e859bd/versions.yml",
                    "sizeInBytes": 48
                },
                {
                    "id": "/nf-core/test-datasets/raw/mag/test_data/test_minigut_R1.fastq.gz",
                    "sizeInBytes": 3323528
                },
                {
                    "id": "/nf-core/test-datasets/raw/mag/test_data/test_minigut_R2.fastq.gz",
                    "sizeInBytes": 3398619
                },
                {
                    "id": "/50/450582b8fedacb9adbb8d3bd395bc7/test_minigut_1_fastqc.html",
                    "sizeInBytes": 617474
                },
                {
                    "id": "/50/450582b8fedacb9adbb8d3bd395bc7/test_minigut_2_fastqc.html",
                    "sizeInBytes": 611062
                },
                {
                    "id": "/50/450582b8fedacb9adbb8d3bd395bc7/test_minigut_1_fastqc.zip",
                    "sizeInBytes": 288243
                },
                {
                    "id": "/50/450582b8fedacb9adbb8d3bd395bc7/test_minigut_2_fastqc.zip",
                    "sizeInBytes": 284771
                },
                {
                    "id": "/50/450582b8fedacb9adbb8d3bd395bc7/versions.yml",
                    "sizeInBytes": 48
                },
                {
                    "id": "/ef/a6a4e285761f2a6fdc82cd62443b5b/test_minigut_1.trim.fastq.gz",
                    "sizeInBytes": 3406561
                },
                {
                    "id": "/ef/a6a4e285761f2a6fdc82cd62443b5b/test_minigut_2.trim.fastq.gz",
                    "sizeInBytes": 3469254
                },
                {
                    "id": "/ef/a6a4e285761f2a6fdc82cd62443b5b/test_minigut.fastp.json",
                    "sizeInBytes": 112556
                },
                {
                    "id": "/ef/a6a4e285761f2a6fdc82cd62443b5b/test_minigut.fastp.html",
                    "sizeInBytes": 457904
                },
                {
                    "id": "/ef/a6a4e285761f2a6fdc82cd62443b5b/test_minigut.fastp.log",
                    "sizeInBytes": 1347
                },
                {
                    "id": "/ef/a6a4e285761f2a6fdc82cd62443b5b/versions.yml",
                    "sizeInBytes": 42
                },
                {
                    "id": "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                    "sizeInBytes": 1533274
                },
                {
                    "id": "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                    "sizeInBytes": 1725571
                },
                {
                    "id": "/ea/1e72e1b1377c3d02c04de57959f90c/test_minigut_sample2.phix_removed.bowtie2.log",
                    "sizeInBytes": 589
                },
                {
                    "id": "/ea/1e72e1b1377c3d02c04de57959f90c/versions.yml",
                    "sizeInBytes": 64
                },
                {
                    "id": "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_1.fastq.gz",
                    "sizeInBytes": 3170229
                },
                {
                    "id": "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.unmapped_2.fastq.gz",
                    "sizeInBytes": 3239664
                },
                {
                    "id": "/38/3e15417f276043c818951567f10ef3/test_minigut.phix_removed.bowtie2.log",
                    "sizeInBytes": 589
                },
                {
                    "id": "/38/3e15417f276043c818951567f10ef3/versions.yml",
                    "sizeInBytes": 64
                },
                {
                    "id": "/64/ac465571215560fb4f940988bed32e/results.krona",
                    "sizeInBytes": 491562
                },
                {
                    "id": "/64/ac465571215560fb4f940988bed32e/kraken2_report.txt",
                    "sizeInBytes": 56
                },
                {
                    "id": "/64/ac465571215560fb4f940988bed32e/versions.yml",
                    "sizeInBytes": 50
                },
                {
                    "id": "/76/d4869464a5074828810a263f222c16/test_minigut_sample2.trimmed_1_fastqc.html",
                    "sizeInBytes": 537305
                },
                {
                    "id": "/76/d4869464a5074828810a263f222c16/test_minigut_sample2.trimmed_2_fastqc.html",
                    "sizeInBytes": 533381
                },
                {
                    "id": "/76/d4869464a5074828810a263f222c16/test_minigut_sample2.trimmed_1_fastqc.zip",
                    "sizeInBytes": 284126
                },
                {
                    "id": "/76/d4869464a5074828810a263f222c16/test_minigut_sample2.trimmed_2_fastqc.zip",
                    "sizeInBytes": 280611
                },
                {
                    "id": "/76/d4869464a5074828810a263f222c16/versions.yml",
                    "sizeInBytes": 52
                },
                {
                    "id": "/33/6b3a353b633c73ead2741ef5975521/results.krona",
                    "sizeInBytes": 491575
                },
                {
                    "id": "/33/6b3a353b633c73ead2741ef5975521/report.txt",
                    "sizeInBytes": 64
                },
                {
                    "id": "/33/6b3a353b633c73ead2741ef5975521/kreport.txt",
                    "sizeInBytes": 36
                },
                {
                    "id": "/33/6b3a353b633c73ead2741ef5975521/versions.yml",
                    "sizeInBytes": 51
                },
                {
                    "id": "/49/459b733ed35ca7c4770c41c0deb106/SPAdes-test_minigut_sample2_scaffolds.fasta",
                    "sizeInBytes": 2133044
                },
                {
                    "id": "/49/459b733ed35ca7c4770c41c0deb106/SPAdes-test_minigut_sample2.log",
                    "sizeInBytes": 123533
                },
                {
                    "id": "/49/459b733ed35ca7c4770c41c0deb106/SPAdes-test_minigut_sample2_contigs.fasta.gz",
                    "sizeInBytes": 653791
                },
                {
                    "id": "/49/459b733ed35ca7c4770c41c0deb106/SPAdes-test_minigut_sample2_scaffolds.fasta.gz",
                    "sizeInBytes": 653336
                },
                {
                    "id": "/49/459b733ed35ca7c4770c41c0deb106/SPAdes-test_minigut_sample2_graph.gfa.gz",
                    "sizeInBytes": 685577
                },
                {
                    "id": "/49/459b733ed35ca7c4770c41c0deb106/versions.yml",
                    "sizeInBytes": 66
                },
                {
                    "id": "/a492871941f9de2ee62bab563f685e/MEGAHIT/MEGAHIT-test_minigut_sample2.contigs.fa",
                    "sizeInBytes": 681245
                },
                {
                    "id": "/a492871941f9de2ee62bab563f685e/MEGAHIT/MEGAHIT-test_minigut_sample2.log",
                    "sizeInBytes": 131685
                },
                {
                    "id": "/a492871941f9de2ee62bab563f685e/MEGAHIT/MEGAHIT-test_minigut_sample2.contigs.fa.gz",
                    "sizeInBytes": 198503
                },
                {
                    "id": "/83/a492871941f9de2ee62bab563f685e/versions.yml",
                    "sizeInBytes": 45
                },
                {
                    "id": "/1c/1e5e8125d64e1dd5306b85c6967d69/results.krona",
                    "sizeInBytes": 951947
                },
                {
                    "id": "/1c/1e5e8125d64e1dd5306b85c6967d69/report.txt",
                    "sizeInBytes": 64
                },
                {
                    "id": "/1c/1e5e8125d64e1dd5306b85c6967d69/kreport.txt",
                    "sizeInBytes": 36
                },
                {
                    "id": "/1c/1e5e8125d64e1dd5306b85c6967d69/versions.yml",
                    "sizeInBytes": 51
                },
                {
                    "id": "/cc/88fddc4525a53abf78a8bcde4df507/SPAdes-test_minigut_scaffolds.fasta",
                    "sizeInBytes": 1772115
                },
                {
                    "id": "/cc/88fddc4525a53abf78a8bcde4df507/SPAdes-test_minigut.log",
                    "sizeInBytes": 121585
                },
                {
                    "id": "/cc/88fddc4525a53abf78a8bcde4df507/SPAdes-test_minigut_contigs.fasta.gz",
                    "sizeInBytes": 547458
                },
                {
                    "id": "/cc/88fddc4525a53abf78a8bcde4df507/SPAdes-test_minigut_scaffolds.fasta.gz",
                    "sizeInBytes": 545217
                },
                {
                    "id": "/cc/88fddc4525a53abf78a8bcde4df507/SPAdes-test_minigut_graph.gfa.gz",
                    "sizeInBytes": 518118
                },
                {
                    "id": "/cc/88fddc4525a53abf78a8bcde4df507/versions.yml",
                    "sizeInBytes": 66
                },
                {
                    "id": "/9e/be323b74a69fcf33b7f7a228009a3a/results.krona",
                    "sizeInBytes": 951934
                },
                {
                    "id": "/9e/be323b74a69fcf33b7f7a228009a3a/kraken2_report.txt",
                    "sizeInBytes": 56
                },
                {
                    "id": "/9e/be323b74a69fcf33b7f7a228009a3a/versions.yml",
                    "sizeInBytes": 50
                },
                {
                    "id": "/8b/951f59ff6eff428229c9d8deeb003f/test_minigut.trimmed_1_fastqc.html",
                    "sizeInBytes": 651238
                },
                {
                    "id": "/8b/951f59ff6eff428229c9d8deeb003f/test_minigut.trimmed_2_fastqc.html",
                    "sizeInBytes": 647910
                },
                {
                    "id": "/8b/951f59ff6eff428229c9d8deeb003f/test_minigut.trimmed_1_fastqc.zip",
                    "sizeInBytes": 287336
                },
                {
                    "id": "/8b/951f59ff6eff428229c9d8deeb003f/test_minigut.trimmed_2_fastqc.zip",
                    "sizeInBytes": 289084
                },
                {
                    "id": "/8b/951f59ff6eff428229c9d8deeb003f/versions.yml",
                    "sizeInBytes": 52
                },
                {
                    "id": "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/MEGAHIT-test_minigut.contigs.fa",
                    "sizeInBytes": 1749885
                },
                {
                    "id": "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/MEGAHIT-test_minigut.log",
                    "sizeInBytes": 130295
                },
                {
                    "id": "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/MEGAHIT-test_minigut.contigs.fa.gz",
                    "sizeInBytes": 511173
                },
                {
                    "id": "/c2/101a0fb9edf105a9bbbaa4215ca2b5/versions.yml",
                    "sizeInBytes": 45
                },
                {
                    "id": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/SPAdes-test_minigut_sample2_scaffolds.fasta",
                    "sizeInBytes": 2133044
                },
                {
                    "id": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.1.bt2",
                    "sizeInBytes": 5085180
                },
                {
                    "id": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.2.bt2",
                    "sizeInBytes": 470452
                },
                {
                    "id": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.3.bt2",
                    "sizeInBytes": 49589
                },
                {
                    "id": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.4.bt2",
                    "sizeInBytes": 470447
                },
                {
                    "id": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.rev.1.bt2",
                    "sizeInBytes": 5085180
                },
                {
                    "id": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/bt2_index_base.rev.2.bt2",
                    "sizeInBytes": 470452
                },
                {
                    "id": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/versions.yml",
                    "sizeInBytes": 80
                },
                {
                    "id": "/9e/34f9fa9af0d2520ba072bb7e5902dc/test_minigut_sample2.gff",
                    "sizeInBytes": 2609126
                },
                {
                    "id": "/9e/34f9fa9af0d2520ba072bb7e5902dc/test_minigut_sample2.fna",
                    "sizeInBytes": 2467069
                },
                {
                    "id": "/9e/34f9fa9af0d2520ba072bb7e5902dc/test_minigut_sample2.faa",
                    "sizeInBytes": 1357941
                },
                {
                    "id": "/9e/34f9fa9af0d2520ba072bb7e5902dc/test_minigut_sample2_all.txt",
                    "sizeInBytes": 5633865
                },
                {
                    "id": "/9e/34f9fa9af0d2520ba072bb7e5902dc/versions.yml",
                    "sizeInBytes": 61
                },
                {
                    "id": "/0141a35dc4cfe921c2795e8375987c/QUAST/basic_stats",
                    "sizeInBytes": 92290
                },
                {
                    "id": "/0141a35dc4cfe921c2795e8375987c/QUAST/icarus.html",
                    "sizeInBytes": 53372
                },
                {
                    "id": "/0141a35dc4cfe921c2795e8375987c/QUAST/icarus_viewers",
                    "sizeInBytes": 833150
                },
                {
                    "id": "/0141a35dc4cfe921c2795e8375987c/QUAST/metaquast.log",
                    "sizeInBytes": 730
                },
                {
                    "id": "/0141a35dc4cfe921c2795e8375987c/QUAST/predicted_genes",
                    "sizeInBytes": 334
                },
                {
                    "id": "/0141a35dc4cfe921c2795e8375987c/QUAST/quast.log",
                    "sizeInBytes": 3941
                },
                {
                    "id": "/0141a35dc4cfe921c2795e8375987c/QUAST/report.html",
                    "sizeInBytes": 393153
                },
                {
                    "id": "/0141a35dc4cfe921c2795e8375987c/QUAST/report.pdf",
                    "sizeInBytes": 33778
                },
                {
                    "id": "/0141a35dc4cfe921c2795e8375987c/QUAST/report.tex",
                    "sizeInBytes": 1229
                },
                {
                    "id": "/0141a35dc4cfe921c2795e8375987c/QUAST/report.tsv",
                    "sizeInBytes": 534
                },
                {
                    "id": "/0141a35dc4cfe921c2795e8375987c/QUAST/report.txt",
                    "sizeInBytes": 1447
                },
                {
                    "id": "/0141a35dc4cfe921c2795e8375987c/QUAST/transposed_report.tex",
                    "sizeInBytes": 1062
                },
                {
                    "id": "/0141a35dc4cfe921c2795e8375987c/QUAST/transposed_report.tsv",
                    "sizeInBytes": 534
                },
                {
                    "id": "/0141a35dc4cfe921c2795e8375987c/QUAST/transposed_report.txt",
                    "sizeInBytes": 1051
                },
                {
                    "id": "/cc/0141a35dc4cfe921c2795e8375987c/versions.yml",
                    "sizeInBytes": 63
                },
                {
                    "id": "/f3bde70ef3b153d702923d488c467a/QUAST/basic_stats",
                    "sizeInBytes": 61148
                },
                {
                    "id": "/f3bde70ef3b153d702923d488c467a/QUAST/icarus.html",
                    "sizeInBytes": 53373
                },
                {
                    "id": "/f3bde70ef3b153d702923d488c467a/QUAST/icarus_viewers",
                    "sizeInBytes": 802216
                },
                {
                    "id": "/f3bde70ef3b153d702923d488c467a/QUAST/metaquast.log",
                    "sizeInBytes": 724
                },
                {
                    "id": "/f3bde70ef3b153d702923d488c467a/QUAST/predicted_genes",
                    "sizeInBytes": 262
                },
                {
                    "id": "/f3bde70ef3b153d702923d488c467a/QUAST/quast.log",
                    "sizeInBytes": 3572
                },
                {
                    "id": "/f3bde70ef3b153d702923d488c467a/QUAST/report.html",
                    "sizeInBytes": 382977
                },
                {
                    "id": "/f3bde70ef3b153d702923d488c467a/QUAST/report.pdf",
                    "sizeInBytes": 28437
                },
                {
                    "id": "/f3bde70ef3b153d702923d488c467a/QUAST/report.tex",
                    "sizeInBytes": 1223
                },
                {
                    "id": "/f3bde70ef3b153d702923d488c467a/QUAST/report.tsv",
                    "sizeInBytes": 528
                },
                {
                    "id": "/f3bde70ef3b153d702923d488c467a/QUAST/report.txt",
                    "sizeInBytes": 1470
                },
                {
                    "id": "/f3bde70ef3b153d702923d488c467a/QUAST/transposed_report.tex",
                    "sizeInBytes": 1056
                },
                {
                    "id": "/f3bde70ef3b153d702923d488c467a/QUAST/transposed_report.tsv",
                    "sizeInBytes": 528
                },
                {
                    "id": "/f3bde70ef3b153d702923d488c467a/QUAST/transposed_report.txt",
                    "sizeInBytes": 1053
                },
                {
                    "id": "/df/f3bde70ef3b153d702923d488c467a/versions.yml",
                    "sizeInBytes": 63
                },
                {
                    "id": "/fe/428751a5e94188b50f851df1687601/test_minigut_sample2.gff",
                    "sizeInBytes": 655029
                },
                {
                    "id": "/fe/428751a5e94188b50f851df1687601/test_minigut_sample2.fna",
                    "sizeInBytes": 738702
                },
                {
                    "id": "/fe/428751a5e94188b50f851df1687601/test_minigut_sample2.faa",
                    "sizeInBytes": 367506
                },
                {
                    "id": "/fe/428751a5e94188b50f851df1687601/test_minigut_sample2_all.txt",
                    "sizeInBytes": 1751650
                },
                {
                    "id": "/fe/428751a5e94188b50f851df1687601/versions.yml",
                    "sizeInBytes": 61
                },
                {
                    "id": "/07/87e9c4d88fd86673023dfb965e4c2c/MEGAHIT-test_minigut_sample2.contigs.fa",
                    "sizeInBytes": 681245
                },
                {
                    "id": "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.1.bt2",
                    "sizeInBytes": 4474209
                },
                {
                    "id": "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.2.bt2",
                    "sizeInBytes": 157464
                },
                {
                    "id": "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.3.bt2",
                    "sizeInBytes": 11816
                },
                {
                    "id": "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.4.bt2",
                    "sizeInBytes": 157460
                },
                {
                    "id": "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.rev.1.bt2",
                    "sizeInBytes": 4474209
                },
                {
                    "id": "/07/87e9c4d88fd86673023dfb965e4c2c/bt2_index_base.rev.2.bt2",
                    "sizeInBytes": 157464
                },
                {
                    "id": "/07/87e9c4d88fd86673023dfb965e4c2c/versions.yml",
                    "sizeInBytes": 80
                },
                {
                    "id": "/12f50d9fab75af67b6d58104068945/QUAST/basic_stats",
                    "sizeInBytes": 87922
                },
                {
                    "id": "/12f50d9fab75af67b6d58104068945/QUAST/icarus.html",
                    "sizeInBytes": 53364
                },
                {
                    "id": "/12f50d9fab75af67b6d58104068945/QUAST/icarus_viewers",
                    "sizeInBytes": 783442
                },
                {
                    "id": "/12f50d9fab75af67b6d58104068945/QUAST/metaquast.log",
                    "sizeInBytes": 698
                },
                {
                    "id": "/12f50d9fab75af67b6d58104068945/QUAST/predicted_genes",
                    "sizeInBytes": 347
                },
                {
                    "id": "/12f50d9fab75af67b6d58104068945/QUAST/quast.log",
                    "sizeInBytes": 3837
                },
                {
                    "id": "/12f50d9fab75af67b6d58104068945/QUAST/report.html",
                    "sizeInBytes": 372013
                },
                {
                    "id": "/12f50d9fab75af67b6d58104068945/QUAST/report.pdf",
                    "sizeInBytes": 31492
                },
                {
                    "id": "/12f50d9fab75af67b6d58104068945/QUAST/report.tex",
                    "sizeInBytes": 1243
                },
                {
                    "id": "/12f50d9fab75af67b6d58104068945/QUAST/report.tsv",
                    "sizeInBytes": 549
                },
                {
                    "id": "/12f50d9fab75af67b6d58104068945/QUAST/report.txt",
                    "sizeInBytes": 1263
                },
                {
                    "id": "/12f50d9fab75af67b6d58104068945/QUAST/transposed_report.tex",
                    "sizeInBytes": 1076
                },
                {
                    "id": "/12f50d9fab75af67b6d58104068945/QUAST/transposed_report.tsv",
                    "sizeInBytes": 549
                },
                {
                    "id": "/12f50d9fab75af67b6d58104068945/QUAST/transposed_report.txt",
                    "sizeInBytes": 1043
                },
                {
                    "id": "/72/12f50d9fab75af67b6d58104068945/versions.yml",
                    "sizeInBytes": 63
                },
                {
                    "id": "/ad/7acd00155343da79afb654e1f955b6/SPAdes-test_minigut_scaffolds.fasta",
                    "sizeInBytes": 1772115
                },
                {
                    "id": "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.1.bt2",
                    "sizeInBytes": 4779149
                },
                {
                    "id": "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.2.bt2",
                    "sizeInBytes": 434680
                },
                {
                    "id": "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.3.bt2",
                    "sizeInBytes": 1808
                },
                {
                    "id": "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.4.bt2",
                    "sizeInBytes": 434676
                },
                {
                    "id": "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.rev.1.bt2",
                    "sizeInBytes": 4779149
                },
                {
                    "id": "/ad/7acd00155343da79afb654e1f955b6/bt2_index_base.rev.2.bt2",
                    "sizeInBytes": 434680
                },
                {
                    "id": "/ad/7acd00155343da79afb654e1f955b6/versions.yml",
                    "sizeInBytes": 80
                },
                {
                    "id": "/e5/ae2196ddf7e7a335e47496cee0bf8d/test_minigut.gff",
                    "sizeInBytes": 404533
                },
                {
                    "id": "/e5/ae2196ddf7e7a335e47496cee0bf8d/test_minigut.fna",
                    "sizeInBytes": 1793076
                },
                {
                    "id": "/e5/ae2196ddf7e7a335e47496cee0bf8d/test_minigut.faa",
                    "sizeInBytes": 749527
                },
                {
                    "id": "/e5/ae2196ddf7e7a335e47496cee0bf8d/test_minigut_all.txt",
                    "sizeInBytes": 5199012
                },
                {
                    "id": "/e5/ae2196ddf7e7a335e47496cee0bf8d/versions.yml",
                    "sizeInBytes": 61
                },
                {
                    "id": "/0b/730a0afd8010f3ed92e6b9e60d60e7/MEGAHIT-test_minigut.contigs.fa",
                    "sizeInBytes": 1749885
                },
                {
                    "id": "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.1.bt2",
                    "sizeInBytes": 4788734
                },
                {
                    "id": "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.2.bt2",
                    "sizeInBytes": 434788
                },
                {
                    "id": "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.3.bt2",
                    "sizeInBytes": 2456
                },
                {
                    "id": "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.4.bt2",
                    "sizeInBytes": 434780
                },
                {
                    "id": "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.rev.1.bt2",
                    "sizeInBytes": 4788734
                },
                {
                    "id": "/0b/730a0afd8010f3ed92e6b9e60d60e7/bt2_index_base.rev.2.bt2",
                    "sizeInBytes": 434788
                },
                {
                    "id": "/0b/730a0afd8010f3ed92e6b9e60d60e7/versions.yml",
                    "sizeInBytes": 80
                },
                {
                    "id": "/3f/b0c9416faa2c6d3b038c04a767bbce/test_minigut.gff",
                    "sizeInBytes": 435322
                },
                {
                    "id": "/3f/b0c9416faa2c6d3b038c04a767bbce/test_minigut.fna",
                    "sizeInBytes": 1764596
                },
                {
                    "id": "/3f/b0c9416faa2c6d3b038c04a767bbce/test_minigut.faa",
                    "sizeInBytes": 720125
                },
                {
                    "id": "/3f/b0c9416faa2c6d3b038c04a767bbce/test_minigut_all.txt",
                    "sizeInBytes": 5117265
                },
                {
                    "id": "/3f/b0c9416faa2c6d3b038c04a767bbce/versions.yml",
                    "sizeInBytes": 61
                },
                {
                    "id": "/970e9d834edce57f29423a99aac816/QUAST/basic_stats",
                    "sizeInBytes": 57895
                },
                {
                    "id": "/970e9d834edce57f29423a99aac816/QUAST/icarus.html",
                    "sizeInBytes": 53365
                },
                {
                    "id": "/970e9d834edce57f29423a99aac816/QUAST/icarus_viewers",
                    "sizeInBytes": 794220
                },
                {
                    "id": "/970e9d834edce57f29423a99aac816/QUAST/metaquast.log",
                    "sizeInBytes": 692
                },
                {
                    "id": "/970e9d834edce57f29423a99aac816/QUAST/predicted_genes",
                    "sizeInBytes": 266
                },
                {
                    "id": "/970e9d834edce57f29423a99aac816/QUAST/quast.log",
                    "sizeInBytes": 3486
                },
                {
                    "id": "/970e9d834edce57f29423a99aac816/QUAST/report.html",
                    "sizeInBytes": 382475
                },
                {
                    "id": "/970e9d834edce57f29423a99aac816/QUAST/report.pdf",
                    "sizeInBytes": 28688
                },
                {
                    "id": "/970e9d834edce57f29423a99aac816/QUAST/report.tex",
                    "sizeInBytes": 1241
                },
                {
                    "id": "/970e9d834edce57f29423a99aac816/QUAST/report.tsv",
                    "sizeInBytes": 547
                },
                {
                    "id": "/970e9d834edce57f29423a99aac816/QUAST/report.txt",
                    "sizeInBytes": 1286
                },
                {
                    "id": "/970e9d834edce57f29423a99aac816/QUAST/transposed_report.tex",
                    "sizeInBytes": 1074
                },
                {
                    "id": "/970e9d834edce57f29423a99aac816/QUAST/transposed_report.tsv",
                    "sizeInBytes": 547
                },
                {
                    "id": "/970e9d834edce57f29423a99aac816/QUAST/transposed_report.txt",
                    "sizeInBytes": 1043
                },
                {
                    "id": "/b7/970e9d834edce57f29423a99aac816/versions.yml",
                    "sizeInBytes": 63
                },
                {
                    "id": "/e5/0b51f7ab520a9b0717d009ec567a92/SPAdes-test_minigut_sample2_scaffolds.fasta",
                    "sizeInBytes": 2133044
                },
                {
                    "id": "/e5/0b51f7ab520a9b0717d009ec567a92/SPAdes-test_minigut_sample2-test_minigut.bam",
                    "sizeInBytes": 7011332
                },
                {
                    "id": "/e5/0b51f7ab520a9b0717d009ec567a92/SPAdes-test_minigut_sample2-test_minigut.bam.bai",
                    "sizeInBytes": 42120
                },
                {
                    "id": "/e5/0b51f7ab520a9b0717d009ec567a92/SPAdes-test_minigut_sample2-test_minigut.bowtie2.log",
                    "sizeInBytes": 590
                },
                {
                    "id": "/e5/0b51f7ab520a9b0717d009ec567a92/versions.yml",
                    "sizeInBytes": 116
                },
                {
                    "id": "/0e/af902dd643f65055d1d1a4cdc03eec/SPAdes-test_minigut_sample2_scaffolds.fasta",
                    "sizeInBytes": 2133044
                },
                {
                    "id": "/0e/af902dd643f65055d1d1a4cdc03eec/SPAdes-test_minigut_sample2-test_minigut_sample2.bam",
                    "sizeInBytes": 3820454
                },
                {
                    "id": "/0e/af902dd643f65055d1d1a4cdc03eec/SPAdes-test_minigut_sample2-test_minigut_sample2.bam.bai",
                    "sizeInBytes": 416808
                },
                {
                    "id": "/0e/af902dd643f65055d1d1a4cdc03eec/SPAdes-test_minigut_sample2.bowtie2.log",
                    "sizeInBytes": 600
                },
                {
                    "id": "/0e/af902dd643f65055d1d1a4cdc03eec/versions.yml",
                    "sizeInBytes": 116
                },
                {
                    "id": "/d3/c332ef8efac5a782924ca4114ed8cd/MEGAHIT-test_minigut_sample2.contigs.fa",
                    "sizeInBytes": 681245
                },
                {
                    "id": "/d3/c332ef8efac5a782924ca4114ed8cd/MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam",
                    "sizeInBytes": 3608114
                },
                {
                    "id": "/d3/c332ef8efac5a782924ca4114ed8cd/MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam.bai",
                    "sizeInBytes": 104976
                },
                {
                    "id": "/d3/c332ef8efac5a782924ca4114ed8cd/MEGAHIT-test_minigut_sample2.bowtie2.log",
                    "sizeInBytes": 599
                },
                {
                    "id": "/d3/c332ef8efac5a782924ca4114ed8cd/versions.yml",
                    "sizeInBytes": 116
                },
                {
                    "id": "/ad/e50bbcab2d4de0a030682118b95da7/MEGAHIT-test_minigut_sample2.contigs.fa",
                    "sizeInBytes": 681245
                },
                {
                    "id": "/ad/e50bbcab2d4de0a030682118b95da7/MEGAHIT-test_minigut_sample2-test_minigut.bam",
                    "sizeInBytes": 6956328
                },
                {
                    "id": "/ad/e50bbcab2d4de0a030682118b95da7/MEGAHIT-test_minigut_sample2-test_minigut.bam.bai",
                    "sizeInBytes": 10584
                },
                {
                    "id": "/ad/e50bbcab2d4de0a030682118b95da7/MEGAHIT-test_minigut_sample2-test_minigut.bowtie2.log",
                    "sizeInBytes": 590
                },
                {
                    "id": "/ad/e50bbcab2d4de0a030682118b95da7/versions.yml",
                    "sizeInBytes": 116
                },
                {
                    "id": "/b3/84346a33369d5dc4712e03db3b5e82/SPAdes-test_minigut_scaffolds.fasta",
                    "sizeInBytes": 1772115
                },
                {
                    "id": "/b3/84346a33369d5dc4712e03db3b5e82/SPAdes-test_minigut-test_minigut_sample2.bam",
                    "sizeInBytes": 3547190
                },
                {
                    "id": "/b3/84346a33369d5dc4712e03db3b5e82/SPAdes-test_minigut-test_minigut_sample2.bam.bai",
                    "sizeInBytes": 3648
                },
                {
                    "id": "/b3/84346a33369d5dc4712e03db3b5e82/SPAdes-test_minigut-test_minigut_sample2.bowtie2.log",
                    "sizeInBytes": 590
                },
                {
                    "id": "/b3/84346a33369d5dc4712e03db3b5e82/versions.yml",
                    "sizeInBytes": 116
                },
                {
                    "id": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/SPAdes-test_minigut_scaffolds.fasta",
                    "sizeInBytes": 1772115
                },
                {
                    "id": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/SPAdes-test_minigut-test_minigut.bam",
                    "sizeInBytes": 6021434
                },
                {
                    "id": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/SPAdes-test_minigut-test_minigut.bam.bai",
                    "sizeInBytes": 7576
                },
                {
                    "id": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/SPAdes-test_minigut.bowtie2.log",
                    "sizeInBytes": 599
                },
                {
                    "id": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/versions.yml",
                    "sizeInBytes": 116
                },
                {
                    "id": "/01/6d18a168dd7f411df28f1132ebbd09/MEGAHIT-test_minigut.contigs.fa",
                    "sizeInBytes": 1749885
                },
                {
                    "id": "/01/6d18a168dd7f411df28f1132ebbd09/MEGAHIT-test_minigut-test_minigut_sample2.bam",
                    "sizeInBytes": 3548578
                },
                {
                    "id": "/01/6d18a168dd7f411df28f1132ebbd09/MEGAHIT-test_minigut-test_minigut_sample2.bam.bai",
                    "sizeInBytes": 7816
                },
                {
                    "id": "/01/6d18a168dd7f411df28f1132ebbd09/MEGAHIT-test_minigut-test_minigut_sample2.bowtie2.log",
                    "sizeInBytes": 590
                },
                {
                    "id": "/01/6d18a168dd7f411df28f1132ebbd09/versions.yml",
                    "sizeInBytes": 116
                },
                {
                    "id": "/34/adfd77975be3d0c5eaa06394c1187e/MEGAHIT-test_minigut.contigs.fa",
                    "sizeInBytes": 1749885
                },
                {
                    "id": "/34/adfd77975be3d0c5eaa06394c1187e/MEGAHIT-test_minigut-test_minigut.bam",
                    "sizeInBytes": 6011051
                },
                {
                    "id": "/34/adfd77975be3d0c5eaa06394c1187e/MEGAHIT-test_minigut-test_minigut.bam.bai",
                    "sizeInBytes": 22752
                },
                {
                    "id": "/34/adfd77975be3d0c5eaa06394c1187e/MEGAHIT-test_minigut.bowtie2.log",
                    "sizeInBytes": 600
                },
                {
                    "id": "/34/adfd77975be3d0c5eaa06394c1187e/versions.yml",
                    "sizeInBytes": 116
                },
                {
                    "id": "/f6/6a47e0524654d82be0e49d00c99f57/MEGAHIT-test_minigut-depth.txt.gz",
                    "sizeInBytes": 5294
                },
                {
                    "id": "/f6/6a47e0524654d82be0e49d00c99f57/versions.yml",
                    "sizeInBytes": 82
                },
                {
                    "id": "/2e/a229c3916a098bd7377027fedb4d42/MEGAHIT-test_minigut_sample2-depth.txt.gz",
                    "sizeInBytes": 18819
                },
                {
                    "id": "/2e/a229c3916a098bd7377027fedb4d42/versions.yml",
                    "sizeInBytes": 82
                },
                {
                    "id": "/4d/44326243720ca4a7cc916be905b3c4/SPAdes-test_minigut-depth.txt.gz",
                    "sizeInBytes": 2127
                },
                {
                    "id": "/4d/44326243720ca4a7cc916be905b3c4/versions.yml",
                    "sizeInBytes": 82
                },
                {
                    "id": "/79/03b1ed263b1ee1ec46fe396818f239/SPAdes-test_minigut_sample2-depth.txt.gz",
                    "sizeInBytes": 71343
                },
                {
                    "id": "/79/03b1ed263b1ee1ec46fe396818f239/versions.yml",
                    "sizeInBytes": 82
                },
                {
                    "id": "/5d/993375e765ff00387f46f25c0cf79a/MEGAHIT-test_minigut.contigs.fa",
                    "sizeInBytes": 1749885
                },
                {
                    "id": "/5d/993375e765ff00387f46f25c0cf79a/test_minigut_mb2_depth.txt",
                    "sizeInBytes": 4486
                },
                {
                    "id": "/5d/993375e765ff00387f46f25c0cf79a/versions.yml",
                    "sizeInBytes": 62
                },
                {
                    "id": "/f7/386b0dd3ad61e1c24197838c86dc85/MEGAHIT-MetaBAT2-test_minigut.tooShort.fa.gz",
                    "sizeInBytes": 9976
                },
                {
                    "id": "/f7/386b0dd3ad61e1c24197838c86dc85/MEGAHIT-MetaBAT2-test_minigut.lowDepth.fa.gz",
                    "sizeInBytes": 28
                },
                {
                    "id": "/f7/386b0dd3ad61e1c24197838c86dc85/MEGAHIT-MetaBAT2-test_minigut.unbinned.fa.gz",
                    "sizeInBytes": 53910
                },
                {
                    "id": "/f7/386b0dd3ad61e1c24197838c86dc85/MEGAHIT-MetaBAT2-test_minigut.tsv.gz",
                    "sizeInBytes": 542
                },
                {
                    "id": "/386b0dd3ad61e1c24197838c86dc85/bins/MEGAHIT-MetaBAT2-test_minigut.1.fa.gz",
                    "sizeInBytes": 257814
                },
                {
                    "id": "/386b0dd3ad61e1c24197838c86dc85/bins/MEGAHIT-MetaBAT2-test_minigut.2.fa.gz",
                    "sizeInBytes": 230503
                },
                {
                    "id": "/f7/386b0dd3ad61e1c24197838c86dc85/versions.yml",
                    "sizeInBytes": 63
                },
                {
                    "id": "/d5/f40841a76271322e688e636a9f56be/MEGAHIT-test_minigut_sample2.contigs.fa",
                    "sizeInBytes": 681245
                },
                {
                    "id": "/d5/f40841a76271322e688e636a9f56be/test_minigut_sample2_mb2_depth.txt",
                    "sizeInBytes": 22295
                },
                {
                    "id": "/d5/f40841a76271322e688e636a9f56be/versions.yml",
                    "sizeInBytes": 62
                },
                {
                    "id": "/68/07f3ae0f9899f845f569a1c6edf87d/MEGAHIT-MetaBAT2-test_minigut_sample2.tooShort.fa.gz",
                    "sizeInBytes": 188338
                },
                {
                    "id": "/68/07f3ae0f9899f845f569a1c6edf87d/MEGAHIT-MetaBAT2-test_minigut_sample2.lowDepth.fa.gz",
                    "sizeInBytes": 28
                },
                {
                    "id": "/68/07f3ae0f9899f845f569a1c6edf87d/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.fa.gz",
                    "sizeInBytes": 17296
                },
                {
                    "id": "/68/07f3ae0f9899f845f569a1c6edf87d/MEGAHIT-MetaBAT2-test_minigut_sample2.tsv.gz",
                    "sizeInBytes": 130
                },
                {
                    "id": "/68/07f3ae0f9899f845f569a1c6edf87d/versions.yml",
                    "sizeInBytes": 63
                },
                {
                    "id": "/ae/89e6186b281453f220f2dac613fb60/SPAdes-test_minigut_scaffolds.fasta",
                    "sizeInBytes": 1772115
                },
                {
                    "id": "/ae/89e6186b281453f220f2dac613fb60/test_minigut_mb2_depth.txt",
                    "sizeInBytes": 2951
                },
                {
                    "id": "/ae/89e6186b281453f220f2dac613fb60/versions.yml",
                    "sizeInBytes": 62
                },
                {
                    "id": "/2a/77fb54be4836e684dc38834c52daa3/SPAdes-MetaBAT2-test_minigut.tooShort.fa.gz",
                    "sizeInBytes": 3588
                },
                {
                    "id": "/2a/77fb54be4836e684dc38834c52daa3/SPAdes-MetaBAT2-test_minigut.lowDepth.fa.gz",
                    "sizeInBytes": 28
                },
                {
                    "id": "/2a/77fb54be4836e684dc38834c52daa3/SPAdes-MetaBAT2-test_minigut.unbinned.fa.gz",
                    "sizeInBytes": 48366
                },
                {
                    "id": "/2a/77fb54be4836e684dc38834c52daa3/SPAdes-MetaBAT2-test_minigut.tsv.gz",
                    "sizeInBytes": 460
                },
                {
                    "id": "/77fb54be4836e684dc38834c52daa3/bins/SPAdes-MetaBAT2-test_minigut.1.fa.gz",
                    "sizeInBytes": 233589
                },
                {
                    "id": "/77fb54be4836e684dc38834c52daa3/bins/SPAdes-MetaBAT2-test_minigut.2.fa.gz",
                    "sizeInBytes": 267493
                },
                {
                    "id": "/2a/77fb54be4836e684dc38834c52daa3/versions.yml",
                    "sizeInBytes": 63
                },
                {
                    "id": "/3e/a086d77b79c2823ca55898ab257d54/SPAdes-test_minigut_sample2_scaffolds.fasta",
                    "sizeInBytes": 2133044
                },
                {
                    "id": "/3e/a086d77b79c2823ca55898ab257d54/test_minigut_sample2_mb2_depth.txt",
                    "sizeInBytes": 212466
                },
                {
                    "id": "/3e/a086d77b79c2823ca55898ab257d54/versions.yml",
                    "sizeInBytes": 62
                },
                {
                    "id": "/b9/bf3c2ffa52aa3f58e4f64637bde899/SPAdes-MetaBAT2-test_minigut_sample2.tooShort.fa.gz",
                    "sizeInBytes": 574568
                },
                {
                    "id": "/b9/bf3c2ffa52aa3f58e4f64637bde899/SPAdes-MetaBAT2-test_minigut_sample2.lowDepth.fa.gz",
                    "sizeInBytes": 28
                },
                {
                    "id": "/b9/bf3c2ffa52aa3f58e4f64637bde899/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.fa.gz",
                    "sizeInBytes": 87108
                },
                {
                    "id": "/b9/bf3c2ffa52aa3f58e4f64637bde899/SPAdes-MetaBAT2-test_minigut_sample2.tsv.gz",
                    "sizeInBytes": 1757
                },
                {
                    "id": "/b9/bf3c2ffa52aa3f58e4f64637bde899/versions.yml",
                    "sizeInBytes": 63
                },
                {
                    "id": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/MEGAHIT-MaxBin2-test_minigut.001.fasta.gz",
                    "sizeInBytes": 275379
                },
                {
                    "id": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/MEGAHIT-MaxBin2-test_minigut.002.fasta.gz",
                    "sizeInBytes": 239713
                },
                {
                    "id": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/MEGAHIT-MaxBin2-test_minigut.summary",
                    "sizeInBytes": 179
                },
                {
                    "id": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/MEGAHIT-MaxBin2-test_minigut.log.gz",
                    "sizeInBytes": 786
                },
                {
                    "id": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/MEGAHIT-MaxBin2-test_minigut.marker.gz",
                    "sizeInBytes": 447
                },
                {
                    "id": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/MEGAHIT-MaxBin2-test_minigut.noclass.gz",
                    "sizeInBytes": 20
                },
                {
                    "id": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/MEGAHIT-MaxBin2-test_minigut.tooshort.gz",
                    "sizeInBytes": 10311
                },
                {
                    "id": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/MEGAHIT-MaxBin2-test_minigut.marker_of_each_bin.tar.gz",
                    "sizeInBytes": 7336
                },
                {
                    "id": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/versions.yml",
                    "sizeInBytes": 53
                },
                {
                    "id": "/d1/af5b3f93228497d9441a56a2846bdd/MEGAHIT-MetaBAT2-test_minigut.2.fa",
                    "sizeInBytes": 739909
                },
                {
                    "id": "/d1/af5b3f93228497d9441a56a2846bdd/versions.yml",
                    "sizeInBytes": 55
                },
                {
                    "id": "/61/cf25917be22c0d7cc036bbb291ff61/MEGAHIT-MetaBAT2-test_minigut.1.fa",
                    "sizeInBytes": 826502
                },
                {
                    "id": "/61/cf25917be22c0d7cc036bbb291ff61/versions.yml",
                    "sizeInBytes": 55
                },
                {
                    "id": "/9f/2be4bfc6b728578afcd33f072dd30f/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.gz",
                    "sizeInBytes": 8772
                },
                {
                    "id": "/9f/2be4bfc6b728578afcd33f072dd30f/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.gz",
                    "sizeInBytes": 5866
                },
                {
                    "id": "/9f/2be4bfc6b728578afcd33f072dd30f/MEGAHIT-MetaBAT2-test_minigut.unbinned.pooled.fa.gz",
                    "sizeInBytes": 38661
                },
                {
                    "id": "/9f/2be4bfc6b728578afcd33f072dd30f/MEGAHIT-MetaBAT2-test_minigut.unbinned.remaining.fa.gz",
                    "sizeInBytes": 20
                },
                {
                    "id": "/9f/2be4bfc6b728578afcd33f072dd30f/versions.yml",
                    "sizeInBytes": 95
                },
                {
                    "id": "/ab/a491d97cfd32cab33ae565081f410e/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz",
                    "sizeInBytes": 2248
                },
                {
                    "id": "/ab/a491d97cfd32cab33ae565081f410e/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz",
                    "sizeInBytes": 1187
                },
                {
                    "id": "/ab/a491d97cfd32cab33ae565081f410e/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.pooled.fa.gz",
                    "sizeInBytes": 14354
                },
                {
                    "id": "/ab/a491d97cfd32cab33ae565081f410e/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.remaining.fa.gz",
                    "sizeInBytes": 20
                },
                {
                    "id": "/ab/a491d97cfd32cab33ae565081f410e/versions.yml",
                    "sizeInBytes": 95
                },
                {
                    "id": "/eb/f824a718600d27c276a4b0299ae33d/SPAdes-MaxBin2-test_minigut.001.fasta.gz",
                    "sizeInBytes": 266445
                },
                {
                    "id": "/eb/f824a718600d27c276a4b0299ae33d/SPAdes-MaxBin2-test_minigut.002.fasta.gz",
                    "sizeInBytes": 255741
                },
                {
                    "id": "/eb/f824a718600d27c276a4b0299ae33d/SPAdes-MaxBin2-test_minigut.summary",
                    "sizeInBytes": 177
                },
                {
                    "id": "/eb/f824a718600d27c276a4b0299ae33d/SPAdes-MaxBin2-test_minigut.log.gz",
                    "sizeInBytes": 819
                },
                {
                    "id": "/eb/f824a718600d27c276a4b0299ae33d/SPAdes-MaxBin2-test_minigut.marker.gz",
                    "sizeInBytes": 439
                },
                {
                    "id": "/eb/f824a718600d27c276a4b0299ae33d/SPAdes-MaxBin2-test_minigut.noclass.gz",
                    "sizeInBytes": 20
                },
                {
                    "id": "/eb/f824a718600d27c276a4b0299ae33d/SPAdes-MaxBin2-test_minigut.tooshort.gz",
                    "sizeInBytes": 3525
                },
                {
                    "id": "/eb/f824a718600d27c276a4b0299ae33d/SPAdes-MaxBin2-test_minigut.marker_of_each_bin.tar.gz",
                    "sizeInBytes": 7585
                },
                {
                    "id": "/eb/f824a718600d27c276a4b0299ae33d/versions.yml",
                    "sizeInBytes": 53
                },
                {
                    "id": "/5f/2851abe02c0e2835f9e3b09a0b1d62/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.gz",
                    "sizeInBytes": 26430
                },
                {
                    "id": "/5f/2851abe02c0e2835f9e3b09a0b1d62/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.gz",
                    "sizeInBytes": 14921
                },
                {
                    "id": "/5f/2851abe02c0e2835f9e3b09a0b1d62/SPAdes-MetaBAT2-test_minigut.unbinned.pooled.fa.gz",
                    "sizeInBytes": 6824
                },
                {
                    "id": "/5f/2851abe02c0e2835f9e3b09a0b1d62/SPAdes-MetaBAT2-test_minigut.unbinned.remaining.fa.gz",
                    "sizeInBytes": 20
                },
                {
                    "id": "/5f/2851abe02c0e2835f9e3b09a0b1d62/versions.yml",
                    "sizeInBytes": 95
                },
                {
                    "id": "/99/9391bef265fc20cdc627372089b79b/SPAdes-MetaBAT2-test_minigut.1.fa",
                    "sizeInBytes": 749812
                },
                {
                    "id": "/99/9391bef265fc20cdc627372089b79b/versions.yml",
                    "sizeInBytes": 55
                },
                {
                    "id": "/2c/dc9657212417f3f1714124a02c7b37/SPAdes-MetaBAT2-test_minigut.2.fa",
                    "sizeInBytes": 857355
                },
                {
                    "id": "/2c/dc9657212417f3f1714124a02c7b37/versions.yml",
                    "sizeInBytes": 55
                },
                {
                    "id": "/0d/8e50cc38e226855a80b119d709ff8c/SPAdes-MaxBin2-test_minigut_sample2.001.fasta.gz",
                    "sizeInBytes": 53267
                },
                {
                    "id": "/0d/8e50cc38e226855a80b119d709ff8c/SPAdes-MaxBin2-test_minigut_sample2.summary",
                    "sizeInBytes": 123
                },
                {
                    "id": "/0d/8e50cc38e226855a80b119d709ff8c/SPAdes-MaxBin2-test_minigut_sample2.log.gz",
                    "sizeInBytes": 871
                },
                {
                    "id": "/0d/8e50cc38e226855a80b119d709ff8c/SPAdes-MaxBin2-test_minigut_sample2.marker.gz",
                    "sizeInBytes": 406
                },
                {
                    "id": "/0d/8e50cc38e226855a80b119d709ff8c/SPAdes-MaxBin2-test_minigut_sample2.noclass.gz",
                    "sizeInBytes": 29904
                },
                {
                    "id": "/0d/8e50cc38e226855a80b119d709ff8c/SPAdes-MaxBin2-test_minigut_sample2.tooshort.gz",
                    "sizeInBytes": 545159
                },
                {
                    "id": "/0d/8e50cc38e226855a80b119d709ff8c/SPAdes-MaxBin2-test_minigut_sample2.marker_of_each_bin.tar.gz",
                    "sizeInBytes": 349
                },
                {
                    "id": "/0d/8e50cc38e226855a80b119d709ff8c/versions.yml",
                    "sizeInBytes": 53
                },
                {
                    "id": "/be/a6b6583600ddf490d44a92dfcee45c/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz",
                    "sizeInBytes": 2620
                },
                {
                    "id": "/be/a6b6583600ddf490d44a92dfcee45c/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz",
                    "sizeInBytes": 2280
                },
                {
                    "id": "/be/a6b6583600ddf490d44a92dfcee45c/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.pooled.fa.gz",
                    "sizeInBytes": 79034
                },
                {
                    "id": "/be/a6b6583600ddf490d44a92dfcee45c/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.remaining.fa.gz",
                    "sizeInBytes": 20
                },
                {
                    "id": "/be/a6b6583600ddf490d44a92dfcee45c/versions.yml",
                    "sizeInBytes": 95
                },
                {
                    "id": "/f5/1fd9cc6adda86286aa0f375123cfc8/MEGAHIT-MaxBin2-test_minigut.001.fa.gz",
                    "sizeInBytes": 275379
                },
                {
                    "id": "/f5/1fd9cc6adda86286aa0f375123cfc8/MEGAHIT-MaxBin2-test_minigut.002.fa.gz",
                    "sizeInBytes": 239713
                },
                {
                    "id": "/cf/6ae0e3afea0a1ec59857e2bc7f3f91/MEGAHIT-MaxBin2-test_minigut.noclass.pooled.fa.gz",
                    "sizeInBytes": 20
                },
                {
                    "id": "/cf/6ae0e3afea0a1ec59857e2bc7f3f91/MEGAHIT-MaxBin2-test_minigut.noclass.remaining.fa.gz",
                    "sizeInBytes": 20
                },
                {
                    "id": "/cf/6ae0e3afea0a1ec59857e2bc7f3f91/versions.yml",
                    "sizeInBytes": 95
                },
                {
                    "id": "/0f/da507fa0645b75fe52bef79d0cff50/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa",
                    "sizeInBytes": 27640
                },
                {
                    "id": "/0f/da507fa0645b75fe52bef79d0cff50/versions.yml",
                    "sizeInBytes": 57
                },
                {
                    "id": "/0c/e5297ab42995f985f9f5e10d0aa650/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa",
                    "sizeInBytes": 18168
                },
                {
                    "id": "/0c/e5297ab42995f985f9f5e10d0aa650/versions.yml",
                    "sizeInBytes": 57
                },
                {
                    "id": "/cd/882f370ae493dd9c8daef9d110ff5c/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                    "sizeInBytes": 6590
                },
                {
                    "id": "/cd/882f370ae493dd9c8daef9d110ff5c/versions.yml",
                    "sizeInBytes": 57
                },
                {
                    "id": "/25/fad435a8679b7b2d6e7a0c0376b8f8/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                    "sizeInBytes": 3340
                },
                {
                    "id": "/25/fad435a8679b7b2d6e7a0c0376b8f8/versions.yml",
                    "sizeInBytes": 57
                },
                {
                    "id": "/22/a064f806a885f085a1dcd7975b6a67/SPAdes-MaxBin2-test_minigut.001.fa.gz",
                    "sizeInBytes": 266445
                },
                {
                    "id": "/22/a064f806a885f085a1dcd7975b6a67/SPAdes-MaxBin2-test_minigut.002.fa.gz",
                    "sizeInBytes": 255741
                },
                {
                    "id": "/a9/5a9418ee5a7690f314418f66882d81/SPAdes-MaxBin2-test_minigut.noclass.pooled.fa.gz",
                    "sizeInBytes": 20
                },
                {
                    "id": "/a9/5a9418ee5a7690f314418f66882d81/SPAdes-MaxBin2-test_minigut.noclass.remaining.fa.gz",
                    "sizeInBytes": 20
                },
                {
                    "id": "/a9/5a9418ee5a7690f314418f66882d81/versions.yml",
                    "sizeInBytes": 95
                },
                {
                    "id": "/db/0958d1883331c1086429c2cb33e79c/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa",
                    "sizeInBytes": 47363
                },
                {
                    "id": "/db/0958d1883331c1086429c2cb33e79c/versions.yml",
                    "sizeInBytes": 57
                },
                {
                    "id": "/1f/e0a17ccc19b5d348df7702e0ffceea/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa",
                    "sizeInBytes": 86173
                },
                {
                    "id": "/1f/e0a17ccc19b5d348df7702e0ffceea/versions.yml",
                    "sizeInBytes": 57
                },
                {
                    "id": "/63/d3de4efa2361a3e58ff7c94485c9b2/SPAdes-MaxBin2-test_minigut_sample2.001.fa.gz",
                    "sizeInBytes": 53267
                },
                {
                    "id": "/07/d79186f73346bf557b0b330d22aec1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.gz",
                    "sizeInBytes": 1035
                },
                {
                    "id": "/07/d79186f73346bf557b0b330d22aec1/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.gz",
                    "sizeInBytes": 945
                },
                {
                    "id": "/07/d79186f73346bf557b0b330d22aec1/SPAdes-MaxBin2-test_minigut_sample2.noclass.pooled.fa.gz",
                    "sizeInBytes": 28679
                },
                {
                    "id": "/07/d79186f73346bf557b0b330d22aec1/SPAdes-MaxBin2-test_minigut_sample2.noclass.remaining.fa.gz",
                    "sizeInBytes": 20
                },
                {
                    "id": "/07/d79186f73346bf557b0b330d22aec1/versions.yml",
                    "sizeInBytes": 95
                },
                {
                    "id": "/b0/c4c13fb5a30180e93f30b443ab1807/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                    "sizeInBytes": 6614
                },
                {
                    "id": "/b0/c4c13fb5a30180e93f30b443ab1807/versions.yml",
                    "sizeInBytes": 57
                },
                {
                    "id": "/df/ee8e1e889cebae9a0e25195f80675f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                    "sizeInBytes": 7810
                },
                {
                    "id": "/df/ee8e1e889cebae9a0e25195f80675f/versions.yml",
                    "sizeInBytes": 57
                },
                {
                    "id": "/8d/60203145275a433cc075347c0757f7/MEGAHIT-MaxBin2-test_minigut.002.fa",
                    "sizeInBytes": 808208
                },
                {
                    "id": "/8d/60203145275a433cc075347c0757f7/versions.yml",
                    "sizeInBytes": 55
                },
                {
                    "id": "/33/d4976d8a94c2e0b2376a0ae32d2791/MEGAHIT-MaxBin2-test_minigut.001.fa",
                    "sizeInBytes": 926530
                },
                {
                    "id": "/33/d4976d8a94c2e0b2376a0ae32d2791/versions.yml",
                    "sizeInBytes": 55
                },
                {
                    "id": "/28/2a3d3dcb177d556ecf9d9f6ccff251/SPAdes-MaxBin2-test_minigut.002.fa",
                    "sizeInBytes": 860225
                },
                {
                    "id": "/28/2a3d3dcb177d556ecf9d9f6ccff251/versions.yml",
                    "sizeInBytes": 55
                },
                {
                    "id": "/e3/858abab7295808ce6e653d7e95d1c9/SPAdes-MaxBin2-test_minigut.001.fa",
                    "sizeInBytes": 896979
                },
                {
                    "id": "/e3/858abab7295808ce6e653d7e95d1c9/versions.yml",
                    "sizeInBytes": 55
                },
                {
                    "id": "/2c/3e4c6ddb49c5797adf2ca908ee03f0/SPAdes-MaxBin2-test_minigut_sample2.001.fa",
                    "sizeInBytes": 182135
                },
                {
                    "id": "/2c/3e4c6ddb49c5797adf2ca908ee03f0/versions.yml",
                    "sizeInBytes": 55
                },
                {
                    "id": "/05/688f483a380c53145735b0ec10e7e1/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa",
                    "sizeInBytes": 2558
                },
                {
                    "id": "/05/688f483a380c53145735b0ec10e7e1/versions.yml",
                    "sizeInBytes": 57
                },
                {
                    "id": "/25/b26b7734ef45adbb9ce3eccfd31840/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa",
                    "sizeInBytes": 2806
                },
                {
                    "id": "/25/b26b7734ef45adbb9ce3eccfd31840/versions.yml",
                    "sizeInBytes": 57
                },
                {
                    "id": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.gff",
                    "sizeInBytes": 998266
                },
                {
                    "id": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.gbk",
                    "sizeInBytes": 1726989
                },
                {
                    "id": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.fna",
                    "sizeInBytes": 810102
                },
                {
                    "id": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.faa",
                    "sizeInBytes": 248164
                },
                {
                    "id": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.ffn",
                    "sizeInBytes": 680120
                },
                {
                    "id": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.sqn",
                    "sizeInBytes": 2834498
                },
                {
                    "id": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.fsa",
                    "sizeInBytes": 818110
                },
                {
                    "id": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.tbl",
                    "sizeInBytes": 162352
                },
                {
                    "id": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.err",
                    "sizeInBytes": 416270
                },
                {
                    "id": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.log",
                    "sizeInBytes": 17311
                },
                {
                    "id": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.txt",
                    "sizeInBytes": 84
                },
                {
                    "id": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/MEGAHIT-MaxBin2-test_minigut.002.tsv",
                    "sizeInBytes": 52260
                },
                {
                    "id": "/39/acaf974185413de7f7e75d08eed62d/versions.yml",
                    "sizeInBytes": 44
                },
                {
                    "id": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.gff",
                    "sizeInBytes": 960885
                },
                {
                    "id": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.gbk",
                    "sizeInBytes": 1629090
                },
                {
                    "id": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.fna",
                    "sizeInBytes": 826502
                },
                {
                    "id": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.faa",
                    "sizeInBytes": 264406
                },
                {
                    "id": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.ffn",
                    "sizeInBytes": 740832
                },
                {
                    "id": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.sqn",
                    "sizeInBytes": 2409785
                },
                {
                    "id": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.fsa",
                    "sizeInBytes": 828894
                },
                {
                    "id": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.tbl",
                    "sizeInBytes": 110991
                },
                {
                    "id": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.err",
                    "sizeInBytes": 286528
                },
                {
                    "id": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.log",
                    "sizeInBytes": 13794
                },
                {
                    "id": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.txt",
                    "sizeInBytes": 75
                },
                {
                    "id": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/MEGAHIT-MetaBAT2-test_minigut.1.tsv",
                    "sizeInBytes": 37909
                },
                {
                    "id": "/7b/9602d60bfda3d0afbe2182f5e9e212/versions.yml",
                    "sizeInBytes": 44
                },
                {
                    "id": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.gff",
                    "sizeInBytes": 889057
                },
                {
                    "id": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.gbk",
                    "sizeInBytes": 1477344
                },
                {
                    "id": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.fna",
                    "sizeInBytes": 749812
                },
                {
                    "id": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.faa",
                    "sizeInBytes": 249410
                },
                {
                    "id": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.ffn",
                    "sizeInBytes": 700441
                },
                {
                    "id": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.sqn",
                    "sizeInBytes": 1850529
                },
                {
                    "id": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.fsa",
                    "sizeInBytes": 749916
                },
                {
                    "id": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.tbl",
                    "sizeInBytes": 103167
                },
                {
                    "id": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.err",
                    "sizeInBytes": 280154
                },
                {
                    "id": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.log",
                    "sizeInBytes": 14144
                },
                {
                    "id": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.txt",
                    "sizeInBytes": 74
                },
                {
                    "id": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/SPAdes-MetaBAT2-test_minigut.1.tsv",
                    "sizeInBytes": 34808
                },
                {
                    "id": "/e5/cb263e07e01a650cebaafa50f33960/versions.yml",
                    "sizeInBytes": 44
                },
                {
                    "id": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.gff",
                    "sizeInBytes": 1088578
                },
                {
                    "id": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.gbk",
                    "sizeInBytes": 1826255
                },
                {
                    "id": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.fna",
                    "sizeInBytes": 862237
                },
                {
                    "id": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.faa",
                    "sizeInBytes": 285377
                },
                {
                    "id": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.ffn",
                    "sizeInBytes": 784517
                },
                {
                    "id": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.sqn",
                    "sizeInBytes": 2633643
                },
                {
                    "id": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.fsa",
                    "sizeInBytes": 863797
                },
                {
                    "id": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.tbl",
                    "sizeInBytes": 179718
                },
                {
                    "id": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.err",
                    "sizeInBytes": 426276
                },
                {
                    "id": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.log",
                    "sizeInBytes": 24276
                },
                {
                    "id": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.txt",
                    "sizeInBytes": 84
                },
                {
                    "id": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/SPAdes-MaxBin2-test_minigut.002.tsv",
                    "sizeInBytes": 57920
                },
                {
                    "id": "/b4/8e9e371269fdf3f497b71fdd02028d/versions.yml",
                    "sizeInBytes": 44
                },
                {
                    "id": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.gff",
                    "sizeInBytes": 1083860
                },
                {
                    "id": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.gbk",
                    "sizeInBytes": 1838771
                },
                {
                    "id": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.fna",
                    "sizeInBytes": 928708
                },
                {
                    "id": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.faa",
                    "sizeInBytes": 293458
                },
                {
                    "id": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.ffn",
                    "sizeInBytes": 820126
                },
                {
                    "id": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.sqn",
                    "sizeInBytes": 2769096
                },
                {
                    "id": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.fsa",
                    "sizeInBytes": 932088
                },
                {
                    "id": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.tbl",
                    "sizeInBytes": 127550
                },
                {
                    "id": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.err",
                    "sizeInBytes": 346433
                },
                {
                    "id": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.log",
                    "sizeInBytes": 15352
                },
                {
                    "id": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.txt",
                    "sizeInBytes": 76
                },
                {
                    "id": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/MEGAHIT-MaxBin2-test_minigut.001.tsv",
                    "sizeInBytes": 43502
                },
                {
                    "id": "/0a/302bc3450d1a96f8dd87e6ed64fa04/versions.yml",
                    "sizeInBytes": 44
                },
                {
                    "id": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.gff",
                    "sizeInBytes": 228354
                },
                {
                    "id": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.gbk",
                    "sizeInBytes": 407910
                },
                {
                    "id": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.fna",
                    "sizeInBytes": 182552
                },
                {
                    "id": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.faa",
                    "sizeInBytes": 34858
                },
                {
                    "id": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.ffn",
                    "sizeInBytes": 95226
                },
                {
                    "id": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.sqn",
                    "sizeInBytes": 713561
                },
                {
                    "id": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.fsa",
                    "sizeInBytes": 188376
                },
                {
                    "id": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.tbl",
                    "sizeInBytes": 33381
                },
                {
                    "id": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.err",
                    "sizeInBytes": 233663
                },
                {
                    "id": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.log",
                    "sizeInBytes": 13140
                },
                {
                    "id": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.txt",
                    "sizeInBytes": 84
                },
                {
                    "id": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/SPAdes-MaxBin2-test_minigut_sample2.001.tsv",
                    "sizeInBytes": 10226
                },
                {
                    "id": "/06/744dd3843deedbcf17b47531d248e4/versions.yml",
                    "sizeInBytes": 44
                },
                {
                    "id": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.gff",
                    "sizeInBytes": 1068894
                },
                {
                    "id": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.gbk",
                    "sizeInBytes": 1778490
                },
                {
                    "id": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.fna",
                    "sizeInBytes": 899082
                },
                {
                    "id": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.faa",
                    "sizeInBytes": 298472
                },
                {
                    "id": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.ffn",
                    "sizeInBytes": 836498
                },
                {
                    "id": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.sqn",
                    "sizeInBytes": 2269773
                },
                {
                    "id": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.fsa",
                    "sizeInBytes": 899602
                },
                {
                    "id": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.tbl",
                    "sizeInBytes": 125294
                },
                {
                    "id": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.err",
                    "sizeInBytes": 355352
                },
                {
                    "id": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.log",
                    "sizeInBytes": 14561
                },
                {
                    "id": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.txt",
                    "sizeInBytes": 75
                },
                {
                    "id": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/SPAdes-MaxBin2-test_minigut.001.tsv",
                    "sizeInBytes": 42464
                },
                {
                    "id": "/cf/8617310dd03b78d8d373719be2b28a/versions.yml",
                    "sizeInBytes": 44
                },
                {
                    "id": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.gff",
                    "sizeInBytes": 913681
                },
                {
                    "id": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.gbk",
                    "sizeInBytes": 1578355
                },
                {
                    "id": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.fna",
                    "sizeInBytes": 739909
                },
                {
                    "id": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.faa",
                    "sizeInBytes": 229936
                },
                {
                    "id": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.ffn",
                    "sizeInBytes": 630830
                },
                {
                    "id": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.sqn",
                    "sizeInBytes": 2581009
                },
                {
                    "id": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.fsa",
                    "sizeInBytes": 746513
                },
                {
                    "id": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.tbl",
                    "sizeInBytes": 150501
                },
                {
                    "id": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.err",
                    "sizeInBytes": 364481
                },
                {
                    "id": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.log",
                    "sizeInBytes": 16982
                },
                {
                    "id": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.txt",
                    "sizeInBytes": 84
                },
                {
                    "id": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/MEGAHIT-MetaBAT2-test_minigut.2.tsv",
                    "sizeInBytes": 48447
                },
                {
                    "id": "/5f/58d0d9089e64102958fd0a7ed07323/versions.yml",
                    "sizeInBytes": 44
                },
                {
                    "id": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.gff",
                    "sizeInBytes": 1082269
                },
                {
                    "id": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.gbk",
                    "sizeInBytes": 1814551
                },
                {
                    "id": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.fna",
                    "sizeInBytes": 857355
                },
                {
                    "id": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.faa",
                    "sizeInBytes": 284004
                },
                {
                    "id": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.ffn",
                    "sizeInBytes": 780823
                },
                {
                    "id": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.sqn",
                    "sizeInBytes": 2610923
                },
                {
                    "id": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.fsa",
                    "sizeInBytes": 858707
                },
                {
                    "id": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.tbl",
                    "sizeInBytes": 178622
                },
                {
                    "id": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.err",
                    "sizeInBytes": 414773
                },
                {
                    "id": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.log",
                    "sizeInBytes": 24181
                },
                {
                    "id": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.txt",
                    "sizeInBytes": 84
                },
                {
                    "id": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/SPAdes-MetaBAT2-test_minigut.2.tsv",
                    "sizeInBytes": 57627
                },
                {
                    "id": "/16/e9c11a77add3e2c1869b0d2c554413/versions.yml",
                    "sizeInBytes": 44
                },
                {
                    "id": "/b6/b7ace9100172f939fce1a324bafeec/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.002.fa.txt",
                    "sizeInBytes": 700
                },
                {
                    "id": "/b6/b7ace9100172f939fce1a324bafeec/busco_downloads",
                    "sizeInBytes": 18129
                },
                {
                    "id": "/b6/b7ace9100172f939fce1a324bafeec/MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log",
                    "sizeInBytes": 2784
                },
                {
                    "id": "/b6/b7ace9100172f939fce1a324bafeec/MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err",
                    "sizeInBytes": 0
                },
                {
                    "id": "/b6/b7ace9100172f939fce1a324bafeec/MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.bacteria_odb10.faa.gz",
                    "sizeInBytes": 3825
                },
                {
                    "id": "/b6/b7ace9100172f939fce1a324bafeec/MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.bacteria_odb10.fna.gz",
                    "sizeInBytes": 5791
                },
                {
                    "id": "/b6/b7ace9100172f939fce1a324bafeec/MEGAHIT-MaxBin2-test_minigut.002.fa_prodigal.gff",
                    "sizeInBytes": 207650
                },
                {
                    "id": "/b6/b7ace9100172f939fce1a324bafeec/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.002.fa.txt",
                    "sizeInBytes": 699
                },
                {
                    "id": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/busco_downloads",
                    "sizeInBytes": 18129
                },
                {
                    "id": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/SPAdes-MaxBin2-test_minigut.002.fa_busco.log",
                    "sizeInBytes": 2783
                },
                {
                    "id": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/SPAdes-MaxBin2-test_minigut.002.fa_busco.err",
                    "sizeInBytes": 0
                },
                {
                    "id": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/SPAdes-MaxBin2-test_minigut.002.fa_buscos.bacteria_odb10.faa.gz",
                    "sizeInBytes": 4024
                },
                {
                    "id": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/SPAdes-MaxBin2-test_minigut.002.fa_buscos.bacteria_odb10.fna.gz",
                    "sizeInBytes": 6002
                },
                {
                    "id": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/SPAdes-MaxBin2-test_minigut.002.fa_prodigal.gff",
                    "sizeInBytes": 209722
                },
                {
                    "id": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/7d/87145d575e7a7abf53c38bc1f42c46/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.1.fa.txt",
                    "sizeInBytes": 698
                },
                {
                    "id": "/7d/87145d575e7a7abf53c38bc1f42c46/busco_downloads",
                    "sizeInBytes": 18129
                },
                {
                    "id": "/7d/87145d575e7a7abf53c38bc1f42c46/SPAdes-MetaBAT2-test_minigut.1.fa_busco.log",
                    "sizeInBytes": 2782
                },
                {
                    "id": "/7d/87145d575e7a7abf53c38bc1f42c46/SPAdes-MetaBAT2-test_minigut.1.fa_busco.err",
                    "sizeInBytes": 0
                },
                {
                    "id": "/7d/87145d575e7a7abf53c38bc1f42c46/SPAdes-MetaBAT2-test_minigut.1.fa_buscos.bacteria_odb10.faa.gz",
                    "sizeInBytes": 5021
                },
                {
                    "id": "/7d/87145d575e7a7abf53c38bc1f42c46/SPAdes-MetaBAT2-test_minigut.1.fa_buscos.bacteria_odb10.fna.gz",
                    "sizeInBytes": 7571
                },
                {
                    "id": "/7d/87145d575e7a7abf53c38bc1f42c46/SPAdes-MetaBAT2-test_minigut.1.fa_prodigal.gff",
                    "sizeInBytes": 145085
                },
                {
                    "id": "/7d/87145d575e7a7abf53c38bc1f42c46/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/18/ba9403eaf56fae25a02be1c30984fe/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.001.fa.txt",
                    "sizeInBytes": 698
                },
                {
                    "id": "/18/ba9403eaf56fae25a02be1c30984fe/busco_downloads",
                    "sizeInBytes": 18129
                },
                {
                    "id": "/18/ba9403eaf56fae25a02be1c30984fe/SPAdes-MaxBin2-test_minigut.001.fa_busco.log",
                    "sizeInBytes": 2781
                },
                {
                    "id": "/18/ba9403eaf56fae25a02be1c30984fe/SPAdes-MaxBin2-test_minigut.001.fa_busco.err",
                    "sizeInBytes": 0
                },
                {
                    "id": "/18/ba9403eaf56fae25a02be1c30984fe/SPAdes-MaxBin2-test_minigut.001.fa_buscos.bacteria_odb10.faa.gz",
                    "sizeInBytes": 5854
                },
                {
                    "id": "/18/ba9403eaf56fae25a02be1c30984fe/SPAdes-MaxBin2-test_minigut.001.fa_buscos.bacteria_odb10.fna.gz",
                    "sizeInBytes": 8821
                },
                {
                    "id": "/18/ba9403eaf56fae25a02be1c30984fe/SPAdes-MaxBin2-test_minigut.001.fa_prodigal.gff",
                    "sizeInBytes": 180370
                },
                {
                    "id": "/18/ba9403eaf56fae25a02be1c30984fe/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/38/556350b2b2b8efe6d2264985733b0c/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt",
                    "sizeInBytes": 699
                },
                {
                    "id": "/38/556350b2b2b8efe6d2264985733b0c/busco_downloads",
                    "sizeInBytes": 18129
                },
                {
                    "id": "/38/556350b2b2b8efe6d2264985733b0c/MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log",
                    "sizeInBytes": 2783
                },
                {
                    "id": "/38/556350b2b2b8efe6d2264985733b0c/MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err",
                    "sizeInBytes": 0
                },
                {
                    "id": "/38/556350b2b2b8efe6d2264985733b0c/MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.bacteria_odb10.faa.gz",
                    "sizeInBytes": 5254
                },
                {
                    "id": "/38/556350b2b2b8efe6d2264985733b0c/MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.bacteria_odb10.fna.gz",
                    "sizeInBytes": 7955
                },
                {
                    "id": "/38/556350b2b2b8efe6d2264985733b0c/MEGAHIT-MetaBAT2-test_minigut.1.fa_prodigal.gff",
                    "sizeInBytes": 155694
                },
                {
                    "id": "/38/556350b2b2b8efe6d2264985733b0c/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/4c/002d51c5239b46efae0101b8737275/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt",
                    "sizeInBytes": 699
                },
                {
                    "id": "/4c/002d51c5239b46efae0101b8737275/busco_downloads",
                    "sizeInBytes": 18129
                },
                {
                    "id": "/4c/002d51c5239b46efae0101b8737275/MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log",
                    "sizeInBytes": 2783
                },
                {
                    "id": "/4c/002d51c5239b46efae0101b8737275/MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err",
                    "sizeInBytes": 0
                },
                {
                    "id": "/4c/002d51c5239b46efae0101b8737275/MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.bacteria_odb10.faa.gz",
                    "sizeInBytes": 3309
                },
                {
                    "id": "/4c/002d51c5239b46efae0101b8737275/MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.bacteria_odb10.fna.gz",
                    "sizeInBytes": 5010
                },
                {
                    "id": "/4c/002d51c5239b46efae0101b8737275/MEGAHIT-MetaBAT2-test_minigut.2.fa_prodigal.gff",
                    "sizeInBytes": 188015
                },
                {
                    "id": "/4c/002d51c5239b46efae0101b8737275/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.001.fa.txt",
                    "sizeInBytes": 699
                },
                {
                    "id": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/busco_downloads",
                    "sizeInBytes": 18129
                },
                {
                    "id": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log",
                    "sizeInBytes": 2782
                },
                {
                    "id": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err",
                    "sizeInBytes": 0
                },
                {
                    "id": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.bacteria_odb10.faa.gz",
                    "sizeInBytes": 5490
                },
                {
                    "id": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.bacteria_odb10.fna.gz",
                    "sizeInBytes": 8304
                },
                {
                    "id": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/MEGAHIT-MaxBin2-test_minigut.001.fa_prodigal.gff",
                    "sizeInBytes": 184589
                },
                {
                    "id": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/c9/4ae56826c49a7fe1063c5a40993c8f/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.2.fa.txt",
                    "sizeInBytes": 698
                },
                {
                    "id": "/c9/4ae56826c49a7fe1063c5a40993c8f/busco_downloads",
                    "sizeInBytes": 18129
                },
                {
                    "id": "/c9/4ae56826c49a7fe1063c5a40993c8f/SPAdes-MetaBAT2-test_minigut.2.fa_busco.log",
                    "sizeInBytes": 2782
                },
                {
                    "id": "/c9/4ae56826c49a7fe1063c5a40993c8f/SPAdes-MetaBAT2-test_minigut.2.fa_busco.err",
                    "sizeInBytes": 0
                },
                {
                    "id": "/c9/4ae56826c49a7fe1063c5a40993c8f/SPAdes-MetaBAT2-test_minigut.2.fa_buscos.bacteria_odb10.faa.gz",
                    "sizeInBytes": 4024
                },
                {
                    "id": "/c9/4ae56826c49a7fe1063c5a40993c8f/SPAdes-MetaBAT2-test_minigut.2.fa_buscos.bacteria_odb10.fna.gz",
                    "sizeInBytes": 6002
                },
                {
                    "id": "/c9/4ae56826c49a7fe1063c5a40993c8f/SPAdes-MetaBAT2-test_minigut.2.fa_prodigal.gff",
                    "sizeInBytes": 207746
                },
                {
                    "id": "/c9/4ae56826c49a7fe1063c5a40993c8f/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt",
                    "sizeInBytes": 703
                },
                {
                    "id": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/busco_downloads",
                    "sizeInBytes": 18129
                },
                {
                    "id": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log",
                    "sizeInBytes": 2784
                },
                {
                    "id": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err",
                    "sizeInBytes": 0
                },
                {
                    "id": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.bacteria_odb10.faa.gz",
                    "sizeInBytes": 505
                },
                {
                    "id": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.bacteria_odb10.fna.gz",
                    "sizeInBytes": 699
                },
                {
                    "id": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/SPAdes-MaxBin2-test_minigut_sample2.001.fa_prodigal.gff",
                    "sizeInBytes": 97093
                },
                {
                    "id": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.gff",
                    "sizeInBytes": 31901
                },
                {
                    "id": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.gbk",
                    "sizeInBytes": 54294
                },
                {
                    "id": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fna",
                    "sizeInBytes": 27618
                },
                {
                    "id": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.faa",
                    "sizeInBytes": 9151
                },
                {
                    "id": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.ffn",
                    "sizeInBytes": 25676
                },
                {
                    "id": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.sqn",
                    "sizeInBytes": 81434
                },
                {
                    "id": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fsa",
                    "sizeInBytes": 27670
                },
                {
                    "id": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.tbl",
                    "sizeInBytes": 3372
                },
                {
                    "id": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.err",
                    "sizeInBytes": 13277
                },
                {
                    "id": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.log",
                    "sizeInBytes": 11495
                },
                {
                    "id": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.txt",
                    "sizeInBytes": 64
                },
                {
                    "id": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.tsv",
                    "sizeInBytes": 1260
                },
                {
                    "id": "/3b/9bd46fae396e69ddc8bc14a6c3702b/versions.yml",
                    "sizeInBytes": 44
                },
                {
                    "id": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.gff",
                    "sizeInBytes": 22532
                },
                {
                    "id": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.gbk",
                    "sizeInBytes": 38434
                },
                {
                    "id": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fna",
                    "sizeInBytes": 18146
                },
                {
                    "id": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.faa",
                    "sizeInBytes": 6065
                },
                {
                    "id": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.ffn",
                    "sizeInBytes": 16424
                },
                {
                    "id": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.sqn",
                    "sizeInBytes": 69271
                },
                {
                    "id": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fsa",
                    "sizeInBytes": 18198
                },
                {
                    "id": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.tbl",
                    "sizeInBytes": 3484
                },
                {
                    "id": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.err",
                    "sizeInBytes": 13239
                },
                {
                    "id": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.log",
                    "sizeInBytes": 11497
                },
                {
                    "id": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.txt",
                    "sizeInBytes": 64
                },
                {
                    "id": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.tsv",
                    "sizeInBytes": 1268
                },
                {
                    "id": "/9c/6f3c890f8199bf500b3c3f349ddee1/versions.yml",
                    "sizeInBytes": 44
                },
                {
                    "id": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.gff",
                    "sizeInBytes": 4195
                },
                {
                    "id": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.gbk",
                    "sizeInBytes": 7615
                },
                {
                    "id": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fna",
                    "sizeInBytes": 3318
                },
                {
                    "id": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.faa",
                    "sizeInBytes": 1221
                },
                {
                    "id": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.ffn",
                    "sizeInBytes": 3303
                },
                {
                    "id": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.sqn",
                    "sizeInBytes": 15169
                },
                {
                    "id": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fsa",
                    "sizeInBytes": 3370
                },
                {
                    "id": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.tbl",
                    "sizeInBytes": 632
                },
                {
                    "id": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.err",
                    "sizeInBytes": 5887
                },
                {
                    "id": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.log",
                    "sizeInBytes": 12075
                },
                {
                    "id": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.txt",
                    "sizeInBytes": 62
                },
                {
                    "id": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.tsv",
                    "sizeInBytes": 290
                },
                {
                    "id": "/06/06fd46de33d8c0bf3b8ff45b2203a4/versions.yml",
                    "sizeInBytes": 44
                },
                {
                    "id": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.gff",
                    "sizeInBytes": 55792
                },
                {
                    "id": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.gbk",
                    "sizeInBytes": 93099
                },
                {
                    "id": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.fna",
                    "sizeInBytes": 47341
                },
                {
                    "id": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.faa",
                    "sizeInBytes": 15789
                },
                {
                    "id": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.ffn",
                    "sizeInBytes": 44294
                },
                {
                    "id": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.sqn",
                    "sizeInBytes": 116522
                },
                {
                    "id": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.fsa",
                    "sizeInBytes": 47393
                },
                {
                    "id": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.tbl",
                    "sizeInBytes": 6198
                },
                {
                    "id": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.err",
                    "sizeInBytes": 23007
                },
                {
                    "id": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.log",
                    "sizeInBytes": 11286
                },
                {
                    "id": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.txt",
                    "sizeInBytes": 64
                },
                {
                    "id": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/SPAdes-MetaBAT2-test_minigut.unbinned.2.tsv",
                    "sizeInBytes": 2205
                },
                {
                    "id": "/51/60f81c29d813b8ff5be0c4450ebe11/versions.yml",
                    "sizeInBytes": 44
                },
                {
                    "id": "/f4/2b25e66e4794ad80e085d57991a17f/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt",
                    "sizeInBytes": 713
                },
                {
                    "id": "/f4/2b25e66e4794ad80e085d57991a17f/busco_downloads",
                    "sizeInBytes": 18129
                },
                {
                    "id": "/f4/2b25e66e4794ad80e085d57991a17f/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log",
                    "sizeInBytes": 3056
                },
                {
                    "id": "/f4/2b25e66e4794ad80e085d57991a17f/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err",
                    "sizeInBytes": 0
                },
                {
                    "id": "/f4/2b25e66e4794ad80e085d57991a17f/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_prodigal.gff",
                    "sizeInBytes": 1543
                },
                {
                    "id": "/f4/2b25e66e4794ad80e085d57991a17f/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt",
                    "sizeInBytes": 61
                },
                {
                    "id": "/f4/2b25e66e4794ad80e085d57991a17f/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/2b/b9c67b024483e9dcc03590bd534af3/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                    "sizeInBytes": 704
                },
                {
                    "id": "/2b/b9c67b024483e9dcc03590bd534af3/busco_downloads",
                    "sizeInBytes": 18129
                },
                {
                    "id": "/2b/b9c67b024483e9dcc03590bd534af3/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log",
                    "sizeInBytes": 3047
                },
                {
                    "id": "/2b/b9c67b024483e9dcc03590bd534af3/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err",
                    "sizeInBytes": 0
                },
                {
                    "id": "/2b/b9c67b024483e9dcc03590bd534af3/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_prodigal.gff",
                    "sizeInBytes": 9157
                },
                {
                    "id": "/2b/b9c67b024483e9dcc03590bd534af3/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt",
                    "sizeInBytes": 52
                },
                {
                    "id": "/2b/b9c67b024483e9dcc03590bd534af3/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/1a/84f07aa032c5c6074182ab239ba71a/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt",
                    "sizeInBytes": 712
                },
                {
                    "id": "/1a/84f07aa032c5c6074182ab239ba71a/busco_downloads",
                    "sizeInBytes": 18129
                },
                {
                    "id": "/1a/84f07aa032c5c6074182ab239ba71a/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log",
                    "sizeInBytes": 3055
                },
                {
                    "id": "/1a/84f07aa032c5c6074182ab239ba71a/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err",
                    "sizeInBytes": 0
                },
                {
                    "id": "/1a/84f07aa032c5c6074182ab239ba71a/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_prodigal.gff",
                    "sizeInBytes": 3584
                },
                {
                    "id": "/1a/84f07aa032c5c6074182ab239ba71a/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt",
                    "sizeInBytes": 60
                },
                {
                    "id": "/1a/84f07aa032c5c6074182ab239ba71a/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/00/056cc9e0b256cf0fb6f145d85aa73a/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                    "sizeInBytes": 704
                },
                {
                    "id": "/00/056cc9e0b256cf0fb6f145d85aa73a/busco_downloads",
                    "sizeInBytes": 18129
                },
                {
                    "id": "/00/056cc9e0b256cf0fb6f145d85aa73a/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log",
                    "sizeInBytes": 2783
                },
                {
                    "id": "/00/056cc9e0b256cf0fb6f145d85aa73a/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err",
                    "sizeInBytes": 0
                },
                {
                    "id": "/00/056cc9e0b256cf0fb6f145d85aa73a/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.bacteria_odb10.faa.gz",
                    "sizeInBytes": 511
                },
                {
                    "id": "/00/056cc9e0b256cf0fb6f145d85aa73a/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.bacteria_odb10.fna.gz",
                    "sizeInBytes": 786
                },
                {
                    "id": "/00/056cc9e0b256cf0fb6f145d85aa73a/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_prodigal.gff",
                    "sizeInBytes": 5605
                },
                {
                    "id": "/00/056cc9e0b256cf0fb6f145d85aa73a/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/0e427f2ecabcff8cfcf237e697e946/QUAST/MEGAHIT-MetaBAT2-test_minigut.1.fa",
                    "sizeInBytes": 1309910
                },
                {
                    "id": "/0e427f2ecabcff8cfcf237e697e946/QUAST/MEGAHIT-MetaBAT2-test_minigut.2.fa",
                    "sizeInBytes": 1320166
                },
                {
                    "id": "/0e427f2ecabcff8cfcf237e697e946/QUAST/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa",
                    "sizeInBytes": 1302657
                },
                {
                    "id": "/0e427f2ecabcff8cfcf237e697e946/QUAST/MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa",
                    "sizeInBytes": 1302469
                },
                {
                    "id": "/0e427f2ecabcff8cfcf237e697e946/QUAST/MEGAHIT-MetaBAT2-test_minigut-quast_summary.tsv",
                    "sizeInBytes": 969
                },
                {
                    "id": "/93/0e427f2ecabcff8cfcf237e697e946/versions.yml",
                    "sizeInBytes": 68
                },
                {
                    "id": "/75ba09ccb00d7510f1b6163fef05a8/QUAST/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                    "sizeInBytes": 1340212
                },
                {
                    "id": "/75ba09ccb00d7510f1b6163fef05a8/QUAST/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                    "sizeInBytes": 1340504
                },
                {
                    "id": "/75ba09ccb00d7510f1b6163fef05a8/QUAST/SPAdes-MetaBAT2-test_minigut_sample2-quast_summary.tsv",
                    "sizeInBytes": 672
                },
                {
                    "id": "/a3/75ba09ccb00d7510f1b6163fef05a8/versions.yml",
                    "sizeInBytes": 68
                },
                {
                    "id": "/fa5c60846b08611e13ec4d185fc691/QUAST/MEGAHIT-MaxBin2-test_minigut.001.fa",
                    "sizeInBytes": 1313233
                },
                {
                    "id": "/fa5c60846b08611e13ec4d185fc691/QUAST/MEGAHIT-MaxBin2-test_minigut.002.fa",
                    "sizeInBytes": 1325050
                },
                {
                    "id": "/fa5c60846b08611e13ec4d185fc691/QUAST/MEGAHIT-MaxBin2-test_minigut-quast_summary.tsv",
                    "sizeInBytes": 696
                },
                {
                    "id": "/29/fa5c60846b08611e13ec4d185fc691/versions.yml",
                    "sizeInBytes": 68
                },
                {
                    "id": "/3b/07878d030aa541a9e52c22ba4ced01/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt",
                    "sizeInBytes": 703
                },
                {
                    "id": "/3b/07878d030aa541a9e52c22ba4ced01/busco_downloads",
                    "sizeInBytes": 18129
                },
                {
                    "id": "/3b/07878d030aa541a9e52c22ba4ced01/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log",
                    "sizeInBytes": 2782
                },
                {
                    "id": "/3b/07878d030aa541a9e52c22ba4ced01/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err",
                    "sizeInBytes": 0
                },
                {
                    "id": "/3b/07878d030aa541a9e52c22ba4ced01/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.bacteria_odb10.faa.gz",
                    "sizeInBytes": 954
                },
                {
                    "id": "/3b/07878d030aa541a9e52c22ba4ced01/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.bacteria_odb10.fna.gz",
                    "sizeInBytes": 1458
                },
                {
                    "id": "/3b/07878d030aa541a9e52c22ba4ced01/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_prodigal.gff",
                    "sizeInBytes": 19984
                },
                {
                    "id": "/3b/07878d030aa541a9e52c22ba4ced01/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/80bbbb344191f41d74b3c89e2d8982/QUAST/SPAdes-MetaBAT2-test_minigut.1.fa",
                    "sizeInBytes": 1340028
                },
                {
                    "id": "/80bbbb344191f41d74b3c89e2d8982/QUAST/SPAdes-MetaBAT2-test_minigut.2.fa",
                    "sizeInBytes": 1343418
                },
                {
                    "id": "/80bbbb344191f41d74b3c89e2d8982/QUAST/SPAdes-MetaBAT2-test_minigut.unbinned.1.fa",
                    "sizeInBytes": 1339289
                },
                {
                    "id": "/80bbbb344191f41d74b3c89e2d8982/QUAST/SPAdes-MetaBAT2-test_minigut.unbinned.2.fa",
                    "sizeInBytes": 1340840
                },
                {
                    "id": "/80bbbb344191f41d74b3c89e2d8982/QUAST/SPAdes-MetaBAT2-test_minigut-quast_summary.tsv",
                    "sizeInBytes": 984
                },
                {
                    "id": "/e3/80bbbb344191f41d74b3c89e2d8982/versions.yml",
                    "sizeInBytes": 68
                },
                {
                    "id": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.gff",
                    "sizeInBytes": 10295
                },
                {
                    "id": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.gbk",
                    "sizeInBytes": 18113
                },
                {
                    "id": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fna",
                    "sizeInBytes": 7788
                },
                {
                    "id": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.faa",
                    "sizeInBytes": 2422
                },
                {
                    "id": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.ffn",
                    "sizeInBytes": 6333
                },
                {
                    "id": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.sqn",
                    "sizeInBytes": 35664
                },
                {
                    "id": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fsa",
                    "sizeInBytes": 7840
                },
                {
                    "id": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.tbl",
                    "sizeInBytes": 1648
                },
                {
                    "id": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.err",
                    "sizeInBytes": 11211
                },
                {
                    "id": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.log",
                    "sizeInBytes": 11997
                },
                {
                    "id": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.txt",
                    "sizeInBytes": 63
                },
                {
                    "id": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.tsv",
                    "sizeInBytes": 665
                },
                {
                    "id": "/02/9238e39b30320332b712a766432fdd/versions.yml",
                    "sizeInBytes": 44
                },
                {
                    "id": "/0d/922fde31aa037b2ab959dacef5fbc9/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt",
                    "sizeInBytes": 710
                },
                {
                    "id": "/0d/922fde31aa037b2ab959dacef5fbc9/busco_downloads",
                    "sizeInBytes": 18129
                },
                {
                    "id": "/0d/922fde31aa037b2ab959dacef5fbc9/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log",
                    "sizeInBytes": 3218
                },
                {
                    "id": "/0d/922fde31aa037b2ab959dacef5fbc9/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err",
                    "sizeInBytes": 0
                },
                {
                    "id": "/0d/922fde31aa037b2ab959dacef5fbc9/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_prodigal.gff",
                    "sizeInBytes": 1449
                },
                {
                    "id": "/0d/922fde31aa037b2ab959dacef5fbc9/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.failed_bin.txt",
                    "sizeInBytes": 58
                },
                {
                    "id": "/0d/922fde31aa037b2ab959dacef5fbc9/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.gff",
                    "sizeInBytes": 7521
                },
                {
                    "id": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.gbk",
                    "sizeInBytes": 10224
                },
                {
                    "id": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fna",
                    "sizeInBytes": 6568
                },
                {
                    "id": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.faa",
                    "sizeInBytes": 171
                },
                {
                    "id": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.ffn",
                    "sizeInBytes": 5323
                },
                {
                    "id": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.sqn",
                    "sizeInBytes": 14549
                },
                {
                    "id": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fsa",
                    "sizeInBytes": 6620
                },
                {
                    "id": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.tbl",
                    "sizeInBytes": 726
                },
                {
                    "id": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.err",
                    "sizeInBytes": 5106
                },
                {
                    "id": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.log",
                    "sizeInBytes": 12495
                },
                {
                    "id": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.txt",
                    "sizeInBytes": 78
                },
                {
                    "id": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.tsv",
                    "sizeInBytes": 351
                },
                {
                    "id": "/ee/aee47d7a4e094c1a0b74b350968648/versions.yml",
                    "sizeInBytes": 44
                },
                {
                    "id": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.gff",
                    "sizeInBytes": 104068
                },
                {
                    "id": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.gbk",
                    "sizeInBytes": 173625
                },
                {
                    "id": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.fna",
                    "sizeInBytes": 86151
                },
                {
                    "id": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.faa",
                    "sizeInBytes": 28987
                },
                {
                    "id": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.ffn",
                    "sizeInBytes": 80309
                },
                {
                    "id": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.sqn",
                    "sizeInBytes": 239550
                },
                {
                    "id": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.fsa",
                    "sizeInBytes": 86203
                },
                {
                    "id": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.tbl",
                    "sizeInBytes": 12863
                },
                {
                    "id": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.err",
                    "sizeInBytes": 45679
                },
                {
                    "id": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.log",
                    "sizeInBytes": 11491
                },
                {
                    "id": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.txt",
                    "sizeInBytes": 64
                },
                {
                    "id": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/SPAdes-MetaBAT2-test_minigut.unbinned.1.tsv",
                    "sizeInBytes": 4601
                },
                {
                    "id": "/31/50cac81585ab74695be039f9b06ea5/versions.yml",
                    "sizeInBytes": 44
                },
                {
                    "id": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.gff",
                    "sizeInBytes": 7713
                },
                {
                    "id": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.gbk",
                    "sizeInBytes": 10224
                },
                {
                    "id": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fna",
                    "sizeInBytes": 6592
                },
                {
                    "id": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.faa",
                    "sizeInBytes": 171
                },
                {
                    "id": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.ffn",
                    "sizeInBytes": 5323
                },
                {
                    "id": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.sqn",
                    "sizeInBytes": 14789
                },
                {
                    "id": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fsa",
                    "sizeInBytes": 6644
                },
                {
                    "id": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.tbl",
                    "sizeInBytes": 750
                },
                {
                    "id": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.err",
                    "sizeInBytes": 5668
                },
                {
                    "id": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.log",
                    "sizeInBytes": 12550
                },
                {
                    "id": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.txt",
                    "sizeInBytes": 78
                },
                {
                    "id": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.tsv",
                    "sizeInBytes": 351
                },
                {
                    "id": "/9c/5d065a5869540abef8c156a0756d9f/versions.yml",
                    "sizeInBytes": 44
                },
                {
                    "id": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.gff",
                    "sizeInBytes": 3555
                },
                {
                    "id": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.gbk",
                    "sizeInBytes": 6231
                },
                {
                    "id": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fna",
                    "sizeInBytes": 2536
                },
                {
                    "id": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.faa",
                    "sizeInBytes": 721
                },
                {
                    "id": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.ffn",
                    "sizeInBytes": 1836
                },
                {
                    "id": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.sqn",
                    "sizeInBytes": 12323
                },
                {
                    "id": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fsa",
                    "sizeInBytes": 2588
                },
                {
                    "id": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.tbl",
                    "sizeInBytes": 744
                },
                {
                    "id": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.err",
                    "sizeInBytes": 6374
                },
                {
                    "id": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.log",
                    "sizeInBytes": 11963
                },
                {
                    "id": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.txt",
                    "sizeInBytes": 62
                },
                {
                    "id": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.tsv",
                    "sizeInBytes": 296
                },
                {
                    "id": "/eb/b98febf1fc3c7eb2ff4d942a4e8622/versions.yml",
                    "sizeInBytes": 44
                },
                {
                    "id": "/68a0d6876a8cb570299735403c1868/QUAST/SPAdes-MaxBin2-test_minigut.001.fa",
                    "sizeInBytes": 1342025
                },
                {
                    "id": "/68a0d6876a8cb570299735403c1868/QUAST/SPAdes-MaxBin2-test_minigut.002.fa",
                    "sizeInBytes": 1344555
                },
                {
                    "id": "/68a0d6876a8cb570299735403c1868/QUAST/SPAdes-MaxBin2-test_minigut-quast_summary.tsv",
                    "sizeInBytes": 705
                },
                {
                    "id": "/b0/68a0d6876a8cb570299735403c1868/versions.yml",
                    "sizeInBytes": 68
                },
                {
                    "id": "/21/a612f469bfb3131b66630b7b59bbf6/short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt",
                    "sizeInBytes": 710
                },
                {
                    "id": "/21/a612f469bfb3131b66630b7b59bbf6/busco_downloads",
                    "sizeInBytes": 18129
                },
                {
                    "id": "/21/a612f469bfb3131b66630b7b59bbf6/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log",
                    "sizeInBytes": 3218
                },
                {
                    "id": "/21/a612f469bfb3131b66630b7b59bbf6/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err",
                    "sizeInBytes": 0
                },
                {
                    "id": "/21/a612f469bfb3131b66630b7b59bbf6/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_prodigal.gff",
                    "sizeInBytes": 1448
                },
                {
                    "id": "/21/a612f469bfb3131b66630b7b59bbf6/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.failed_bin.txt",
                    "sizeInBytes": 58
                },
                {
                    "id": "/21/a612f469bfb3131b66630b7b59bbf6/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/dd/67d472dc329d9ecf4445b693374ddb/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt",
                    "sizeInBytes": 705
                },
                {
                    "id": "/dd/67d472dc329d9ecf4445b693374ddb/busco_downloads",
                    "sizeInBytes": 18129
                },
                {
                    "id": "/dd/67d472dc329d9ecf4445b693374ddb/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log",
                    "sizeInBytes": 3048
                },
                {
                    "id": "/dd/67d472dc329d9ecf4445b693374ddb/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err",
                    "sizeInBytes": 0
                },
                {
                    "id": "/dd/67d472dc329d9ecf4445b693374ddb/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_prodigal.gff",
                    "sizeInBytes": 5407
                },
                {
                    "id": "/dd/67d472dc329d9ecf4445b693374ddb/MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt",
                    "sizeInBytes": 53
                },
                {
                    "id": "/dd/67d472dc329d9ecf4445b693374ddb/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/732a25090d4beb96662fe81e12ba19/QUAST/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                    "sizeInBytes": 1303268
                },
                {
                    "id": "/732a25090d4beb96662fe81e12ba19/QUAST/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                    "sizeInBytes": 1303226
                },
                {
                    "id": "/732a25090d4beb96662fe81e12ba19/QUAST/MEGAHIT-MetaBAT2-test_minigut_sample2-quast_summary.tsv",
                    "sizeInBytes": 668
                },
                {
                    "id": "/ab/732a25090d4beb96662fe81e12ba19/versions.yml",
                    "sizeInBytes": 68
                },
                {
                    "id": "/e5dc8a91b79dee2a7146e0ffa69a0c/QUAST/SPAdes-MaxBin2-test_minigut_sample2.001.fa",
                    "sizeInBytes": 1361762
                },
                {
                    "id": "/e5dc8a91b79dee2a7146e0ffa69a0c/QUAST/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa",
                    "sizeInBytes": 1339878
                },
                {
                    "id": "/e5dc8a91b79dee2a7146e0ffa69a0c/QUAST/SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa",
                    "sizeInBytes": 1338618
                },
                {
                    "id": "/e5dc8a91b79dee2a7146e0ffa69a0c/QUAST/SPAdes-MaxBin2-test_minigut_sample2-quast_summary.tsv",
                    "sizeInBytes": 805
                },
                {
                    "id": "/53/e5dc8a91b79dee2a7146e0ffa69a0c/versions.yml",
                    "sizeInBytes": 68
                },
                {
                    "id": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.gff",
                    "sizeInBytes": 3741
                },
                {
                    "id": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.gbk",
                    "sizeInBytes": 6549
                },
                {
                    "id": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fna",
                    "sizeInBytes": 2784
                },
                {
                    "id": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.faa",
                    "sizeInBytes": 692
                },
                {
                    "id": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.ffn",
                    "sizeInBytes": 1781
                },
                {
                    "id": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.sqn",
                    "sizeInBytes": 12709
                },
                {
                    "id": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fsa",
                    "sizeInBytes": 2836
                },
                {
                    "id": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.tbl",
                    "sizeInBytes": 690
                },
                {
                    "id": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.err",
                    "sizeInBytes": 6076
                },
                {
                    "id": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.log",
                    "sizeInBytes": 11808
                },
                {
                    "id": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.txt",
                    "sizeInBytes": 62
                },
                {
                    "id": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/SPAdes-MaxBin2-test_minigut_sample2.noclass.1.tsv",
                    "sizeInBytes": 264
                },
                {
                    "id": "/7d/bf181196559eb203a5a821022e783e/versions.yml",
                    "sizeInBytes": 44
                },
                {
                    "id": "/de/9424c88160a29cbe98e6db3e5eddd6/short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt",
                    "sizeInBytes": 713
                },
                {
                    "id": "/de/9424c88160a29cbe98e6db3e5eddd6/busco_downloads",
                    "sizeInBytes": 18129
                },
                {
                    "id": "/de/9424c88160a29cbe98e6db3e5eddd6/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log",
                    "sizeInBytes": 3221
                },
                {
                    "id": "/de/9424c88160a29cbe98e6db3e5eddd6/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err",
                    "sizeInBytes": 0
                },
                {
                    "id": "/de/9424c88160a29cbe98e6db3e5eddd6/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_prodigal.gff",
                    "sizeInBytes": 1086
                },
                {
                    "id": "/de/9424c88160a29cbe98e6db3e5eddd6/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt",
                    "sizeInBytes": 61
                },
                {
                    "id": "/de/9424c88160a29cbe98e6db3e5eddd6/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/0e/51dc37ddf45a8a1d257f31210ed41e/MEGAHIT-MaxBin2-test_minigut-binDepths.tsv",
                    "sizeInBytes": 135
                },
                {
                    "id": "/0e/51dc37ddf45a8a1d257f31210ed41e/versions.yml",
                    "sizeInBytes": 73
                },
                {
                    "id": "/3f/89d58d5f5a6ea4c27460a9e94b4343/MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                    "sizeInBytes": 172
                },
                {
                    "id": "/3f/89d58d5f5a6ea4c27460a9e94b4343/versions.yml",
                    "sizeInBytes": 73
                },
                {
                    "id": "/83/74fe64a2bed18c6ba5af48eca390d0/SPAdes-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                    "sizeInBytes": 170
                },
                {
                    "id": "/83/74fe64a2bed18c6ba5af48eca390d0/versions.yml",
                    "sizeInBytes": 73
                },
                {
                    "id": "/6b/c98cdd973d773b166cdea86c59b9fe/SPAdes-MaxBin2-test_minigut_sample2-binDepths.tsv",
                    "sizeInBytes": 224
                },
                {
                    "id": "/6b/c98cdd973d773b166cdea86c59b9fe/versions.yml",
                    "sizeInBytes": 73
                },
                {
                    "id": "/a9/dfd61de3ae0e9f42b9bf29dd99ff94/SPAdes-MaxBin2-test_minigut-binDepths.tsv",
                    "sizeInBytes": 149
                },
                {
                    "id": "/a9/dfd61de3ae0e9f42b9bf29dd99ff94/versions.yml",
                    "sizeInBytes": 73
                },
                {
                    "id": "/6a/95ee9d72f227cf503178f287f9c9ef/MEGAHIT-MetaBAT2-test_minigut-binDepths.tsv",
                    "sizeInBytes": 244
                },
                {
                    "id": "/6a/95ee9d72f227cf503178f287f9c9ef/versions.yml",
                    "sizeInBytes": 73
                },
                {
                    "id": "/f9/e92d13b4ffdc65bdd3692de2b876c7/SPAdes-MetaBAT2-test_minigut-binDepths.tsv",
                    "sizeInBytes": 257
                },
                {
                    "id": "/f9/e92d13b4ffdc65bdd3692de2b876c7/versions.yml",
                    "sizeInBytes": 73
                },
                {
                    "id": "/a5/11a719f47864c4209cfd42c943c6a0/short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt",
                    "sizeInBytes": 712
                },
                {
                    "id": "/a5/11a719f47864c4209cfd42c943c6a0/busco_downloads",
                    "sizeInBytes": 18129
                },
                {
                    "id": "/a5/11a719f47864c4209cfd42c943c6a0/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log",
                    "sizeInBytes": 3220
                },
                {
                    "id": "/a5/11a719f47864c4209cfd42c943c6a0/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err",
                    "sizeInBytes": 0
                },
                {
                    "id": "/a5/11a719f47864c4209cfd42c943c6a0/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_prodigal.gff",
                    "sizeInBytes": 1206
                },
                {
                    "id": "/a5/11a719f47864c4209cfd42c943c6a0/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt",
                    "sizeInBytes": 60
                },
                {
                    "id": "/a5/11a719f47864c4209cfd42c943c6a0/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/3e/1dd392ebd00f7498212164127990ba/quast_summary.tsv",
                    "sizeInBytes": 3069
                },
                {
                    "id": "/3e/1dd392ebd00f7498212164127990ba/versions.yml",
                    "sizeInBytes": 50
                },
                {
                    "id": "/11/13d0058bde55bb4f6f22246229827e/sample_groups.tsv",
                    "sizeInBytes": 38
                },
                {
                    "id": "/d2/547c82e39ef05977978241fc65d4a8/MEGAHIT-MaxBin2-test_minigut-binDepths.heatmap.png",
                    "sizeInBytes": 19850
                },
                {
                    "id": "/d2/547c82e39ef05977978241fc65d4a8/versions.yml",
                    "sizeInBytes": 98
                },
                {
                    "id": "/56/c0dfe28532e158c500482f1a27e37d/MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.heatmap.png",
                    "sizeInBytes": 22168
                },
                {
                    "id": "/56/c0dfe28532e158c500482f1a27e37d/versions.yml",
                    "sizeInBytes": 98
                },
                {
                    "id": "/bf/afb1637bffc0858e9f84cb10a77788/SPAdes-MetaBAT2-test_minigut_sample2-binDepths.heatmap.png",
                    "sizeInBytes": 22503
                },
                {
                    "id": "/bf/afb1637bffc0858e9f84cb10a77788/versions.yml",
                    "sizeInBytes": 98
                },
                {
                    "id": "/4e/f151f6b1416b71c24977395ee58991/SPAdes-MaxBin2-test_minigut_sample2-binDepths.heatmap.png",
                    "sizeInBytes": 29934
                },
                {
                    "id": "/4e/f151f6b1416b71c24977395ee58991/versions.yml",
                    "sizeInBytes": 98
                },
                {
                    "id": "/f7/8b9d5a47642ee2c2929dfa6026708f/SPAdes-MaxBin2-test_minigut-binDepths.heatmap.png",
                    "sizeInBytes": 19675
                },
                {
                    "id": "/f7/8b9d5a47642ee2c2929dfa6026708f/versions.yml",
                    "sizeInBytes": 98
                },
                {
                    "id": "/45/c4f2b6c9d8115b5f90a06f367b951b/MEGAHIT-MetaBAT2-test_minigut-binDepths.heatmap.png",
                    "sizeInBytes": 29358
                },
                {
                    "id": "/45/c4f2b6c9d8115b5f90a06f367b951b/versions.yml",
                    "sizeInBytes": 98
                },
                {
                    "id": "/9c/79fb3c7c6fbee7e29e04ac97e694a6/SPAdes-MetaBAT2-test_minigut-binDepths.heatmap.png",
                    "sizeInBytes": 28470
                },
                {
                    "id": "/9c/79fb3c7c6fbee7e29e04ac97e694a6/versions.yml",
                    "sizeInBytes": 98
                },
                {
                    "id": "/12/f23515f1d57ae46421f6f0e13c854c/bin_depths_summary.tsv",
                    "sizeInBytes": 1124
                },
                {
                    "id": "/12/f23515f1d57ae46421f6f0e13c854c/versions.yml",
                    "sizeInBytes": 81
                },
                {
                    "id": "/0a/0d559a4b8d0071a64d4d4e63b17b87/MEGAHIT-MaxBin2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.png",
                    "sizeInBytes": 110518
                },
                {
                    "id": "/0a/0d559a4b8d0071a64d4d4e63b17b87/MEGAHIT-MaxBin2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.R",
                    "sizeInBytes": 4344
                },
                {
                    "id": "/0a/0d559a4b8d0071a64d4d4e63b17b87/versions.yml",
                    "sizeInBytes": 86
                },
                {
                    "id": "/e7/f3feb3afc5ddd255b1f2d28edb333f/MEGAHIT-MetaBAT2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.png",
                    "sizeInBytes": 105237
                },
                {
                    "id": "/e7/f3feb3afc5ddd255b1f2d28edb333f/MEGAHIT-MetaBAT2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.R",
                    "sizeInBytes": 4471
                },
                {
                    "id": "/e7/f3feb3afc5ddd255b1f2d28edb333f/versions.yml",
                    "sizeInBytes": 86
                },
                {
                    "id": "/a4/7c5c785b7f11dc6c98b083bca5d613/SPAdes-MaxBin2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.png",
                    "sizeInBytes": 112941
                },
                {
                    "id": "/a4/7c5c785b7f11dc6c98b083bca5d613/SPAdes-MaxBin2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.R",
                    "sizeInBytes": 4336
                },
                {
                    "id": "/a4/7c5c785b7f11dc6c98b083bca5d613/versions.yml",
                    "sizeInBytes": 86
                },
                {
                    "id": "/c5/4827cc93cde0b20721292a00c0971e/MEGAHIT-MetaBAT2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.png",
                    "sizeInBytes": 145991
                },
                {
                    "id": "/c5/4827cc93cde0b20721292a00c0971e/MEGAHIT-MetaBAT2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.R",
                    "sizeInBytes": 4784
                },
                {
                    "id": "/c5/4827cc93cde0b20721292a00c0971e/versions.yml",
                    "sizeInBytes": 86
                },
                {
                    "id": "/69/5f870daa570f9ee4579d708f3a3b68/SPAdes-MaxBin2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.png",
                    "sizeInBytes": 131829
                },
                {
                    "id": "/69/5f870daa570f9ee4579d708f3a3b68/SPAdes-MaxBin2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.R",
                    "sizeInBytes": 4666
                },
                {
                    "id": "/69/5f870daa570f9ee4579d708f3a3b68/versions.yml",
                    "sizeInBytes": 86
                },
                {
                    "id": "/ad/5892e7bcfa04be19c8e4a313a307c5/SPAdes-MetaBAT2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.png",
                    "sizeInBytes": 147571
                },
                {
                    "id": "/ad/5892e7bcfa04be19c8e4a313a307c5/SPAdes-MetaBAT2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.R",
                    "sizeInBytes": 4768
                },
                {
                    "id": "/ad/5892e7bcfa04be19c8e4a313a307c5/versions.yml",
                    "sizeInBytes": 86
                },
                {
                    "id": "/db/573ffa1e5e78f1a2a2941ce6340173/SPAdes-MetaBAT2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.png",
                    "sizeInBytes": 106203
                },
                {
                    "id": "/db/573ffa1e5e78f1a2a2941ce6340173/SPAdes-MetaBAT2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.R",
                    "sizeInBytes": 4463
                },
                {
                    "id": "/db/573ffa1e5e78f1a2a2941ce6340173/versions.yml",
                    "sizeInBytes": 86
                },
                {
                    "id": "/b5/a1ee3f2ac4873500275e4261b8c40a/busco_summary.tsv",
                    "sizeInBytes": 1781
                },
                {
                    "id": "/b5/a1ee3f2ac4873500275e4261b8c40a/versions.yml",
                    "sizeInBytes": 77
                },
                {
                    "id": "/c1/f9762963534aab9eea70cf358c6bcd/collated_versions.yml",
                    "sizeInBytes": 3324
                },
                {
                    "id": "/88/e05321a3ea4e89fc6bd5050c765259/software_versions.yml",
                    "sizeInBytes": 1100
                },
                {
                    "id": "/88/e05321a3ea4e89fc6bd5050c765259/software_versions_mqc.yml",
                    "sizeInBytes": 6315
                },
                {
                    "id": "/88/e05321a3ea4e89fc6bd5050c765259/versions.yml",
                    "sizeInBytes": 74
                },
                {
                    "id": "/38/267c4da019d070e70a33074290c93a/bin_summary.tsv",
                    "sizeInBytes": 6031
                },
                {
                    "id": "/38/267c4da019d070e70a33074290c93a/versions.yml",
                    "sizeInBytes": 66
                },
                {
                    "id": "/mag/assets/multiqc_config.yml",
                    "sizeInBytes": 1796
                },
                {
                    "id": "/6f/532c18d0a1139011180d991b5d2adc/workflow_summary_mqc.yaml",
                    "sizeInBytes": 3354
                },
                {
                    "id": "/0d/e596dfa2a9ea40d2a56cad1f4d12a0/multiqc_report.html",
                    "sizeInBytes": 1333122
                },
                {
                    "id": "/0d/e596dfa2a9ea40d2a56cad1f4d12a0/multiqc_data",
                    "sizeInBytes": 2220269
                },
                {
                    "id": "/0d/e596dfa2a9ea40d2a56cad1f4d12a0/multiqc_plots",
                    "sizeInBytes": 2676269
                },
                {
                    "id": "/0d/e596dfa2a9ea40d2a56cad1f4d12a0/versions.yml",
                    "sizeInBytes": 44
                }
            ]
        },
        "execution": {
            "makespanInSeconds": 4104,
            "executedAt": "2023-03-21T20:50:18-10:00",
            "tasks": [
                {
                    "id": "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_BUILD_1",
                    "runtimeInSeconds": 1.0,
                    "command": {
                        "program": "mkdir bowtie\n    bowtie2-build --threads 1 GCA_002596845.1_ASM259684v1_genomic.fna.gz \"bt2_index_base\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BOWTIE2_PHIX_REMOVAL_BUILD\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 43.3,
                    "readBytes": 1425055,
                    "writtenBytes": 8406730,
                    "memoryInBytes": 2723840
                },
                {
                    "id": "NFCORE_MAG.MAG.KRAKEN2_DB_PREPARATION_3",
                    "runtimeInSeconds": 0.163,
                    "command": {
                        "program": "mkdir db_tmp\n    tar -xf \"minigut_kraken.tgz\" -C db_tmp\n    mkdir database\n    mv `find db_tmp/ -name \"*.k2d\"` database/\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:KRAKEN2_DB_PREPARATION\":\n        tar: $(tar --version 2>&1 | sed -n 1p | sed 's/tar (GNU tar) //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 25.5,
                    "readBytes": 3321149,
                    "writtenBytes": 6316473,
                    "memoryInBytes": 3018752
                },
                {
                    "id": "NFCORE_MAG.MAG.CENTRIFUGE_DB_PREPARATION_4",
                    "runtimeInSeconds": 0.309,
                    "command": {
                        "program": "tar -xf \"minigut_cf.tar.gz\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:CENTRIFUGE_DB_PREPARATION\":\n        tar: $(tar --version 2>&1 | sed -n 1p | sed 's/tar (GNU tar) //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 55.9,
                    "readBytes": 11101848,
                    "writtenBytes": 18397780,
                    "memoryInBytes": 6938624
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION_2",
                    "runtimeInSeconds": 0.596,
                    "command": {
                        "program": "mkdir buscodb\n    tar -xf bacteria_odb10.2020-03-06.tar.gz -C buscodb\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_DB_PREPARATION\":\n        tar: $(tar --version 2>&1 | sed -n 1p | sed 's/tar (GNU tar) //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 77.2,
                    "readBytes": 33230021,
                    "writtenBytes": 53915501,
                    "memoryInBytes": 6909952
                },
                {
                    "id": "NFCORE_MAG.MAG.FASTP_7",
                    "runtimeInSeconds": 6.0,
                    "command": {
                        "program": "[ ! -f  test_minigut_sample2_1.fastq.gz ] && ln -s test_minigut_sample2_R1.fastq.gz test_minigut_sample2_1.fastq.gz\n        [ ! -f  test_minigut_sample2_2.fastq.gz ] && ln -s test_minigut_sample2_R2.fastq.gz test_minigut_sample2_2.fastq.gz\n        fastp \\\n            --in1 test_minigut_sample2_1.fastq.gz \\\n            --in2 test_minigut_sample2_2.fastq.gz \\\n            --out1 test_minigut_sample2_1.trim.fastq.gz \\\n            --out2 test_minigut_sample2_2.trim.fastq.gz \\\n            --json test_minigut_sample2.fastp.json \\\n            --html test_minigut_sample2.fastp.html \\\n             \\\n             \\\n            --thread 1 \\\n            --detect_adapter_for_pe \\\n            -q 15 --cut_front --cut_tail --cut_mean_quality 15 --length_required 15 \\\n            2> test_minigut_sample2.fastp.log\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:FASTP\":\n            fastp: $(fastp --version 2>&1 | sed -e \"s/fastp //g\")\n        END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 88.7,
                    "readBytes": 11897551,
                    "writtenBytes": 4119029,
                    "memoryInBytes": 1169448960
                },
                {
                    "id": "NFCORE_MAG.MAG.FASTQC_RAW_8",
                    "runtimeInSeconds": 22.0,
                    "command": {
                        "program": "[ ! -f  test_minigut_sample2_1.fastq.gz ] && ln -s test_minigut_sample2_R1.fastq.gz test_minigut_sample2_1.fastq.gz\n        [ ! -f  test_minigut_sample2_2.fastq.gz ] && ln -s test_minigut_sample2_R2.fastq.gz test_minigut_sample2_2.fastq.gz\n        fastqc --quiet --threads 1 test_minigut_sample2_1.fastq.gz test_minigut_sample2_2.fastq.gz\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:FASTQC_RAW\":\n            fastqc: $( fastqc --version | sed -e \"s/FastQC v//g\" )\n        END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 90.2,
                    "readBytes": 24927385,
                    "writtenBytes": 3173505,
                    "memoryInBytes": 216264704
                },
                {
                    "id": "NFCORE_MAG.MAG.FASTQC_RAW_5",
                    "runtimeInSeconds": 20.0,
                    "command": {
                        "program": "[ ! -f  test_minigut_1.fastq.gz ] && ln -s test_minigut_R1.fastq.gz test_minigut_1.fastq.gz\n        [ ! -f  test_minigut_2.fastq.gz ] && ln -s test_minigut_R2.fastq.gz test_minigut_2.fastq.gz\n        fastqc --quiet --threads 1 test_minigut_1.fastq.gz test_minigut_2.fastq.gz\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:FASTQC_RAW\":\n            fastqc: $( fastqc --version | sed -e \"s/FastQC v//g\" )\n        END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 93.7,
                    "readBytes": 28526247,
                    "writtenBytes": 3633598,
                    "memoryInBytes": 288858112
                },
                {
                    "id": "NFCORE_MAG.MAG.FASTP_6",
                    "runtimeInSeconds": 9.0,
                    "command": {
                        "program": "[ ! -f  test_minigut_1.fastq.gz ] && ln -s test_minigut_R1.fastq.gz test_minigut_1.fastq.gz\n        [ ! -f  test_minigut_2.fastq.gz ] && ln -s test_minigut_R2.fastq.gz test_minigut_2.fastq.gz\n        fastp \\\n            --in1 test_minigut_1.fastq.gz \\\n            --in2 test_minigut_2.fastq.gz \\\n            --out1 test_minigut_1.trim.fastq.gz \\\n            --out2 test_minigut_2.trim.fastq.gz \\\n            --json test_minigut.fastp.json \\\n            --html test_minigut.fastp.html \\\n             \\\n             \\\n            --thread 1 \\\n            --detect_adapter_for_pe \\\n            -q 15 --cut_front --cut_tail --cut_mean_quality 15 --length_required 15 \\\n            2> test_minigut.fastp.log\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:FASTP\":\n            fastp: $(fastp --version 2>&1 | sed -e \"s/fastp //g\")\n        END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 90.8,
                    "readBytes": 23570167,
                    "writtenBytes": 7447928,
                    "memoryInBytes": 1216315392
                },
                {
                    "id": "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_9",
                    "runtimeInSeconds": 25.0,
                    "command": {
                        "program": "bowtie2 -p 1                 -x bt2_index_base                 -1 \"test_minigut_sample2_1.trim.fastq.gz\" -2 \"test_minigut_sample2_2.trim.fastq.gz\"                                  --un-conc-gz test_minigut_sample2.phix_removed.unmapped_%.fastq.gz                 --al-conc-gz test_minigut_sample2.phix_removed.mapped_%.fastq.gz                 1> /dev/null                 2> test_minigut_sample2.phix_removed.bowtie2.log\n        if [ N = \"Y\" ] ; then\n            gunzip -c test_minigut_sample2.phix_removed.mapped_1.fastq.gz | awk '{if(NR%4==1) print substr($0, 2)}' | LC_ALL=C sort > test_minigut_sample2.phix_removed.mapped_1.read_ids.txt\n            gunzip -c test_minigut_sample2.phix_removed.mapped_2.fastq.gz | awk '{if(NR%4==1) print substr($0, 2)}' | LC_ALL=C sort > test_minigut_sample2.phix_removed.mapped_2.read_ids.txt\n        fi\n        rm -f test_minigut_sample2.phix_removed.mapped_*.fastq.gz\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:BOWTIE2_PHIX_REMOVAL_ALIGN\":\n            bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 81.0,
                    "readBytes": 63248137,
                    "writtenBytes": 71049273,
                    "memoryInBytes": 40521728
                },
                {
                    "id": "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN_10",
                    "runtimeInSeconds": 45.0,
                    "command": {
                        "program": "bowtie2 -p 1                 -x bt2_index_base                 -1 \"test_minigut_1.trim.fastq.gz\" -2 \"test_minigut_2.trim.fastq.gz\"                                  --un-conc-gz test_minigut.phix_removed.unmapped_%.fastq.gz                 --al-conc-gz test_minigut.phix_removed.mapped_%.fastq.gz                 1> /dev/null                 2> test_minigut.phix_removed.bowtie2.log\n        if [ N = \"Y\" ] ; then\n            gunzip -c test_minigut.phix_removed.mapped_1.fastq.gz | awk '{if(NR%4==1) print substr($0, 2)}' | LC_ALL=C sort > test_minigut.phix_removed.mapped_1.read_ids.txt\n            gunzip -c test_minigut.phix_removed.mapped_2.fastq.gz | awk '{if(NR%4==1) print substr($0, 2)}' | LC_ALL=C sort > test_minigut.phix_removed.mapped_2.read_ids.txt\n        fi\n        rm -f test_minigut.phix_removed.mapped_*.fastq.gz\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:BOWTIE2_PHIX_REMOVAL_ALIGN\":\n            bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 86.9,
                    "readBytes": 101614465,
                    "writtenBytes": 121406417,
                    "memoryInBytes": 40042496
                },
                {
                    "id": "NFCORE_MAG.MAG.KRAKEN2_14",
                    "runtimeInSeconds": 2.0,
                    "command": {
                        "program": "kraken2         --report-zero-counts         --threads 1         --db database         --report kraken2_report.txt         --paired \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\"         > kraken2.kraken\n    cat kraken2.kraken | cut -f 2,3 > results.krona\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:KRAKEN2\":\n        kraken2: $(echo $(kraken2 --version 2>&1) | sed 's/^.*Kraken version //' | sed 's/ Copyright.*//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 55.4,
                    "readBytes": 22237875,
                    "writtenBytes": 2775191,
                    "memoryInBytes": 35938304
                },
                {
                    "id": "NFCORE_MAG.MAG.FASTQC_TRIMMED_13",
                    "runtimeInSeconds": 21.0,
                    "command": {
                        "program": "[ ! -f  test_minigut_sample2.trimmed_1.fastq.gz ] && ln -s test_minigut_sample2.phix_removed.unmapped_1.fastq.gz test_minigut_sample2.trimmed_1.fastq.gz\n        [ ! -f  test_minigut_sample2.trimmed_2.fastq.gz ] && ln -s test_minigut_sample2.phix_removed.unmapped_2.fastq.gz test_minigut_sample2.trimmed_2.fastq.gz\n        fastqc --quiet --threads 1 test_minigut_sample2.trimmed_1.fastq.gz test_minigut_sample2.trimmed_2.fastq.gz\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:FASTQC_TRIMMED\":\n            fastqc: $( fastqc --version | sed -e \"s/FastQC v//g\" )\n        END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 90.3,
                    "readBytes": 24824794,
                    "writtenBytes": 3230841,
                    "memoryInBytes": 275935232
                },
                {
                    "id": "NFCORE_MAG.MAG.CENTRIFUGE_12",
                    "runtimeInSeconds": 4.0,
                    "command": {
                        "program": "centrifuge -x \"minigut_cf\"         -p 1         --report-file report.txt         -S results.txt         -1 \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\"\n    centrifuge-kreport -x \"minigut_cf\" results.txt > kreport.txt\n    cat results.txt | cut -f 1,3 > results.krona\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:CENTRIFUGE\":\n        centrifuge: $(centrifuge --version | sed -n 1p | sed 's/^.*centrifuge-class version //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 54.3,
                    "readBytes": 31009014,
                    "writtenBytes": 2731364,
                    "memoryInBytes": 39555072
                },
                {
                    "id": "NFCORE_MAG.MAG.SPADES_11",
                    "runtimeInSeconds": 86.0,
                    "command": {
                        "program": "metaspades.py                          --threads \"1\"             --memory 6             --pe1-1 test_minigut_sample2.phix_removed.unmapped_1.fastq.gz             --pe1-2 test_minigut_sample2.phix_removed.unmapped_2.fastq.gz             -o spades\n        mv spades/assembly_graph_with_scaffolds.gfa SPAdes-test_minigut_sample2_graph.gfa\n        mv spades/scaffolds.fasta SPAdes-test_minigut_sample2_scaffolds.fasta\n        mv spades/contigs.fasta SPAdes-test_minigut_sample2_contigs.fasta\n        mv spades/spades.log SPAdes-test_minigut_sample2.log\n        gzip \"SPAdes-test_minigut_sample2_contigs.fasta\"\n        gzip \"SPAdes-test_minigut_sample2_graph.gfa\"\n        gzip -c \"SPAdes-test_minigut_sample2_scaffolds.fasta\" > \"SPAdes-test_minigut_sample2_scaffolds.fasta.gz\"\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:SPADES\":\n            python: $(python --version 2>&1 | sed 's/Python //g')\n            metaspades: $(metaspades.py --version | sed \"s/SPAdes genome assembler v//; s/ \\[.*//\")\n        END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 93.2,
                    "readBytes": 121905258,
                    "writtenBytes": 601348224,
                    "memoryInBytes": 157962240
                },
                {
                    "id": "NFCORE_MAG.MAG.MEGAHIT_15",
                    "runtimeInSeconds": 98.0,
                    "command": {
                        "program": "megahit  -t \"1\" -m 6442450944 -1 \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\" -o MEGAHIT --out-prefix \"MEGAHIT-test_minigut_sample2\"\n        gzip -c \"MEGAHIT/MEGAHIT-test_minigut_sample2.contigs.fa\" > \"MEGAHIT/MEGAHIT-test_minigut_sample2.contigs.fa.gz\"\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:MEGAHIT\":\n            megahit: $(echo $(megahit -v 2>&1) | sed 's/MEGAHIT v//')\n        END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 95.5,
                    "readBytes": 649154642,
                    "writtenBytes": 87885657,
                    "memoryInBytes": 323170304
                },
                {
                    "id": "NFCORE_MAG.MAG.CENTRIFUGE_17",
                    "runtimeInSeconds": 7.0,
                    "command": {
                        "program": "centrifuge -x \"minigut_cf\"         -p 1         --report-file report.txt         -S results.txt         -1 \"test_minigut.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut.phix_removed.unmapped_2.fastq.gz\"\n    centrifuge-kreport -x \"minigut_cf\" results.txt > kreport.txt\n    cat results.txt | cut -f 1,3 > results.krona\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:CENTRIFUGE\":\n        centrifuge: $(centrifuge --version | sed -n 1p | sed 's/^.*centrifuge-class version //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 67.5,
                    "readBytes": 46175709,
                    "writtenBytes": 5848868,
                    "memoryInBytes": 39743488
                },
                {
                    "id": "NFCORE_MAG.MAG.SPADES_19",
                    "runtimeInSeconds": 114.0,
                    "command": {
                        "program": "metaspades.py                          --threads \"1\"             --memory 6             --pe1-1 test_minigut.phix_removed.unmapped_1.fastq.gz             --pe1-2 test_minigut.phix_removed.unmapped_2.fastq.gz             -o spades\n        mv spades/assembly_graph_with_scaffolds.gfa SPAdes-test_minigut_graph.gfa\n        mv spades/scaffolds.fasta SPAdes-test_minigut_scaffolds.fasta\n        mv spades/contigs.fasta SPAdes-test_minigut_contigs.fasta\n        mv spades/spades.log SPAdes-test_minigut.log\n        gzip \"SPAdes-test_minigut_contigs.fasta\"\n        gzip \"SPAdes-test_minigut_graph.gfa\"\n        gzip -c \"SPAdes-test_minigut_scaffolds.fasta\" > \"SPAdes-test_minigut_scaffolds.fasta.gz\"\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:SPADES\":\n            python: $(python --version 2>&1 | sed 's/Python //g')\n            metaspades: $(metaspades.py --version | sed \"s/SPAdes genome assembler v//; s/ \\[.*//\")\n        END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 95.8,
                    "readBytes": 221623996,
                    "writtenBytes": 537789105,
                    "memoryInBytes": 206938112
                },
                {
                    "id": "NFCORE_MAG.MAG.KRAKEN2_18",
                    "runtimeInSeconds": 3.0,
                    "command": {
                        "program": "kraken2         --report-zero-counts         --threads 1         --db database         --report kraken2_report.txt         --paired \"test_minigut.phix_removed.unmapped_1.fastq.gz\" \"test_minigut.phix_removed.unmapped_2.fastq.gz\"         > kraken2.kraken\n    cat kraken2.kraken | cut -f 2,3 > results.krona\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:KRAKEN2\":\n        kraken2: $(echo $(kraken2 --version 2>&1) | sed 's/^.*Kraken version //' | sed 's/ Copyright.*//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 59.5,
                    "readBytes": 35430762,
                    "writtenBytes": 5247457,
                    "memoryInBytes": 34766848
                },
                {
                    "id": "NFCORE_MAG.MAG.FASTQC_TRIMMED_16",
                    "runtimeInSeconds": 23.0,
                    "command": {
                        "program": "[ ! -f  test_minigut.trimmed_1.fastq.gz ] && ln -s test_minigut.phix_removed.unmapped_1.fastq.gz test_minigut.trimmed_1.fastq.gz\n        [ ! -f  test_minigut.trimmed_2.fastq.gz ] && ln -s test_minigut.phix_removed.unmapped_2.fastq.gz test_minigut.trimmed_2.fastq.gz\n        fastqc --quiet --threads 1 test_minigut.trimmed_1.fastq.gz test_minigut.trimmed_2.fastq.gz\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:FASTQC_TRIMMED\":\n            fastqc: $( fastqc --version | sed -e \"s/FastQC v//g\" )\n        END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 90.9,
                    "readBytes": 28319619,
                    "writtenBytes": 3813370,
                    "memoryInBytes": 343523328
                },
                {
                    "id": "NFCORE_MAG.MAG.MEGAHIT_20",
                    "runtimeInSeconds": 139.0,
                    "command": {
                        "program": "megahit  -t \"1\" -m 6442450944 -1 \"test_minigut.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut.phix_removed.unmapped_2.fastq.gz\" -o MEGAHIT --out-prefix \"MEGAHIT-test_minigut\"\n        gzip -c \"MEGAHIT/MEGAHIT-test_minigut.contigs.fa\" > \"MEGAHIT/MEGAHIT-test_minigut.contigs.fa.gz\"\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:MEGAHIT\":\n            megahit: $(echo $(megahit -v 2>&1) | sed 's/MEGAHIT v//')\n        END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 96.6,
                    "readBytes": 734951284,
                    "writtenBytes": 141363273,
                    "memoryInBytes": 55246848
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_22",
                    "runtimeInSeconds": 3.0,
                    "command": {
                        "program": "mkdir bowtie\n    bowtie2-build --threads 1 SPAdes-test_minigut_sample2_scaffolds.fasta \"bt2_index_base\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_BUILD\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 74.4,
                    "readBytes": 9949727,
                    "writtenBytes": 11641365,
                    "memoryInBytes": 41099264
                },
                {
                    "id": "NFCORE_MAG.MAG.PRODIGAL_21",
                    "runtimeInSeconds": 11.0,
                    "command": {
                        "program": "pigz -cdf SPAdes-test_minigut_sample2_scaffolds.fasta | prodigal \\\n        -p meta \\\n        -f gff \\\n        -d \"test_minigut_sample2.fna\" \\\n        -o \"test_minigut_sample2.gff\" \\\n        -a \"test_minigut_sample2.faa\" \\\n        -s \"test_minigut_sample2_all.txt\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PRODIGAL\":\n        prodigal: $(prodigal -v 2>&1 | sed -n 's/Prodigal V\\(.*\\):.*/\\1/p')\n        pigz: $(pigz -V 2>&1 | sed 's/pigz //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 86.7,
                    "readBytes": 4342188,
                    "writtenBytes": 14456537,
                    "memoryInBytes": 55660544
                },
                {
                    "id": "NFCORE_MAG.MAG.QUAST_23",
                    "runtimeInSeconds": 14.417,
                    "command": {
                        "program": "metaquast.py --threads \"1\" --rna-finding --max-ref-number 0 -l \"SPAdes-test_minigut_sample2\" \"SPAdes-test_minigut_sample2_scaffolds.fasta\" -o \"QUAST\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 58.6,
                    "readBytes": 128685719,
                    "writtenBytes": 5171191,
                    "memoryInBytes": 297996288
                },
                {
                    "id": "NFCORE_MAG.MAG.QUAST_26",
                    "runtimeInSeconds": 7.271,
                    "command": {
                        "program": "metaquast.py --threads \"1\" --rna-finding --max-ref-number 0 -l \"MEGAHIT-test_minigut_sample2\" \"MEGAHIT-test_minigut_sample2.contigs.fa\" -o \"QUAST\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 86.4,
                    "readBytes": 95359662,
                    "writtenBytes": 4679327,
                    "memoryInBytes": 293314560
                },
                {
                    "id": "NFCORE_MAG.MAG.PRODIGAL_25",
                    "runtimeInSeconds": 4.0,
                    "command": {
                        "program": "pigz -cdf MEGAHIT-test_minigut_sample2.contigs.fa | prodigal \\\n        -p meta \\\n        -f gff \\\n        -d \"test_minigut_sample2.fna\" \\\n        -o \"test_minigut_sample2.gff\" \\\n        -a \"test_minigut_sample2.faa\" \\\n        -s \"test_minigut_sample2_all.txt\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PRODIGAL\":\n        prodigal: $(prodigal -v 2>&1 | sed -n 's/Prodigal V\\(.*\\):.*/\\1/p')\n        pigz: $(pigz -V 2>&1 | sed 's/pigz //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 87.5,
                    "readBytes": 1438572,
                    "writtenBytes": 4258078,
                    "memoryInBytes": 55271424
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_24",
                    "runtimeInSeconds": 1.0,
                    "command": {
                        "program": "mkdir bowtie\n    bowtie2-build --threads 1 MEGAHIT-test_minigut_sample2.contigs.fa \"bt2_index_base\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_BUILD\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 84.1,
                    "readBytes": 4142520,
                    "writtenBytes": 9442659,
                    "memoryInBytes": 28553216
                },
                {
                    "id": "NFCORE_MAG.MAG.QUAST_27",
                    "runtimeInSeconds": 10.862,
                    "command": {
                        "program": "metaquast.py --threads \"1\" --rna-finding --max-ref-number 0 -l \"SPAdes-test_minigut\" \"SPAdes-test_minigut_scaffolds.fasta\" -o \"QUAST\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 86.1,
                    "readBytes": 130712713,
                    "writtenBytes": 6101490,
                    "memoryInBytes": 94191616
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_29",
                    "runtimeInSeconds": 2.0,
                    "command": {
                        "program": "mkdir bowtie\n    bowtie2-build --threads 1 SPAdes-test_minigut_scaffolds.fasta \"bt2_index_base\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_BUILD\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 91.2,
                    "readBytes": 8505993,
                    "writtenBytes": 10874197,
                    "memoryInBytes": 34422784
                },
                {
                    "id": "NFCORE_MAG.MAG.PRODIGAL_28",
                    "runtimeInSeconds": 35.0,
                    "command": {
                        "program": "pigz -cdf SPAdes-test_minigut_scaffolds.fasta | prodigal \\\n        -p meta \\\n        -f gff \\\n        -d \"test_minigut.fna\" \\\n        -o \"test_minigut.gff\" \\\n        -a \"test_minigut.faa\" \\\n        -s \"test_minigut_all.txt\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PRODIGAL\":\n        prodigal: $(prodigal -v 2>&1 | sed -n 's/Prodigal V\\(.*\\):.*/\\1/p')\n        pigz: $(pigz -V 2>&1 | sed 's/pigz //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 94.5,
                    "readBytes": 3620277,
                    "writtenBytes": 9922522,
                    "memoryInBytes": 65024000
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD_32",
                    "runtimeInSeconds": 2.0,
                    "command": {
                        "program": "mkdir bowtie\n    bowtie2-build --threads 1 MEGAHIT-test_minigut.contigs.fa \"bt2_index_base\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_BUILD\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 89.0,
                    "readBytes": 8417065,
                    "writtenBytes": 10894333,
                    "memoryInBytes": 36511744
                },
                {
                    "id": "NFCORE_MAG.MAG.PRODIGAL_30",
                    "runtimeInSeconds": 27.0,
                    "command": {
                        "program": "pigz -cdf MEGAHIT-test_minigut.contigs.fa | prodigal \\\n        -p meta \\\n        -f gff \\\n        -d \"test_minigut.fna\" \\\n        -o \"test_minigut.gff\" \\\n        -a \"test_minigut.faa\" \\\n        -s \"test_minigut_all.txt\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PRODIGAL\":\n        prodigal: $(prodigal -v 2>&1 | sed -n 's/Prodigal V\\(.*\\):.*/\\1/p')\n        pigz: $(pigz -V 2>&1 | sed 's/pigz //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 93.8,
                    "readBytes": 3575814,
                    "writtenBytes": 9801136,
                    "memoryInBytes": 56995840
                },
                {
                    "id": "NFCORE_MAG.MAG.QUAST_31",
                    "runtimeInSeconds": 10.067,
                    "command": {
                        "program": "metaquast.py --threads \"1\" --rna-finding --max-ref-number 0 -l \"MEGAHIT-test_minigut\" \"MEGAHIT-test_minigut.contigs.fa\" -o \"QUAST\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 83.7,
                    "readBytes": 107529805,
                    "writtenBytes": 6133055,
                    "memoryInBytes": 294641664
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_34",
                    "runtimeInSeconds": 8.0,
                    "command": {
                        "program": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"SPAdes-test_minigut_sample2-test_minigut.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"SPAdes-test_minigut_sample2-test_minigut.bam\"\n    samtools index \"SPAdes-test_minigut_sample2-test_minigut.bam\"\n\n    if [ SPAdes-test_minigut_sample2-test_minigut = \"SPAdes-test_minigut_sample2-test_minigut_sample2\" ] ; then\n        mv \"SPAdes-test_minigut_sample2-test_minigut.bowtie2.log\" \"SPAdes-test_minigut_sample2.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 78.0,
                    "readBytes": 62523471,
                    "writtenBytes": 43891634,
                    "memoryInBytes": 75362304
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_33",
                    "runtimeInSeconds": 13.0,
                    "command": {
                        "program": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"SPAdes-test_minigut_sample2-test_minigut_sample2.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"SPAdes-test_minigut_sample2-test_minigut_sample2.bam\"\n    samtools index \"SPAdes-test_minigut_sample2-test_minigut_sample2.bam\"\n\n    if [ SPAdes-test_minigut_sample2-test_minigut_sample2 = \"SPAdes-test_minigut_sample2-test_minigut_sample2\" ] ; then\n        mv \"SPAdes-test_minigut_sample2-test_minigut_sample2.bowtie2.log\" \"SPAdes-test_minigut_sample2.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 84.1,
                    "readBytes": 44007976,
                    "writtenBytes": 28899426,
                    "memoryInBytes": 65974272
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_35",
                    "runtimeInSeconds": 8.0,
                    "command": {
                        "program": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"MEGAHIT-test_minigut_sample2-test_minigut_sample2.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam\"\n    samtools index \"MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam\"\n\n    if [ MEGAHIT-test_minigut_sample2-test_minigut_sample2 = \"MEGAHIT-test_minigut_sample2-test_minigut_sample2\" ] ; then\n        mv \"MEGAHIT-test_minigut_sample2-test_minigut_sample2.bowtie2.log\" \"MEGAHIT-test_minigut_sample2.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 82.2,
                    "readBytes": 39144327,
                    "writtenBytes": 25720419,
                    "memoryInBytes": 59961344
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_36",
                    "runtimeInSeconds": 7.0,
                    "command": {
                        "program": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"MEGAHIT-test_minigut_sample2-test_minigut.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"MEGAHIT-test_minigut_sample2-test_minigut.bam\"\n    samtools index \"MEGAHIT-test_minigut_sample2-test_minigut.bam\"\n\n    if [ MEGAHIT-test_minigut_sample2-test_minigut = \"MEGAHIT-test_minigut_sample2-test_minigut_sample2\" ] ; then\n        mv \"MEGAHIT-test_minigut_sample2-test_minigut.bowtie2.log\" \"MEGAHIT-test_minigut_sample2.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 83.0,
                    "readBytes": 60185325,
                    "writtenBytes": 43518433,
                    "memoryInBytes": 68321280
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_37",
                    "runtimeInSeconds": 4.0,
                    "command": {
                        "program": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"SPAdes-test_minigut-test_minigut_sample2.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"SPAdes-test_minigut-test_minigut_sample2.bam\"\n    samtools index \"SPAdes-test_minigut-test_minigut_sample2.bam\"\n\n    if [ SPAdes-test_minigut-test_minigut_sample2 = \"SPAdes-test_minigut-test_minigut\" ] ; then\n        mv \"SPAdes-test_minigut-test_minigut_sample2.bowtie2.log\" \"SPAdes-test_minigut.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 82.9,
                    "readBytes": 39124844,
                    "writtenBytes": 24493251,
                    "memoryInBytes": 57696256
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_38",
                    "runtimeInSeconds": 33.0,
                    "command": {
                        "program": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"SPAdes-test_minigut-test_minigut.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"SPAdes-test_minigut-test_minigut.bam\"\n    samtools index \"SPAdes-test_minigut-test_minigut.bam\"\n\n    if [ SPAdes-test_minigut-test_minigut = \"SPAdes-test_minigut-test_minigut\" ] ; then\n        mv \"SPAdes-test_minigut-test_minigut.bowtie2.log\" \"SPAdes-test_minigut.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 90.6,
                    "readBytes": 72782864,
                    "writtenBytes": 55001997,
                    "memoryInBytes": 76587008
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_39",
                    "runtimeInSeconds": 5.0,
                    "command": {
                        "program": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"MEGAHIT-test_minigut-test_minigut_sample2.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"MEGAHIT-test_minigut-test_minigut_sample2.bam\"\n    samtools index \"MEGAHIT-test_minigut-test_minigut_sample2.bam\"\n\n    if [ MEGAHIT-test_minigut-test_minigut_sample2 = \"MEGAHIT-test_minigut-test_minigut\" ] ; then\n        mv \"MEGAHIT-test_minigut-test_minigut_sample2.bowtie2.log\" \"MEGAHIT-test_minigut.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 84.2,
                    "readBytes": 39149584,
                    "writtenBytes": 24494176,
                    "memoryInBytes": 58449920
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN_40",
                    "runtimeInSeconds": 34.0,
                    "command": {
                        "program": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"MEGAHIT-test_minigut-test_minigut.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"MEGAHIT-test_minigut-test_minigut.bam\"\n    samtools index \"MEGAHIT-test_minigut-test_minigut.bam\"\n\n    if [ MEGAHIT-test_minigut-test_minigut = \"MEGAHIT-test_minigut-test_minigut\" ] ; then\n        mv \"MEGAHIT-test_minigut-test_minigut.bowtie2.log\" \"MEGAHIT-test_minigut.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 90.7,
                    "readBytes": 70026619,
                    "writtenBytes": 52232948,
                    "memoryInBytes": 77393920
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_44",
                    "runtimeInSeconds": 1.0,
                    "command": {
                        "program": "export OMP_NUM_THREADS=1\n\n    jgi_summarize_bam_contig_depths \\\n        --outputDepth MEGAHIT-test_minigut-depth.txt \\\n         \\\n        MEGAHIT-test_minigut-test_minigut_sample2.bam MEGAHIT-test_minigut-test_minigut.bam\n\n    bgzip --threads 1 MEGAHIT-test_minigut-depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 75.0,
                    "readBytes": 9645095,
                    "writtenBytes": 19589,
                    "memoryInBytes": 2883584
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_42",
                    "runtimeInSeconds": 3.0,
                    "command": {
                        "program": "export OMP_NUM_THREADS=1\n\n    jgi_summarize_bam_contig_depths \\\n        --outputDepth MEGAHIT-test_minigut_sample2-depth.txt \\\n         \\\n        MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam MEGAHIT-test_minigut_sample2-test_minigut.bam\n\n    bgzip --threads 1 MEGAHIT-test_minigut_sample2-depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 89.8,
                    "readBytes": 10692143,
                    "writtenBytes": 75355,
                    "memoryInBytes": 15638528
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_43",
                    "runtimeInSeconds": 1.0,
                    "command": {
                        "program": "export OMP_NUM_THREADS=1\n\n    jgi_summarize_bam_contig_depths \\\n        --outputDepth SPAdes-test_minigut-depth.txt \\\n         \\\n        SPAdes-test_minigut-test_minigut_sample2.bam SPAdes-test_minigut-test_minigut.bam\n\n    bgzip --threads 1 SPAdes-test_minigut-depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 83.4,
                    "readBytes": 9646788,
                    "writtenBytes": 9117,
                    "memoryInBytes": 15355904
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS_41",
                    "runtimeInSeconds": 6.0,
                    "command": {
                        "program": "export OMP_NUM_THREADS=1\n\n    jgi_summarize_bam_contig_depths \\\n        --outputDepth SPAdes-test_minigut_sample2-depth.txt \\\n         \\\n        SPAdes-test_minigut_sample2-test_minigut.bam SPAdes-test_minigut_sample2-test_minigut_sample2.bam\n\n    bgzip --threads 1 SPAdes-test_minigut_sample2-depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 92.3,
                    "readBytes": 11236182,
                    "writtenBytes": 404597,
                    "memoryInBytes": 16302080
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_46",
                    "runtimeInSeconds": 0.0,
                    "command": {
                        "program": "gunzip -f MEGAHIT-test_minigut-depth.txt.gz\n    bioawk -t '{ { if (NR > 1) { { print $1, $3 } } } }' MEGAHIT-test_minigut-depth.txt > test_minigut_mb2_depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:CONVERT_DEPTHS\":\n        bioawk: $(bioawk --version | cut -f 3 -d ' ' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 33.8,
                    "readBytes": 61859,
                    "writtenBytes": 17430,
                    "memoryInBytes": 2977792
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_45",
                    "runtimeInSeconds": 1.0,
                    "command": {
                        "program": "gzip -d -f MEGAHIT-test_minigut-depth.txt.gz\n\n    metabat2 \\\n        -m 1500 --unbinned --seed 1 \\\n        -i MEGAHIT-test_minigut.contigs.fa \\\n        -a MEGAHIT-test_minigut-depth.txt \\\n        -t 1 \\\n        --saveCls \\\n        -o metabat2/MEGAHIT-MetaBAT2-test_minigut\n\n    mv metabat2/MEGAHIT-MetaBAT2-test_minigut MEGAHIT-MetaBAT2-test_minigut.tsv\n    mv metabat2 bins\n\n    gzip MEGAHIT-MetaBAT2-test_minigut.tsv\n    find ./bins/ -name \"*.fa\" -type f | xargs -t -n 1 bgzip -@ 1\n    find ./bins/ -name \"*[lowDepth,tooShort,unbinned].fa.gz\" -type f -exec mv {} . \\;\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_METABAT2\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 55.5,
                    "readBytes": 3708508,
                    "writtenBytes": 2340403,
                    "memoryInBytes": 3727360
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_47",
                    "runtimeInSeconds": 0.0,
                    "command": {
                        "program": "gunzip -f MEGAHIT-test_minigut_sample2-depth.txt.gz\n    bioawk -t '{ { if (NR > 1) { { print $1, $3 } } } }' MEGAHIT-test_minigut_sample2-depth.txt > test_minigut_sample2_mb2_depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:CONVERT_DEPTHS\":\n        bioawk: $(bioawk --version | cut -f 3 -d ' ' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 32.0,
                    "readBytes": 117619,
                    "writtenBytes": 77437,
                    "memoryInBytes": 2973696
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_48",
                    "runtimeInSeconds": 1.0,
                    "command": {
                        "program": "gzip -d -f MEGAHIT-test_minigut_sample2-depth.txt.gz\n\n    metabat2 \\\n        -m 1500 --unbinned --seed 1 \\\n        -i MEGAHIT-test_minigut_sample2.contigs.fa \\\n        -a MEGAHIT-test_minigut_sample2-depth.txt \\\n        -t 1 \\\n        --saveCls \\\n        -o metabat2/MEGAHIT-MetaBAT2-test_minigut_sample2\n\n    mv metabat2/MEGAHIT-MetaBAT2-test_minigut_sample2 MEGAHIT-MetaBAT2-test_minigut_sample2.tsv\n    mv metabat2 bins\n\n    gzip MEGAHIT-MetaBAT2-test_minigut_sample2.tsv\n    find ./bins/ -name \"*.fa\" -type f | xargs -t -n 1 bgzip -@ 1\n    find ./bins/ -name \"*[lowDepth,tooShort,unbinned].fa.gz\" -type f -exec mv {} . \\;\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_METABAT2\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 32.1,
                    "readBytes": 1633120,
                    "writtenBytes": 916933,
                    "memoryInBytes": 2895872
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_50",
                    "runtimeInSeconds": 0.0,
                    "command": {
                        "program": "gunzip -f SPAdes-test_minigut-depth.txt.gz\n    bioawk -t '{ { if (NR > 1) { { print $1, $3 } } } }' SPAdes-test_minigut-depth.txt > test_minigut_mb2_depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:CONVERT_DEPTHS\":\n        bioawk: $(bioawk --version | cut -f 3 -d ' ' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 32.9,
                    "readBytes": 51394,
                    "writtenBytes": 8603,
                    "memoryInBytes": 2969600
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_49",
                    "runtimeInSeconds": 1.0,
                    "command": {
                        "program": "gzip -d -f SPAdes-test_minigut-depth.txt.gz\n\n    metabat2 \\\n        -m 1500 --unbinned --seed 1 \\\n        -i SPAdes-test_minigut_scaffolds.fasta \\\n        -a SPAdes-test_minigut-depth.txt \\\n        -t 1 \\\n        --saveCls \\\n        -o metabat2/SPAdes-MetaBAT2-test_minigut\n\n    mv metabat2/SPAdes-MetaBAT2-test_minigut SPAdes-MetaBAT2-test_minigut.tsv\n    mv metabat2 bins\n\n    gzip SPAdes-MetaBAT2-test_minigut.tsv\n    find ./bins/ -name \"*.fa\" -type f | xargs -t -n 1 bgzip -@ 1\n    find ./bins/ -name \"*[lowDepth,tooShort,unbinned].fa.gz\" -type f -exec mv {} . \\;\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_METABAT2\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 53.8,
                    "readBytes": 3703055,
                    "writtenBytes": 2334094,
                    "memoryInBytes": 8912896
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS_52",
                    "runtimeInSeconds": 0.0,
                    "command": {
                        "program": "gunzip -f SPAdes-test_minigut_sample2-depth.txt.gz\n    bioawk -t '{ { if (NR > 1) { { print $1, $3 } } } }' SPAdes-test_minigut_sample2-depth.txt > test_minigut_sample2_mb2_depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:CONVERT_DEPTHS\":\n        bioawk: $(bioawk --version | cut -f 3 -d ' ' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 106.7,
                    "readBytes": 446824,
                    "writtenBytes": 544292,
                    "memoryInBytes": 2891776
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2_51",
                    "runtimeInSeconds": 0.0,
                    "command": {
                        "program": "gzip -d -f SPAdes-test_minigut_sample2-depth.txt.gz\n\n    metabat2 \\\n        -m 1500 --unbinned --seed 1 \\\n        -i SPAdes-test_minigut_sample2_scaffolds.fasta \\\n        -a SPAdes-test_minigut_sample2-depth.txt \\\n        -t 1 \\\n        --saveCls \\\n        -o metabat2/SPAdes-MetaBAT2-test_minigut_sample2\n\n    mv metabat2/SPAdes-MetaBAT2-test_minigut_sample2 SPAdes-MetaBAT2-test_minigut_sample2.tsv\n    mv metabat2 bins\n\n    gzip SPAdes-MetaBAT2-test_minigut_sample2.tsv\n    find ./bins/ -name \"*.fa\" -type f | xargs -t -n 1 bgzip -@ 1\n    find ./bins/ -name \"*[lowDepth,tooShort,unbinned].fa.gz\" -type f -exec mv {} . \\;\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_METABAT2\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 69.6,
                    "readBytes": 5457969,
                    "writtenBytes": 3136196,
                    "memoryInBytes": 2891776
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.MAXBIN2_53",
                    "runtimeInSeconds": 15.0,
                    "command": {
                        "program": "mkdir input/ && mv MEGAHIT-test_minigut.contigs.fa input/\n    run_MaxBin.pl \\\n        -contig input/MEGAHIT-test_minigut.contigs.fa \\\n        -abund test_minigut_mb2_depth.txt \\\n        -thread 1 \\\n         \\\n        -out MEGAHIT-MaxBin2-test_minigut\n\n    gzip *.fasta *.noclass *.tooshort *log *.marker\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAXBIN2\":\n        maxbin2: $( run_MaxBin.pl -v | head -n 1 | sed 's/MaxBin //' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 81.7,
                    "readBytes": 125360886,
                    "writtenBytes": 6676392,
                    "memoryInBytes": 47374336
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_56",
                    "runtimeInSeconds": 0.046,
                    "command": {
                        "program": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 30.7,
                    "readBytes": 326058,
                    "writtenBytes": 740862,
                    "memoryInBytes": 0
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_55",
                    "runtimeInSeconds": 0.079,
                    "command": {
                        "program": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 53.7,
                    "readBytes": 353344,
                    "writtenBytes": 827437,
                    "memoryInBytes": 2949120
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_54",
                    "runtimeInSeconds": 10.0,
                    "command": {
                        "program": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py MEGAHIT-MetaBAT2-test_minigut.unbinned.fa.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 27.8,
                    "readBytes": 12173209,
                    "writtenBytes": 227375,
                    "memoryInBytes": 69177344
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.MAXBIN2_57",
                    "runtimeInSeconds": 4.235,
                    "command": {
                        "program": "mkdir input/ && mv MEGAHIT-test_minigut_sample2.contigs.fa input/\n    run_MaxBin.pl \\\n        -contig input/MEGAHIT-test_minigut_sample2.contigs.fa \\\n        -abund test_minigut_sample2_mb2_depth.txt \\\n        -thread 1 \\\n         \\\n        -out MEGAHIT-MaxBin2-test_minigut_sample2\n\n    gzip *.fasta *.noclass *.tooshort *log *.marker\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAXBIN2\":\n        maxbin2: $( run_MaxBin.pl -v | head -n 1 | sed 's/MaxBin //' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 0.0,
                    "readBytes": 0,
                    "writtenBytes": 0,
                    "memoryInBytes": 0
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_58",
                    "runtimeInSeconds": 2.0,
                    "command": {
                        "program": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.fa.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 87.7,
                    "readBytes": 12018783,
                    "writtenBytes": 74084,
                    "memoryInBytes": 55529472
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.MAXBIN2_59",
                    "runtimeInSeconds": 14.0,
                    "command": {
                        "program": "mkdir input/ && mv SPAdes-test_minigut_scaffolds.fasta input/\n    run_MaxBin.pl \\\n        -contig input/SPAdes-test_minigut_scaffolds.fasta \\\n        -abund test_minigut_mb2_depth.txt \\\n        -thread 1 \\\n         \\\n        -out SPAdes-MaxBin2-test_minigut\n\n    gzip *.fasta *.noclass *.tooshort *log *.marker\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAXBIN2\":\n        maxbin2: $( run_MaxBin.pl -v | head -n 1 | sed 's/MaxBin //' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 87.6,
                    "readBytes": 130938230,
                    "writtenBytes": 6911819,
                    "memoryInBytes": 210087936
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_60",
                    "runtimeInSeconds": 3.0,
                    "command": {
                        "program": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py SPAdes-MetaBAT2-test_minigut.unbinned.fa.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 86.0,
                    "readBytes": 12148648,
                    "writtenBytes": 203237,
                    "memoryInBytes": 52236288
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_61",
                    "runtimeInSeconds": 0.058,
                    "command": {
                        "program": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 37.7,
                    "readBytes": 329142,
                    "writtenBytes": 750765,
                    "memoryInBytes": 0
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_62",
                    "runtimeInSeconds": 0.094,
                    "command": {
                        "program": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 56.1,
                    "readBytes": 363021,
                    "writtenBytes": 858290,
                    "memoryInBytes": 4497408
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.MAXBIN2_63",
                    "runtimeInSeconds": 8.0,
                    "command": {
                        "program": "mkdir input/ && mv SPAdes-test_minigut_sample2_scaffolds.fasta input/\n    run_MaxBin.pl \\\n        -contig input/SPAdes-test_minigut_sample2_scaffolds.fasta \\\n        -abund test_minigut_sample2_mb2_depth.txt \\\n        -thread 1 \\\n         \\\n        -out SPAdes-MaxBin2-test_minigut_sample2\n\n    gzip *.fasta *.noclass *.tooshort *log *.marker\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAXBIN2\":\n        maxbin2: $( run_MaxBin.pl -v | head -n 1 | sed 's/MaxBin //' )\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 89.4,
                    "readBytes": 58179172,
                    "writtenBytes": 3947867,
                    "memoryInBytes": 35532800
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_64",
                    "runtimeInSeconds": 4.0,
                    "command": {
                        "program": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py SPAdes-MetaBAT2-test_minigut_sample2.unbinned.fa.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 91.4,
                    "readBytes": 12323065,
                    "writtenBytes": 374696,
                    "memoryInBytes": 69259264
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT_65",
                    "runtimeInSeconds": 0.057,
                    "command": {
                        "program": "if [ -n \"MEGAHIT-MaxBin2-test_minigut.001.fasta.gz MEGAHIT-MaxBin2-test_minigut.002.fasta.gz\" ]\n    then\n        for file in MEGAHIT-MaxBin2-test_minigut.001.fasta.gz MEGAHIT-MaxBin2-test_minigut.002.fasta.gz; do\n            [[ ${file} =~ (.*).fasta.gz ]];\n            bin=\"${BASH_REMATCH[1]}\"\n            mv ${file} ${bin}.fa.gz\n        done\n    fi",
                        "arguments": []
                    },
                    "avgCPU": 35.0,
                    "readBytes": 59670,
                    "writtenBytes": 218,
                    "memoryInBytes": 0
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_66",
                    "runtimeInSeconds": 1.0,
                    "command": {
                        "program": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py MEGAHIT-MaxBin2-test_minigut.noclass.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 91.7,
                    "readBytes": 11945881,
                    "writtenBytes": 566,
                    "memoryInBytes": 59088896
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_67",
                    "runtimeInSeconds": 0.016,
                    "command": {
                        "program": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 94.1,
                    "readBytes": 104316,
                    "writtenBytes": 28579,
                    "memoryInBytes": 0
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_68",
                    "runtimeInSeconds": 0.035,
                    "command": {
                        "program": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 64.0,
                    "readBytes": 101410,
                    "writtenBytes": 19107,
                    "memoryInBytes": 2871296
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_69",
                    "runtimeInSeconds": 0.037,
                    "command": {
                        "program": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 77.1,
                    "readBytes": 97801,
                    "writtenBytes": 7529,
                    "memoryInBytes": 3047424
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_70",
                    "runtimeInSeconds": 0.055,
                    "command": {
                        "program": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 57.7,
                    "readBytes": 96740,
                    "writtenBytes": 4279,
                    "memoryInBytes": 2998272
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT_71",
                    "runtimeInSeconds": 0.013,
                    "command": {
                        "program": "if [ -n \"SPAdes-MaxBin2-test_minigut.001.fasta.gz SPAdes-MaxBin2-test_minigut.002.fasta.gz\" ]\n    then\n        for file in SPAdes-MaxBin2-test_minigut.001.fasta.gz SPAdes-MaxBin2-test_minigut.002.fasta.gz; do\n            [[ ${file} =~ (.*).fasta.gz ]];\n            bin=\"${BASH_REMATCH[1]}\"\n            mv ${file} ${bin}.fa.gz\n        done\n    fi",
                        "arguments": []
                    },
                    "avgCPU": 72.7,
                    "readBytes": 59642,
                    "writtenBytes": 200,
                    "memoryInBytes": 0
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_72",
                    "runtimeInSeconds": 2.0,
                    "command": {
                        "program": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py SPAdes-MaxBin2-test_minigut.noclass.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 89.3,
                    "readBytes": 11945881,
                    "writtenBytes": 564,
                    "memoryInBytes": 57565184
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_74",
                    "runtimeInSeconds": 0.016,
                    "command": {
                        "program": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 64.6,
                    "readBytes": 110484,
                    "writtenBytes": 48317,
                    "memoryInBytes": 0
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_73",
                    "runtimeInSeconds": 0.017,
                    "command": {
                        "program": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 62.3,
                    "readBytes": 121973,
                    "writtenBytes": 87112,
                    "memoryInBytes": 0
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT_75",
                    "runtimeInSeconds": 0.011,
                    "command": {
                        "program": "if [ -n \"SPAdes-MaxBin2-test_minigut_sample2.001.fasta.gz\" ]\n    then\n        for file in SPAdes-MaxBin2-test_minigut_sample2.001.fasta.gz; do\n            [[ ${file} =~ (.*).fasta.gz ]];\n            bin=\"${BASH_REMATCH[1]}\"\n            mv ${file} ${bin}.fa.gz\n        done\n    fi",
                        "arguments": []
                    },
                    "avgCPU": 58.5,
                    "readBytes": 51896,
                    "writtenBytes": 209,
                    "memoryInBytes": 0
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA_76",
                    "runtimeInSeconds": 3.0,
                    "command": {
                        "program": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py SPAdes-MaxBin2-test_minigut_sample2.noclass.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 89.4,
                    "readBytes": 12080840,
                    "writtenBytes": 136397,
                    "memoryInBytes": 55390208
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_78",
                    "runtimeInSeconds": 0.016,
                    "command": {
                        "program": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 139.1,
                    "readBytes": 97832,
                    "writtenBytes": 7554,
                    "memoryInBytes": 0
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_77",
                    "runtimeInSeconds": 0.016,
                    "command": {
                        "program": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 139.1,
                    "readBytes": 98173,
                    "writtenBytes": 8750,
                    "memoryInBytes": 0
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_80",
                    "runtimeInSeconds": 0.028,
                    "command": {
                        "program": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MaxBin2-test_minigut.002.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 123.1,
                    "readBytes": 335245,
                    "writtenBytes": 809144,
                    "memoryInBytes": 2981888
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_79",
                    "runtimeInSeconds": 0.031,
                    "command": {
                        "program": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MaxBin2-test_minigut.001.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 115.9,
                    "readBytes": 370910,
                    "writtenBytes": 927466,
                    "memoryInBytes": 2985984
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_82",
                    "runtimeInSeconds": 0.072,
                    "command": {
                        "program": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MaxBin2-test_minigut.002.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 72.2,
                    "readBytes": 351270,
                    "writtenBytes": 861160,
                    "memoryInBytes": 3715072
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_81",
                    "runtimeInSeconds": 0.1,
                    "command": {
                        "program": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MaxBin2-test_minigut.001.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 29.6,
                    "readBytes": 361994,
                    "writtenBytes": 897929,
                    "memoryInBytes": 3579904
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS_83",
                    "runtimeInSeconds": 0.018,
                    "command": {
                        "program": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MaxBin2-test_minigut_sample2.001.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 86.5,
                    "readBytes": 148820,
                    "writtenBytes": 183082,
                    "memoryInBytes": 2981888
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_85",
                    "runtimeInSeconds": 0.016,
                    "command": {
                        "program": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 136.2,
                    "readBytes": 96496,
                    "writtenBytes": 3498,
                    "memoryInBytes": 0
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS_84",
                    "runtimeInSeconds": 0.016,
                    "command": {
                        "program": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 145.5,
                    "readBytes": 96585,
                    "writtenBytes": 3746,
                    "memoryInBytes": 0
                },
                {
                    "id": "NFCORE_MAG.MAG.PROKKA_94",
                    "runtimeInSeconds": 201.0,
                    "command": {
                        "program": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MaxBin2-test_minigut.002 \\\n         \\\n         \\\n        MEGAHIT-MaxBin2-test_minigut.002.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 90.8,
                    "readBytes": 6208626770,
                    "writtenBytes": 35341334,
                    "memoryInBytes": 247791616
                },
                {
                    "id": "NFCORE_MAG.MAG.PROKKA_88",
                    "runtimeInSeconds": 252.0,
                    "command": {
                        "program": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MetaBAT2-test_minigut.1 \\\n         \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 93.3,
                    "readBytes": 18429426778,
                    "writtenBytes": 34685620,
                    "memoryInBytes": 150953984
                },
                {
                    "id": "NFCORE_MAG.MAG.PROKKA_90",
                    "runtimeInSeconds": 241.0,
                    "command": {
                        "program": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MetaBAT2-test_minigut.1 \\\n         \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 93.3,
                    "readBytes": 16939225162,
                    "writtenBytes": 32519082,
                    "memoryInBytes": 129282048
                },
                {
                    "id": "NFCORE_MAG.MAG.PROKKA_98",
                    "runtimeInSeconds": 226.0,
                    "command": {
                        "program": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MaxBin2-test_minigut.002 \\\n         \\\n         \\\n        SPAdes-MaxBin2-test_minigut.002.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 93.3,
                    "readBytes": 6097044355,
                    "writtenBytes": 36740743,
                    "memoryInBytes": 112082944
                },
                {
                    "id": "NFCORE_MAG.MAG.PROKKA_96",
                    "runtimeInSeconds": 281.0,
                    "command": {
                        "program": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MaxBin2-test_minigut.001 \\\n         \\\n         \\\n        MEGAHIT-MaxBin2-test_minigut.001.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 93.1,
                    "readBytes": 21769610986,
                    "writtenBytes": 37545488,
                    "memoryInBytes": 119824384
                },
                {
                    "id": "NFCORE_MAG.MAG.PROKKA_101",
                    "runtimeInSeconds": 51.0,
                    "command": {
                        "program": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MaxBin2-test_minigut_sample2.001 \\\n         \\\n         \\\n        SPAdes-MaxBin2-test_minigut_sample2.001.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 90.0,
                    "readBytes": 5456705085,
                    "writtenBytes": 17161079,
                    "memoryInBytes": 98078720
                },
                {
                    "id": "NFCORE_MAG.MAG.PROKKA_99",
                    "runtimeInSeconds": 290.0,
                    "command": {
                        "program": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MaxBin2-test_minigut.001 \\\n         \\\n         \\\n        SPAdes-MaxBin2-test_minigut.001.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 93.2,
                    "readBytes": 21515310705,
                    "writtenBytes": 36466404,
                    "memoryInBytes": 130396160
                },
                {
                    "id": "NFCORE_MAG.MAG.PROKKA_87",
                    "runtimeInSeconds": 176.0,
                    "command": {
                        "program": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MetaBAT2-test_minigut.2 \\\n         \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 93.1,
                    "readBytes": 4849673137,
                    "writtenBytes": 33373720,
                    "memoryInBytes": 247533568
                },
                {
                    "id": "NFCORE_MAG.MAG.PROKKA_92",
                    "runtimeInSeconds": 226.0,
                    "command": {
                        "program": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MetaBAT2-test_minigut.2 \\\n         \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 93.1,
                    "readBytes": 6052811598,
                    "writtenBytes": 36740984,
                    "memoryInBytes": 143466496
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_95",
                    "runtimeInSeconds": 25.829,
                    "command": {
                        "program": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MaxBin2-test_minigut.002.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log 2> MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log.\"\n                echo -e \"MEGAHIT-MaxBin2-test_minigut.002.fa\tNo genes\" > \"MEGAHIT-MaxBin2-test_minigut.002.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err.\"\n        echo -e \"MEGAHIT-MaxBin2-test_minigut.002.fa\tNo genes\" > \"MEGAHIT-MaxBin2-test_minigut.002.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MaxBin2-test_minigut.002.fa\tPlacements failed\" > \"MEGAHIT-MaxBin2-test_minigut.002.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MaxBin2-test_minigut.002.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 46.0,
                    "readBytes": 210339688,
                    "writtenBytes": 131256276,
                    "memoryInBytes": 126857216
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_100",
                    "runtimeInSeconds": 18.007,
                    "command": {
                        "program": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MaxBin2-test_minigut.002.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MaxBin2-test_minigut.002.fa_busco.log 2> SPAdes-MaxBin2-test_minigut.002.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MaxBin2-test_minigut.002.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MaxBin2-test_minigut.002.fa_busco.log.\"\n                echo -e \"SPAdes-MaxBin2-test_minigut.002.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut.002.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.002.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MaxBin2-test_minigut.002.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.002.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MaxBin2-test_minigut.002.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MaxBin2-test_minigut.002.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.002.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MaxBin2-test_minigut.002.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.002.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MaxBin2-test_minigut.002.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MaxBin2-test_minigut.002.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut.002.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut.002.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MaxBin2-test_minigut.002.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MaxBin2-test_minigut.002.fa_busco.err.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut.002.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut.002.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.002.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MaxBin2-test_minigut.002.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MaxBin2-test_minigut.002.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut.002.fa\tPlacements failed\" > \"SPAdes-MaxBin2-test_minigut.002.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.002.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MaxBin2-test_minigut.002.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MaxBin2-test_minigut.002.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 69.9,
                    "readBytes": 215257364,
                    "writtenBytes": 131552951,
                    "memoryInBytes": 138940416
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_91",
                    "runtimeInSeconds": 19.21,
                    "command": {
                        "program": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MetaBAT2-test_minigut.1.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MetaBAT2-test_minigut.1.fa_busco.log 2> SPAdes-MetaBAT2-test_minigut.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MetaBAT2-test_minigut.1.fa_busco.log.\"\n                echo -e \"SPAdes-MetaBAT2-test_minigut.1.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MetaBAT2-test_minigut.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MetaBAT2-test_minigut.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MetaBAT2-test_minigut.1.fa_busco.err.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.1.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MetaBAT2-test_minigut.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MetaBAT2-test_minigut.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.1.fa\tPlacements failed\" > \"SPAdes-MetaBAT2-test_minigut.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MetaBAT2-test_minigut.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MetaBAT2-test_minigut.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 74.4,
                    "readBytes": 207387885,
                    "writtenBytes": 130929046,
                    "memoryInBytes": 139857920
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_102",
                    "runtimeInSeconds": 21.281,
                    "command": {
                        "program": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MaxBin2-test_minigut.001.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MaxBin2-test_minigut.001.fa_busco.log 2> SPAdes-MaxBin2-test_minigut.001.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MaxBin2-test_minigut.001.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MaxBin2-test_minigut.001.fa_busco.log.\"\n                echo -e \"SPAdes-MaxBin2-test_minigut.001.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut.001.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.001.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MaxBin2-test_minigut.001.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.001.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MaxBin2-test_minigut.001.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MaxBin2-test_minigut.001.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.001.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MaxBin2-test_minigut.001.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.001.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MaxBin2-test_minigut.001.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MaxBin2-test_minigut.001.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut.001.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut.001.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MaxBin2-test_minigut.001.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MaxBin2-test_minigut.001.fa_busco.err.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut.001.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut.001.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.001.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MaxBin2-test_minigut.001.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MaxBin2-test_minigut.001.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut.001.fa\tPlacements failed\" > \"SPAdes-MaxBin2-test_minigut.001.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.001.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MaxBin2-test_minigut.001.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MaxBin2-test_minigut.001.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 75.8,
                    "readBytes": 216474207,
                    "writtenBytes": 131571642,
                    "memoryInBytes": 140537856
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_89",
                    "runtimeInSeconds": 20.211,
                    "command": {
                        "program": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MetaBAT2-test_minigut.1.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log 2> MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log.\"\n                echo -e \"MEGAHIT-MetaBAT2-test_minigut.1.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.1.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.1.fa\tPlacements failed\" > \"MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MetaBAT2-test_minigut.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 75.3,
                    "readBytes": 209101116,
                    "writtenBytes": 131029835,
                    "memoryInBytes": 139149312
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_86",
                    "runtimeInSeconds": 16.446,
                    "command": {
                        "program": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MetaBAT2-test_minigut.2.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log 2> MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log.\"\n                echo -e \"MEGAHIT-MetaBAT2-test_minigut.2.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.2.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.2.fa\tPlacements failed\" > \"MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MetaBAT2-test_minigut.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 70.8,
                    "readBytes": 206224547,
                    "writtenBytes": 130936193,
                    "memoryInBytes": 137428992
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_97",
                    "runtimeInSeconds": 21.189,
                    "command": {
                        "program": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MaxBin2-test_minigut.001.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log 2> MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log.\"\n                echo -e \"MEGAHIT-MaxBin2-test_minigut.001.fa\tNo genes\" > \"MEGAHIT-MaxBin2-test_minigut.001.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err.\"\n        echo -e \"MEGAHIT-MaxBin2-test_minigut.001.fa\tNo genes\" > \"MEGAHIT-MaxBin2-test_minigut.001.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MaxBin2-test_minigut.001.fa\tPlacements failed\" > \"MEGAHIT-MaxBin2-test_minigut.001.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MaxBin2-test_minigut.001.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 75.3,
                    "readBytes": 214976466,
                    "writtenBytes": 131440457,
                    "memoryInBytes": 140124160
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_93",
                    "runtimeInSeconds": 18.246,
                    "command": {
                        "program": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MetaBAT2-test_minigut.2.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MetaBAT2-test_minigut.2.fa_busco.log 2> SPAdes-MetaBAT2-test_minigut.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MetaBAT2-test_minigut.2.fa_busco.log.\"\n                echo -e \"SPAdes-MetaBAT2-test_minigut.2.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MetaBAT2-test_minigut.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MetaBAT2-test_minigut.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MetaBAT2-test_minigut.2.fa_busco.err.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.2.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MetaBAT2-test_minigut.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MetaBAT2-test_minigut.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.2.fa\tPlacements failed\" > \"SPAdes-MetaBAT2-test_minigut.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MetaBAT2-test_minigut.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MetaBAT2-test_minigut.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 72.1,
                    "readBytes": 214947326,
                    "writtenBytes": 131530487,
                    "memoryInBytes": 138792960
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_103",
                    "runtimeInSeconds": 12.702,
                    "command": {
                        "program": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MaxBin2-test_minigut_sample2.001.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log 2> SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log.\"\n                echo -e \"SPAdes-MaxBin2-test_minigut_sample2.001.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut_sample2.001.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut_sample2.001.fa\tPlacements failed\" > \"SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MaxBin2-test_minigut_sample2.001.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 61.5,
                    "readBytes": 175941475,
                    "writtenBytes": 128946978,
                    "memoryInBytes": 131776511
                },
                {
                    "id": "NFCORE_MAG.MAG.PROKKA_104",
                    "runtimeInSeconds": 22.0,
                    "command": {
                        "program": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MetaBAT2-test_minigut.unbinned.1 \\\n         \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 70.5,
                    "readBytes": 896824952,
                    "writtenBytes": 12219537,
                    "memoryInBytes": 87420928
                },
                {
                    "id": "NFCORE_MAG.MAG.PROKKA_106",
                    "runtimeInSeconds": 16.0,
                    "command": {
                        "program": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MetaBAT2-test_minigut.unbinned.2 \\\n         \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 81.3,
                    "readBytes": 839419653,
                    "writtenBytes": 11827890,
                    "memoryInBytes": 86831104
                },
                {
                    "id": "NFCORE_MAG.MAG.PROKKA_111",
                    "runtimeInSeconds": 9.0,
                    "command": {
                        "program": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2 \\\n         \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 79.2,
                    "readBytes": 246201835,
                    "writtenBytes": 10600375,
                    "memoryInBytes": 89894912
                },
                {
                    "id": "NFCORE_MAG.MAG.PROKKA_113",
                    "runtimeInSeconds": 25.0,
                    "command": {
                        "program": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MetaBAT2-test_minigut.unbinned.2 \\\n         \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.unbinned.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 85.8,
                    "readBytes": 1116259061,
                    "writtenBytes": 12797692,
                    "memoryInBytes": 96534528
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_110",
                    "runtimeInSeconds": 11.517,
                    "command": {
                        "program": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log 2> MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log.\"\n                echo -e \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa\tPlacements failed\" > \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 57.2,
                    "readBytes": 162474160,
                    "writtenBytes": 127865228,
                    "memoryInBytes": 135233536
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_112",
                    "runtimeInSeconds": 12.182,
                    "command": {
                        "program": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MetaBAT2-test_minigut.unbinned.2.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log 2> SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log.\"\n                echo -e \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa\tPlacements failed\" > \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 60.6,
                    "readBytes": 164982129,
                    "writtenBytes": 128022276,
                    "memoryInBytes": 171331584
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_118",
                    "runtimeInSeconds": 10.912,
                    "command": {
                        "program": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log 2> SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log.\"\n                echo -e \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa\tPlacements failed\" > \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 60.8,
                    "readBytes": 162795334,
                    "writtenBytes": 127887918,
                    "memoryInBytes": 121188352
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_107",
                    "runtimeInSeconds": 11.584,
                    "command": {
                        "program": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log 2> MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log.\"\n                echo -e \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa\tPlacements failed\" > \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 60.6,
                    "readBytes": 163394772,
                    "writtenBytes": 127938358,
                    "memoryInBytes": 171102208
                },
                {
                    "id": "NFCORE_MAG.MAG.QUAST_BINS_117",
                    "runtimeInSeconds": 25.256,
                    "command": {
                        "program": "BINS=$(echo \"MEGAHIT-MetaBAT2-test_minigut.2.fa MEGAHIT-MetaBAT2-test_minigut.1.fa MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/MEGAHIT-MetaBAT2-test_minigut-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/MEGAHIT-MetaBAT2-test_minigut-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/MEGAHIT-MetaBAT2-test_minigut-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 80.2,
                    "readBytes": 386548885,
                    "writtenBytes": 18719364,
                    "memoryInBytes": 112857088
                },
                {
                    "id": "NFCORE_MAG.MAG.QUAST_BINS_137",
                    "runtimeInSeconds": 12.055,
                    "command": {
                        "program": "BINS=$(echo \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/SPAdes-MetaBAT2-test_minigut_sample2-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/SPAdes-MetaBAT2-test_minigut_sample2-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/SPAdes-MetaBAT2-test_minigut_sample2-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 86.2,
                    "readBytes": 242460867,
                    "writtenBytes": 8631947,
                    "memoryInBytes": 148332544
                },
                {
                    "id": "NFCORE_MAG.MAG.QUAST_BINS_124",
                    "runtimeInSeconds": 14.87,
                    "command": {
                        "program": "BINS=$(echo \"MEGAHIT-MaxBin2-test_minigut.002.fa MEGAHIT-MaxBin2-test_minigut.001.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/MEGAHIT-MaxBin2-test_minigut-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/MEGAHIT-MaxBin2-test_minigut-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/MEGAHIT-MaxBin2-test_minigut-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 87.9,
                    "readBytes": 204599884,
                    "writtenBytes": 10363684,
                    "memoryInBytes": 293257216
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_114",
                    "runtimeInSeconds": 14.089,
                    "command": {
                        "program": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MetaBAT2-test_minigut.unbinned.1.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log 2> SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log.\"\n                echo -e \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa\tPlacements failed\" > \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 67.0,
                    "readBytes": 167537437,
                    "writtenBytes": 128249990,
                    "memoryInBytes": 171896832
                },
                {
                    "id": "NFCORE_MAG.MAG.QUAST_BINS_123",
                    "runtimeInSeconds": 25.315,
                    "command": {
                        "program": "BINS=$(echo \"SPAdes-MetaBAT2-test_minigut.1.fa SPAdes-MetaBAT2-test_minigut.2.fa SPAdes-MetaBAT2-test_minigut.unbinned.2.fa SPAdes-MetaBAT2-test_minigut.unbinned.1.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/SPAdes-MetaBAT2-test_minigut-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/SPAdes-MetaBAT2-test_minigut-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/SPAdes-MetaBAT2-test_minigut-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 92.1,
                    "readBytes": 489440048,
                    "writtenBytes": 18948250,
                    "memoryInBytes": 160481280
                },
                {
                    "id": "NFCORE_MAG.MAG.PROKKA_129",
                    "runtimeInSeconds": 12.0,
                    "command": {
                        "program": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1 \\\n         \\\n         \\\n        SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 75.1,
                    "readBytes": 602819013,
                    "writtenBytes": 11291235,
                    "memoryInBytes": 94433280
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_119",
                    "runtimeInSeconds": 10.903,
                    "command": {
                        "program": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log 2> SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log.\"\n                echo -e \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa\tPlacements failed\" > \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 61.2,
                    "readBytes": 162425074,
                    "writtenBytes": 127871834,
                    "memoryInBytes": 121352192
                },
                {
                    "id": "NFCORE_MAG.MAG.PROKKA_108",
                    "runtimeInSeconds": 7.0,
                    "command": {
                        "program": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1 \\\n         \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 78.0,
                    "readBytes": 63066377,
                    "writtenBytes": 1866359,
                    "memoryInBytes": 171573248
                },
                {
                    "id": "NFCORE_MAG.MAG.PROKKA_115",
                    "runtimeInSeconds": 41.0,
                    "command": {
                        "program": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MetaBAT2-test_minigut.unbinned.1 \\\n         \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.unbinned.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 89.5,
                    "readBytes": 2952679428,
                    "writtenBytes": 14381638,
                    "memoryInBytes": 103673856
                },
                {
                    "id": "NFCORE_MAG.MAG.PROKKA_125",
                    "runtimeInSeconds": 8.0,
                    "command": {
                        "program": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2 \\\n         \\\n         \\\n        SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 79.2,
                    "readBytes": 63066355,
                    "writtenBytes": 1868516,
                    "memoryInBytes": 161796096
                },
                {
                    "id": "NFCORE_MAG.MAG.PROKKA_130",
                    "runtimeInSeconds": 8.0,
                    "command": {
                        "program": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MaxBin2-test_minigut_sample2.noclass.2 \\\n         \\\n         \\\n        SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 83.1,
                    "readBytes": 154198812,
                    "writtenBytes": 10256015,
                    "memoryInBytes": 46931968
                },
                {
                    "id": "NFCORE_MAG.MAG.QUAST_BINS_127",
                    "runtimeInSeconds": 17.088,
                    "command": {
                        "program": "BINS=$(echo \"SPAdes-MaxBin2-test_minigut.002.fa SPAdes-MaxBin2-test_minigut.001.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/SPAdes-MaxBin2-test_minigut-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/SPAdes-MaxBin2-test_minigut-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/SPAdes-MaxBin2-test_minigut-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 84.7,
                    "readBytes": 253813082,
                    "writtenBytes": 10396176,
                    "memoryInBytes": 136884224
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_128",
                    "runtimeInSeconds": 11.358,
                    "command": {
                        "program": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log 2> SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log.\"\n                echo -e \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa\tPlacements failed\" > \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 58.0,
                    "readBytes": 162423447,
                    "writtenBytes": 127871650,
                    "memoryInBytes": 120889344
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_105",
                    "runtimeInSeconds": 12.29,
                    "command": {
                        "program": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log 2> MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log.\"\n                echo -e \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa\tPlacements failed\" > \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 61.5,
                    "readBytes": 163802383,
                    "writtenBytes": 127959478,
                    "memoryInBytes": 171003904
                },
                {
                    "id": "NFCORE_MAG.MAG.QUAST_BINS_136",
                    "runtimeInSeconds": 11.365,
                    "command": {
                        "program": "BINS=$(echo \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/MEGAHIT-MetaBAT2-test_minigut_sample2-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/MEGAHIT-MetaBAT2-test_minigut_sample2-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/MEGAHIT-MetaBAT2-test_minigut_sample2-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 80.8,
                    "readBytes": 189741711,
                    "writtenBytes": 8543863,
                    "memoryInBytes": 88023040
                },
                {
                    "id": "NFCORE_MAG.MAG.QUAST_BINS_135",
                    "runtimeInSeconds": 17.015,
                    "command": {
                        "program": "BINS=$(echo \"SPAdes-MaxBin2-test_minigut_sample2.001.fa SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/SPAdes-MaxBin2-test_minigut_sample2-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/SPAdes-MaxBin2-test_minigut_sample2-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/SPAdes-MaxBin2-test_minigut_sample2-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 89.2,
                    "readBytes": 369513817,
                    "writtenBytes": 13143014,
                    "memoryInBytes": 92942336
                },
                {
                    "id": "NFCORE_MAG.MAG.PROKKA_132",
                    "runtimeInSeconds": 9.0,
                    "command": {
                        "program": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MaxBin2-test_minigut_sample2.noclass.1 \\\n         \\\n         \\\n        SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 73.5,
                    "readBytes": 154639519,
                    "writtenBytes": 10287447,
                    "memoryInBytes": 58933248
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_109",
                    "runtimeInSeconds": 11.846,
                    "command": {
                        "program": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log 2> MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log.\"\n                echo -e \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa\tPlacements failed\" > \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 56.6,
                    "readBytes": 162383429,
                    "writtenBytes": 127865373,
                    "memoryInBytes": 121135104
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_121",
                    "runtimeInSeconds": 5.0,
                    "command": {
                        "program": "get_mag_depths.py --bins MEGAHIT-MaxBin2-test_minigut.002.fa MEGAHIT-MaxBin2-test_minigut.001.fa \\\n                    --depths MEGAHIT-test_minigut-depth.txt.gz \\\n                    --assembler MEGAHIT \\\n                    --id test_minigut \\\n                    --binner MaxBin2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 41.1,
                    "readBytes": 13720647,
                    "writtenBytes": 508,
                    "memoryInBytes": 67919872
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_131",
                    "runtimeInSeconds": 2.0,
                    "command": {
                        "program": "get_mag_depths.py --bins MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa \\\n                    --depths MEGAHIT-test_minigut_sample2-depth.txt.gz \\\n                    --assembler MEGAHIT \\\n                    --id test_minigut_sample2 \\\n                    --binner MetaBAT2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 76.4,
                    "readBytes": 12009413,
                    "writtenBytes": 545,
                    "memoryInBytes": 48979968
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_133",
                    "runtimeInSeconds": 2.0,
                    "command": {
                        "program": "get_mag_depths.py --bins SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa \\\n                    --depths SPAdes-test_minigut_sample2-depth.txt.gz \\\n                    --assembler SPAdes \\\n                    --id test_minigut_sample2 \\\n                    --binner MetaBAT2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 86.2,
                    "readBytes": 12066426,
                    "writtenBytes": 543,
                    "memoryInBytes": 57442304
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_134",
                    "runtimeInSeconds": 3.0,
                    "command": {
                        "program": "get_mag_depths.py --bins SPAdes-MaxBin2-test_minigut_sample2.001.fa SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa \\\n                    --depths SPAdes-test_minigut_sample2-depth.txt.gz \\\n                    --assembler SPAdes \\\n                    --id test_minigut_sample2 \\\n                    --binner MaxBin2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 73.5,
                    "readBytes": 12239539,
                    "writtenBytes": 597,
                    "memoryInBytes": 68112384
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_126",
                    "runtimeInSeconds": 2.0,
                    "command": {
                        "program": "get_mag_depths.py --bins SPAdes-MaxBin2-test_minigut.002.fa SPAdes-MaxBin2-test_minigut.001.fa \\\n                    --depths SPAdes-test_minigut-depth.txt.gz \\\n                    --assembler SPAdes \\\n                    --id test_minigut \\\n                    --binner MaxBin2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 87.5,
                    "readBytes": 13739941,
                    "writtenBytes": 522,
                    "memoryInBytes": 54366208
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_120",
                    "runtimeInSeconds": 2.0,
                    "command": {
                        "program": "get_mag_depths.py --bins MEGAHIT-MetaBAT2-test_minigut.2.fa MEGAHIT-MetaBAT2-test_minigut.1.fa MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa \\\n                    --depths MEGAHIT-test_minigut-depth.txt.gz \\\n                    --assembler MEGAHIT \\\n                    --id test_minigut \\\n                    --binner MetaBAT2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 68.2,
                    "readBytes": 13598214,
                    "writtenBytes": 617,
                    "memoryInBytes": 67248128
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_122",
                    "runtimeInSeconds": 2.0,
                    "command": {
                        "program": "get_mag_depths.py --bins SPAdes-MetaBAT2-test_minigut.1.fa SPAdes-MetaBAT2-test_minigut.2.fa SPAdes-MetaBAT2-test_minigut.unbinned.2.fa SPAdes-MetaBAT2-test_minigut.unbinned.1.fa \\\n                    --depths SPAdes-test_minigut-depth.txt.gz \\\n                    --assembler SPAdes \\\n                    --id test_minigut \\\n                    --binner MetaBAT2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 77.3,
                    "readBytes": 13723524,
                    "writtenBytes": 630,
                    "memoryInBytes": 50380800
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_116",
                    "runtimeInSeconds": 11.721,
                    "command": {
                        "program": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log 2> SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log.\"\n                echo -e \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa\tPlacements failed\" > \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 57.7,
                    "readBytes": 162396953,
                    "writtenBytes": 127866900,
                    "memoryInBytes": 120717312
                },
                {
                    "id": "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY_138",
                    "runtimeInSeconds": 0.26,
                    "command": {
                        "program": "QUAST_BIN=$(echo \"MEGAHIT-MetaBAT2-test_minigut-quast_summary.tsv SPAdes-MetaBAT2-test_minigut_sample2-quast_summary.tsv MEGAHIT-MaxBin2-test_minigut-quast_summary.tsv SPAdes-MetaBAT2-test_minigut-quast_summary.tsv SPAdes-MaxBin2-test_minigut-quast_summary.tsv MEGAHIT-MetaBAT2-test_minigut_sample2-quast_summary.tsv SPAdes-MaxBin2-test_minigut_sample2-quast_summary.tsv\" | sed 's/[][]//g')\n    IFS=', ' read -r -a quast_bin <<< \"$QUAST_BIN\"\n    for quast_file in \"${quast_bin[@]}\"; do\n        if ! [ -f \"quast_summary.tsv\" ]; then\n            cp \"${quast_file}\" \"quast_summary.tsv\"\n        else\n            tail -n +2 \"${quast_file}\" >> \"quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS_SUMMARY\":\n        sed: $(sed --version 2>&1 | sed -n 1p | sed 's/sed (GNU sed) //')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 15.2,
                    "readBytes": 147072,
                    "writtenBytes": 5021,
                    "memoryInBytes": 3129344
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_139",
                    "runtimeInSeconds": 10.0,
                    "command": {
                        "program": "plot_mag_depths.py --bin_depths MEGAHIT-MaxBin2-test_minigut-binDepths.tsv                     --groups sample_groups.tsv                     --out \"MEGAHIT-MaxBin2-test_minigut-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 41.5,
                    "readBytes": 34358475,
                    "writtenBytes": 20295,
                    "memoryInBytes": 126615552
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_140",
                    "runtimeInSeconds": 4.0,
                    "command": {
                        "program": "plot_mag_depths.py --bin_depths MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.tsv                     --groups sample_groups.tsv                     --out \"MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 90.1,
                    "readBytes": 35902700,
                    "writtenBytes": 22598,
                    "memoryInBytes": 127590400
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_141",
                    "runtimeInSeconds": 4.0,
                    "command": {
                        "program": "plot_mag_depths.py --bin_depths SPAdes-MetaBAT2-test_minigut_sample2-binDepths.tsv                     --groups sample_groups.tsv                     --out \"SPAdes-MetaBAT2-test_minigut_sample2-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 90.3,
                    "readBytes": 35861736,
                    "writtenBytes": 22933,
                    "memoryInBytes": 127578112
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_142",
                    "runtimeInSeconds": 4.0,
                    "command": {
                        "program": "plot_mag_depths.py --bin_depths SPAdes-MaxBin2-test_minigut_sample2-binDepths.tsv                     --groups sample_groups.tsv                     --out \"SPAdes-MaxBin2-test_minigut_sample2-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 89.2,
                    "readBytes": 38274333,
                    "writtenBytes": 30364,
                    "memoryInBytes": 124686336
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_143",
                    "runtimeInSeconds": 4.0,
                    "command": {
                        "program": "plot_mag_depths.py --bin_depths SPAdes-MaxBin2-test_minigut-binDepths.tsv                     --groups sample_groups.tsv                     --out \"SPAdes-MaxBin2-test_minigut-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 90.4,
                    "readBytes": 34059457,
                    "writtenBytes": 20105,
                    "memoryInBytes": 128696320
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_144",
                    "runtimeInSeconds": 4.0,
                    "command": {
                        "program": "plot_mag_depths.py --bin_depths MEGAHIT-MetaBAT2-test_minigut-binDepths.tsv                     --groups sample_groups.tsv                     --out \"MEGAHIT-MetaBAT2-test_minigut-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 90.7,
                    "readBytes": 38901028,
                    "writtenBytes": 29788,
                    "memoryInBytes": 127959040
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT_145",
                    "runtimeInSeconds": 4.0,
                    "command": {
                        "program": "plot_mag_depths.py --bin_depths SPAdes-MetaBAT2-test_minigut-binDepths.tsv                     --groups sample_groups.tsv                     --out \"SPAdes-MetaBAT2-test_minigut-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 91.4,
                    "readBytes": 38589743,
                    "writtenBytes": 28900,
                    "memoryInBytes": 130236416
                },
                {
                    "id": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY_146",
                    "runtimeInSeconds": 4.0,
                    "command": {
                        "program": "get_mag_depths_summary.py --depths MEGAHIT-MaxBin2-test_minigut-binDepths.tsv MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.tsv SPAdes-MetaBAT2-test_minigut_sample2-binDepths.tsv SPAdes-MaxBin2-test_minigut_sample2-binDepths.tsv SPAdes-MaxBin2-test_minigut-binDepths.tsv MEGAHIT-MetaBAT2-test_minigut-binDepths.tsv SPAdes-MetaBAT2-test_minigut-binDepths.tsv                             --out \"bin_depths_summary.tsv\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_SUMMARY\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 35.7,
                    "readBytes": 10393292,
                    "writtenBytes": 1525,
                    "memoryInBytes": 59297792
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_147",
                    "runtimeInSeconds": 10.764,
                    "command": {
                        "program": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.002.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.002.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.001.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).MEGAHIT-([_[:alnum:]]+)-test_minigut.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"MEGAHIT-${BASH_REMATCH[3]}-test_minigut.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).MEGAHIT-([_[:alnum:]]+)-test_minigut.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"MEGAHIT-MaxBin2-test_minigut.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"MEGAHIT-MaxBin2-test_minigut.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 61.9,
                    "readBytes": 40377987,
                    "writtenBytes": 171821,
                    "memoryInBytes": 156749824
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_153",
                    "runtimeInSeconds": 7.729,
                    "command": {
                        "program": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).MEGAHIT-([_[:alnum:]]+)-test_minigut_sample2.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"MEGAHIT-${BASH_REMATCH[3]}-test_minigut_sample2.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).MEGAHIT-([_[:alnum:]]+)-test_minigut_sample2.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"MEGAHIT-MetaBAT2-test_minigut_sample2.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"MEGAHIT-MetaBAT2-test_minigut_sample2.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 83.3,
                    "readBytes": 40377172,
                    "writtenBytes": 112655,
                    "memoryInBytes": 161546240
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_149",
                    "runtimeInSeconds": 7.68,
                    "command": {
                        "program": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.002.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.001.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.002.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.001.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"SPAdes-${BASH_REMATCH[3]}-test_minigut.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"SPAdes-MaxBin2-test_minigut.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"SPAdes-MaxBin2-test_minigut.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 82.9,
                    "readBytes": 40376943,
                    "writtenBytes": 120156,
                    "memoryInBytes": 162091008
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_151",
                    "runtimeInSeconds": 7.612,
                    "command": {
                        "program": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).MEGAHIT-([_[:alnum:]]+)-test_minigut.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"MEGAHIT-${BASH_REMATCH[3]}-test_minigut.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).MEGAHIT-([_[:alnum:]]+)-test_minigut.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"MEGAHIT-MetaBAT2-test_minigut.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"MEGAHIT-MetaBAT2-test_minigut.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 83.0,
                    "readBytes": 40394067,
                    "writtenBytes": 154160,
                    "memoryInBytes": 160497664
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_152",
                    "runtimeInSeconds": 7.804,
                    "command": {
                        "program": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut_sample2.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"SPAdes-${BASH_REMATCH[3]}-test_minigut_sample2.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut_sample2.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"SPAdes-MaxBin2-test_minigut_sample2.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"SPAdes-MaxBin2-test_minigut_sample2.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 82.8,
                    "readBytes": 40385747,
                    "writtenBytes": 139680,
                    "memoryInBytes": 162029568
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_150",
                    "runtimeInSeconds": 7.993,
                    "command": {
                        "program": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"SPAdes-${BASH_REMATCH[3]}-test_minigut.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"SPAdes-MetaBAT2-test_minigut.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"SPAdes-MetaBAT2-test_minigut.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 82.5,
                    "readBytes": 40393986,
                    "writtenBytes": 155714,
                    "memoryInBytes": 160849920
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT_154",
                    "runtimeInSeconds": 7.622,
                    "command": {
                        "program": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut_sample2.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"SPAdes-${BASH_REMATCH[3]}-test_minigut_sample2.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut_sample2.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"SPAdes-MetaBAT2-test_minigut_sample2.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"SPAdes-MetaBAT2-test_minigut_sample2.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 80.6,
                    "readBytes": 40377155,
                    "writtenBytes": 113609,
                    "memoryInBytes": 160735232
                },
                {
                    "id": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY_148",
                    "runtimeInSeconds": 1.0,
                    "command": {
                        "program": "summary_busco.py  -ss short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.001.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.002.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.001.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.002.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.1.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt   -o busco_summary.tsv\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_SUMMARY\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 75.0,
                    "readBytes": 10440802,
                    "writtenBytes": 2162,
                    "memoryInBytes": 53166080
                },
                {
                    "id": "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS_155",
                    "runtimeInSeconds": 0.745,
                    "command": {
                        "program": "def args = task.ext.args ?: ''\ntemplate 'dumpsoftwareversions.py'",
                        "arguments": []
                    },
                    "avgCPU": 32.7,
                    "readBytes": 939883,
                    "writtenBytes": 7708,
                    "memoryInBytes": 1785856
                },
                {
                    "id": "NFCORE_MAG.MAG.BIN_SUMMARY_156",
                    "runtimeInSeconds": 2.0,
                    "command": {
                        "program": "combine_tables.py --depths_summary bin_depths_summary.tsv                     --busco_summary busco_summary.tsv                     --quast_summary quast_summary.tsv                                          --out bin_summary.tsv\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BIN_SUMMARY\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 63.4,
                    "readBytes": 10401764,
                    "writtenBytes": 6390,
                    "memoryInBytes": 60579840
                },
                {
                    "id": "NFCORE_MAG.MAG.MULTIQC_157",
                    "runtimeInSeconds": 113.025,
                    "command": {
                        "program": "multiqc -f  .\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:MULTIQC\":\n            multiqc: $( multiqc --version | sed -e \"s/multiqc, version //g\" )\n        END_VERSIONS",
                        "arguments": []
                    },
                    "avgCPU": 89.9,
                    "readBytes": 1228869392,
                    "writtenBytes": 12125665,
                    "memoryInBytes": 161636352
                }
            ],
            "machines": [
                {
                    "nodeName": "dirt02",
                    "system": "linux",
                    "release": "5.15.0-48-generic",
                    "architecture": "x86_64",
                    "cpu": {
                        "coreCount": 1,
                        "speedInMHz": 2400
                    }
                }
            ]
        }
    },
    "runtimeSystem": {
        "name": "Nextflow",
        "url": "https://www.nextflow.io/",
        "version": "23.04.1"
    }
}